{"version":3,"file":"static/js/47.9705d077.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Chart = styled.div`\n  max-width: 640px;\n  height: 413px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding: 40px 14px 30px 14px;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  font-size:14px;\n  @media (min-width: 768px) {\n    max-width: 860px;\n    height: 424px;\n    padding: 32px 32px 10px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n    height: 440px;\n    padding: 40px 40px 15px 40px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  LabelList,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Chart } from \"./StatisticsChart.styled\";\n\nexport const StatisticsChart = ({\n  todoByDayPer,\n  inprogressByDayPer,\n  doneByDayPer,\n  todoByMPer,\n  inprogressByMPer,\n  doneByMPer,\n  currentTheme,\n}) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const qwe = [\n      {\n        name: \"To Do\",\n        ByDay: todoByDayPer,\n        ByMonth: todoByMPer,\n        amt: 2400,\n      },\n      {\n        name: \"In Progress\",\n        ByDay: inprogressByDayPer,\n        ByMonth: inprogressByMPer,\n        amt: 2210,\n      },\n      {\n        name: \"Done\",\n        ByDay: doneByDayPer,\n        ByMonth: doneByMPer,\n        amt: 2290,\n      },\n    ];\n    setData(qwe);\n  }, [\n    todoByDayPer,\n    todoByMPer,\n    inprogressByDayPer,\n    inprogressByMPer,\n    doneByDayPer,\n    doneByMPer,\n  ]);\n\n  const renderCustomizedLabel = (props) => {\n    const { x, y, width, value } = props;\n    const radius = 15;\n    const valX = x + 2 + width / 2;\n    let valY;\n\n    if (value === 100) {\n      valY = y + radius;\n    } else {\n      valY = y - radius;\n    }\n    return currentTheme ? (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <>\n      {data.length > 0 && (\n        <Chart>\n          <ResponsiveContainer height=\"90%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              barCategoryGap=\"25%\"\n              barGap=\"15%\"\n              // barSize={27}\n              // barSize={isMobile? 15: 27}\n            >\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <defs>\n                <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <CartesianGrid vertical={false} />\n              <XAxis dataKey=\"name\" tickLine={false} tickMargin={14}  />\n\n              <YAxis\n                width={25}\n                type=\"number\"\n                domain={[0, 100]}\n                position=\"left\"\n                axisLine={false}\n                tickLine={false}\n                tickMargin={8}\n              >\n                <Label value=\"Tasks\" position=\"left\"  angle={-90} offset={14} />\n              </YAxis>\n              <Bar dataKey=\"ByDay\" fill=\"url(#colorUv)\" radius={[0, 0, 10, 10]}>\n                <LabelList\n                  dataKey=\"ByDay\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n              <Bar\n                dataKey=\"ByMonth\"\n                fill=\"url(#colorUv1)\"\n                radius={[0, 0, 10, 10]}\n              >\n                <LabelList\n                  dataKey=\"ByMonth\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Chart>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const Container = styled.section`\n  max-width: 704px;\n  height: 864px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 24px;\n  padding-bottom: 135px;\n\n  @media (min-width: 768px) {\n    max-width: 1087px;\n    height: 854px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 132px;\n    padding-bottom: 224px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1087px;\n    height: 752px;\n    padding-left: 113px;\n    padding-right: 114px;\n    padding-top: 134px;\n    padding-bottom: 104px;\n  }\n`;\n\nexport const Title = styled.h1`\ndisplay:none;\n`","import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport const LegendList = styled.ul`\n  display: flex;\n  gap: 30px;\n  color: ${({ theme }) => theme.variableColors.text};\n  padding-inline-start: 0px;\n   li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const ChartHead = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* max-width: 307px; */\n  justify-content: space-between;\n  margin-bottom: 40px;\n  max-width: 640px;\n  margin-left:auto;\n  margin-right: auto;\n  @media (min-width: 768px) {\n    max-width: 860px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n  }\n`;\nexport const PrevDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  }\n`;\nexport const NextDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  }\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media (max-width: 767.9px) {\n    width: 100%;\n  }\n`;\nexport const ButtDiv = styled.div`\n  display: flex;\n  @media (min-width: 768px) {\n    margin-left: 8px;\n  }\n`;\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 121px;\n  height: 30px;\n  border: ${({ hasError, success }) => {\n    if (hasError) {\n      return \"var(--border-auth-error)\";\n    }\n    if (success) {\n      return \"var(--border-auth-correct)\";\n    }\n    return \"var(--border)\";\n  }};\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 6px 12px 6px 12px;\n  box-sizing: border-box;\n  color: white;\n  background-color: #3e85f3;\n  text-align: center;\n\n  /* :focus-visible {\n    outline: none;\n    border: var(--border-input-hover);\n    border-radius: 8px;\n  } */\n\n  @media screen and (min-width: 768px) {\n    width: 145px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 8px 12px 8px 12px;\n  }\n\n  transition: border var(--animation);\n\n  :hover,\n  :focus {\n    border: ${({ hasError, success }) => {\n      if (hasError) {\n        return \"var(--border-auth-error)\";\n      }\n      if (success) {\n        return \"var(--border-auth-correct)\";\n      }\n      return \"var(--border-input-hover)\";\n    }};\n  }\n`;\n","\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from \"react-icons/md\";\n\nimport {\n  StyledDatePicker,\n  DatePickerWrapper,\n  DataContainer,\n  PrevDayButton,\n  NextDayButton,\n  LegendList,\n  ChartHead,\n  ButtDiv,\n} from \"./StatisticsHead.styled\";\nimport { TbPointFilled } from \"react-icons/tb\";\n\n\nexport const StatisticsHead = ({\n  selectedDate,\n  setSelectedDate,\n  handlePreviousDay,\n  handleNextDay,\n}) => {\n\n  return (\n    <ChartHead>\n      <DataContainer>\n        <DatePickerWrapper>\n          <StyledDatePicker\n            selected={selectedDate}\n            onChange={(date) => setSelectedDate(date)}\n            dateFormat=\"d MMMM yyyy \"\n          />\n        </DatePickerWrapper>\n        <ButtDiv>\n          <PrevDayButton onClick={handlePreviousDay}>\n            <MdOutlineKeyboardArrowLeft />\n          </PrevDayButton>\n          <NextDayButton onClick={handleNextDay}>\n            <MdOutlineKeyboardArrowRight />\n          </NextDayButton>\n        </ButtDiv>\n      </DataContainer>\n      <LegendList>\n        <li>\n          <TbPointFilled color=\"#FFD2DD\" size={20} />\n          <span>By Day</span>\n        </li>\n        <li>\n          <TbPointFilled color=\"#3E85F3\" size={20} />\n          <span>By Month</span>\n        </li>\n      </LegendList>\n    </ChartHead>\n  );\n};\n\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectMonthTasks, selectDayTasks } from \"redux/tasks/selectors\";\nimport { Container, Title } from \"./StatisticsPage.styled\";\nimport { StatisticsHead } from \"components/StatisticsPage/StatisticsChart/StatisticsHead\";\nimport { getTasksByMonth, getTasksByDay } from \"redux/tasks/operations\";\n\n\nfunction StatisticsPage() {\n\n const [selectedDate, setSelectedDate] = useState(new Date());\n\n const handlePreviousDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() - 1);\n   setSelectedDate(newDate);\n };\n\n const handleNextDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() + 1);\n   setSelectedDate(newDate);\n };\n\n const dispatch = useDispatch();\n  \n const paramsM = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n  \n const paramsD = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n     day: `${selectedDate.getDate()}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n\n\n useEffect(() => {\n  \n   dispatch(getTasksByDay(paramsD));\n }, [paramsD, dispatch]);\n   useEffect(() => {\n     dispatch(getTasksByMonth(paramsM));\n    \n   }, [paramsM, dispatch]);\n\n\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n  const tasksM = useSelector(selectMonthTasks);\n  const tasksD = useSelector(selectDayTasks);\n\n  const todoByM = tasksM.filter((task) => task.category === \"To do\").length ;\nconst inprogressByM = tasksM.filter((task) => task.category === \"In progress\").length;\nconst doneByM = tasksM.filter((task) => task.category === \"Done\").length;\n\nconst todoByDay = tasksD.filter((task) => task.category === \"To do\").length;\nconst inprogressByDay = tasksD.filter((task) => task.category === \"In progress\").length;\n  const doneByDay = tasksD.filter((task) => task.category === \"Done\").length;\n  \n\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100) || 0;\n  const inprogressByDayPer =\n    Math.round((inprogressByDay / allTasksByDay) * 100) || 0;\n  const doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100) || 0;\n\n \n  const allTasksByM = todoByM + inprogressByM + doneByM;\n  const todoByMPer = Math.round((todoByM / allTasksByM) * 100) || 0;\n  const inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100) || 0;\n  const doneByMPer = Math.round((doneByM / allTasksByM) * 100) || 0;\n\n  return (\n    <>\n      <Container>\n      <Title>Statistics</Title>\n        <StatisticsHead\n         selectedDate={selectedDate}\n         setSelectedDate={setSelectedDate}\n         handlePreviousDay={handlePreviousDay}\n         handleNextDay={handleNextDay}\n        />\n        <StatisticsChart\n          todoByDayPer={todoByDayPer}\n          inprogressByDayPer={inprogressByDayPer}\n          doneByDayPer={doneByDayPer}\n          todoByMPer={todoByMPer}\n          inprogressByMPer={inprogressByMPer}\n          doneByMPer={doneByMPer}\n          currentTheme={currentTheme}\n        />\n      </Container>\n    </>\n  );\n}\n\nStatisticsHead.propTypes = {\n  selectedDate: PropTypes.any,\n  setSelectedDate: PropTypes.func,\n  handlePreviousDay: PropTypes.func,\n  handleNextDay: PropTypes.func,\n};\nStatisticsChart.propTypes = {\n  todoByDayPer: PropTypes.number,\n  inprogressByDayPer: PropTypes.number,\n  doneByDayPer: PropTypes.number,\n  todoByMPer: PropTypes.number,\n  inprogressByMPer: PropTypes.number,\n  doneByMPer: PropTypes.number,\n  currentTheme: PropTypes.bool,\n};\n\nexport default StatisticsPage;\n"],"names":["Chart","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","variableColors","secondaryBackground","_ref2","borderColor","StatisticsChart","todoByDayPer","inprogressByDayPer","doneByDayPer","todoByMPer","inprogressByMPer","doneByMPer","currentTheme","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","name","ByDay","ByMonth","amt","renderCustomizedLabel","props","valY","x","y","width","value","valX","_jsx","children","fill","textAnchor","dominantBaseline","concat","_Fragment","length","ResponsiveContainer","height","_jsxs","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","angle","Bar","radius","LabelList","content","Container","section","Title","h1","_templateObject2","LegendList","ul","text","ChartHead","PrevDayButton","button","_templateObject3","_ref3","_ref4","buttonBlue","NextDayButton","_templateObject4","_ref5","_ref6","_ref7","DataContainer","_templateObject5","ButtDiv","_templateObject6","DatePickerWrapper","_templateObject7","StyledDatePicker","DatePicker","_templateObject8","_ref8","hasError","success","_ref9","StatisticsHead","selectedDate","setSelectedDate","handlePreviousDay","handleNextDay","selected","onChange","date","dateFormat","onClick","MdOutlineKeyboardArrowLeft","MdOutlineKeyboardArrowRight","TbPointFilled","color","size","propTypes","PropTypes","Date","dispatch","useDispatch","paramsM","useMemo","year","getFullYear","month","getMonth","padStart","paramsD","day","getDate","getTasksByDay","getTasksByMonth","useSelector","state","tasksM","selectMonthTasks","tasksD","selectDayTasks","todoByM","filter","task","category","inprogressByM","doneByM","todoByDay","inprogressByDay","doneByDay","allTasksByDay","Math","round","allTasksByM","newDate","setDate"],"sourceRoot":""}