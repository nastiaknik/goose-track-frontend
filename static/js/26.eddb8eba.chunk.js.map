{"version":3,"file":"static/js/26.eddb8eba.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/RegisterForm.js","components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.js","components/Auth/ResendEmailForm/ResendEmailForm.styled.jsx","components/Auth/ResendEmailForm/ResendEmailForm.jsx","assets/images/svg/arrow-right.svg","components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.js","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/PasswordStrangthIndicator/PasswordStrengthIndicator.styled.js","components/Auth/PasswordStrangthIndicator/PasswordStrengthIndicator.js","components/FormElements/FormInput/FormInput.styled.js","components/FormElements/FormInput/FormInput.js"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { RegisterSchema } from \"../../../helpers/formValidationSchemas\";\n\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\n\nimport { LuLogIn } from \"react-icons/lu\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport {\n  StyledForm,\n  Title,\n  SubmitBtn,\n  Wrapper,\n  GoogleLink,\n  Divider,\n} from \"./RegisterForm.styled\";\nimport LangSwitcher from \"components/LangSwitcher/LangSwitcher\";\n\nexport const RegisterForm = () => {\n  const { t } = useTranslation();\n  const [isSubmited, setIsSubmited] = useState(false);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n      setIsSubmited(false);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledForm>\n      <Wrapper>\n        <Title>{t(\"Sign Up\")}</Title>\n        <LangSwitcher />\n      </Wrapper>\n      <FormInput\n        text={t(\"Name\")}\n        name=\"username\"\n        type=\"text\"\n        placeholder={t(\"Enter your name\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text={t(\"Email\")}\n        name=\"email\"\n        type=\"email\"\n        placeholder={t(\"Enter email\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text={t(\"Password\")}\n        name=\"password\"\n        type=\"password\"\n        placeholder={t(\"Enter password\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n        validation\n      />\n      <SubmitBtn type=\"submit\" onClick={handleValidation}>\n        {t(\"Sign Up\")} <LuLogIn />\n      </SubmitBtn>\n      <Divider>or</Divider>\n      <GoogleLink href=\"https://goose-track-backend-i4mr.onrender.com/api/auth/google\">\n        Sign Up with Google <FcGoogle />\n      </GoogleLink>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  StyledForm,\n  Title,\n  SubmitBtn,\n  GoogleLink,\n  Divider,\n} from \"../RegisterForm/RegisterForm.styled\";\n\nexport const StyledLoginForm = styled(StyledForm)`\n  > label {\n    margin-top: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 18px;\n    }\n\n    :nth-child(2) {\n      margin-top: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-top: 40px;\n      }\n    }\n  }\n`;\n\nexport const LoginTitle = styled(Title)``;\n\nexport const LoginSubmitBtn = styled(SubmitBtn)``;\n\nexport const LoginGoogleLink = styled(GoogleLink)``;\n\nexport const LoginDivider = styled(Divider)``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { LoginSchema } from \"helpers/formValidationSchemas\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"redux/auth/operations\";\nimport { LuLogIn } from \"react-icons/lu\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport LangSwitcher from \"components/LangSwitcher/LangSwitcher\";\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport {\n  StyledLoginForm,\n  LoginTitle,\n  LoginSubmitBtn,\n  Wrapper,\n  LoginGoogleLink,\n  LoginDivider,\n} from \"./LoginForm.styled\";\n\nexport const LoginForm = () => {\n  const { t } = useTranslation();\n  const [isSubmited, setIsSubmited] = useState(false);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(login(values));\n      resetForm();\n      setIsSubmited(false);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledLoginForm>\n      <Wrapper>\n        <LoginTitle>{t(\"Log In\")}</LoginTitle>\n        <LangSwitcher />\n      </Wrapper>\n\n      <FormInput\n        text={t(\"Email\")}\n        name=\"email\"\n        type=\"email\"\n        placeholder={t(\"Enter email\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text={t(\"Password\")}\n        name=\"password\"\n        type=\"password\"\n        placeholder={t(\"Enter password\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <LoginSubmitBtn type=\"submit\" onClick={handleValidation}>\n        {t(\"Log In\")} <LuLogIn />\n      </LoginSubmitBtn>\n      <LoginDivider>or</LoginDivider>\n      <LoginGoogleLink href=\"https://goose-track-backend-i4mr.onrender.com/api/auth/google\">\n        Log In with Google <FcGoogle />\n      </LoginGoogleLink>\n    </StyledLoginForm>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  StyledForm,\n  Title,\n  SubmitBtn,\n} from \"../RegisterForm/RegisterForm.styled\";\n\nexport const EmailForm = styled(StyledForm)``;\n\nexport const EmailTitle = styled(Title)``;\n\nexport const EmailSubmitBtn = styled(SubmitBtn)`\n  :disabled {\n    background-color: var(--inactive-nav-text-color);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n`;\n","import { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nimport { useFormik } from \"formik\";\nimport { EmailSchema } from \"../../../helpers/formValidationSchemas\";\nimport { toast } from \"react-toastify\";\n\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport {\n  EmailForm,\n  EmailTitle,\n  EmailSubmitBtn,\n  Wrapper,\n} from \"./ResendEmailForm.styled\";\nimport LangSwitcher from \"components/LangSwitcher/LangSwitcher\";\n\nexport const ResendEmailForm = ({ userProblems }) => {\n  const { t } = useTranslation();\n  const [isSubmited, setIsSubmited] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      setIsDisabled(false);\n    }\n\n    seconds > 0 && setTimeout(() => setSeconds(seconds - 1), 1000);\n  }, [seconds]);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n    },\n    validationSchema: EmailSchema,\n    onSubmit: (values, { resetForm }) => {\n      const endpoint = userProblems === \"email\" ? \"activate\" : \"recovery\";\n\n      axios\n        .post(\n          `https://goose-track-backend-i4mr.onrender.com/api/auth/${endpoint}`,\n          values\n        )\n        .then((response) => toast.success(t(response.data.message)))\n        .catch((err) => toast.error(t(err.response.data.message)));\n\n      resetForm();\n      setIsSubmited(false);\n      setIsDisabled(true);\n      setSeconds(60);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <EmailForm>\n      <Wrapper>\n        <EmailTitle>\n          {userProblems === \"email\"\n            ? t(\"Email verification resend\")\n            : t(\"Enter your email\")}\n        </EmailTitle>\n        <LangSwitcher />\n      </Wrapper>\n      <FormInput\n        text={t(\"Email\")}\n        name=\"email\"\n        type=\"email\"\n        placeholder={t(\"Enter email\")}\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n\n      <EmailSubmitBtn\n        type=\"submit\"\n        disabled={isDisabled}\n        onClick={handleValidation}\n      >\n        {userProblems === \"email\"\n          ? isDisabled\n            ? t(`Resend email in {{seconds}} sec`, { seconds })\n            : t(\"Resend email\")\n          : isDisabled\n          ? t(`Resend recovery email in {{seconds}} sec`, { seconds })\n          : t(\"Send recovery email\")}\n      </EmailSubmitBtn>\n    </EmailForm>\n  );\n};\n\nResendEmailForm.propTypes = {\n  userProblems: PropTypes.string.isRequired,\n};\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Complete\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polyline\", {\n    \"data-name\": \"Right\",\n    fill: \"none\",\n    id: \"Right-2\",\n    points: \"16.4 7 21.5 12 16.4 17\",\n    stroke: \"#3e85f3\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 4,\n    x1: 2.5,\n    x2: 19.2,\n    y1: 12,\n    y2: 12\n  }))))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.1d2b9ce1518f07dcb3f7883cfd3d73e4.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport * as signupGooseImg from \"../../../assets/images/register/signup_goose-min.png\";\nimport * as bigSignupGooseImg from \"../../../assets/images/register/signup_goose@2x-min.png\";\nimport * as loginGooseImg from \"../../../assets/images/login/login_goose-min.png\";\nimport * as bigLoginGooseImg from \"../../../assets/images/login/login_goose@2x-min.png\";\nimport * as arrowSvg from \"../../../assets/images/svg/arrow-right.svg\";\n\nconst setBgImage = (currentPage) => {\n  return currentPage === \"/register\"\n    ? `url(${signupGooseImg.default})`\n    : `url(${loginGooseImg.default})`;\n};\n\nconst setBigBgImage = (currentPage) => {\n  return currentPage === \"/register\"\n    ? `url(${bigSignupGooseImg.default})`\n    : `url(${bigLoginGooseImg.default})`;\n};\n\nexport const Container = styled.section`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--auth-bg-color);\n\n  @media screen and (min-width: 1440px) {\n    background-image: ${(prop) => setBgImage(prop.currentPage)};\n    background-size: ${(prop) =>\n      prop.currentPage === \"/register\" ? \"400px 416px\" : \"368px 521px\"};\n    background-position: ${(prop) =>\n      prop.currentPage === \"/register\"\n        ? \"left 50px bottom 0\"\n        : \"right 60px bottom 19px\"};\n    background-repeat: no-repeat;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${(prop) => setBigBgImage(prop.currentPage)};\n    }\n  }\n`;\n\nexport const ContentThumb = styled.div`\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n\n  width: 100%;\n  padding: 0 20px;\n  text-align: center;\n\n  @media screen and (min-width: 375px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 480px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  margin-top: 18px;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--accent-bg-color);\n  text-decoration-line: underline;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  transition: color var(--animation);\n  :hover,\n  :focus {\n    color: var(--hover-btn-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n\nexport const StyledDetails = styled.details`\n  position: relative;\n  margin-top: 10px;\n  font-family: var(--primary-font);\n  font-weight: 600;\n  color: var(--accent-bg-color);\n  cursor: pointer;\n\n  > summary {\n    list-style: none;\n    font-size: 16px;\n    text-decoration-line: underline;\n\n    ::-webkit-details-marker {\n      display: none;\n    }\n\n    transition: color var(--animation);\n    :hover,\n    :focus {\n      color: var(--hover-btn-bg-color);\n    }\n  }\n`;\n\nexport const DetailsList = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const StyledOption = styled.li`\n  position: relative;\n  width: 100%;\n  font-size: 14px;\n  display: inline-block;\n  margin-top: 10px;\n\n  ::before {\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    transform: translate(50%, -50%);\n\n    content: \" \";\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    background-image: url(${arrowSvg.default});\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    opacity: 0;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  ::after {\n    position: absolute;\n    top: 50%;\n    right: 25%;\n\n    content: \" \";\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    background-image: url(${arrowSvg.default});\n    background-size: contain;\n    background-repeat: no-repeat;\n    transform: rotate(180deg) translate(0, 50%);\n\n    opacity: 0;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  transition: color var(--animation);\n  :hover,\n  :focus {\n    color: var(--hover-btn-bg-color);\n    ::before {\n      opacity: 1;\n    }\n    ::after {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    ::before {\n      position: absolute;\n      top: 50%;\n      left: 10%;\n      transform: translate(50%, -50%);\n    }\n    ::after {\n      position: absolute;\n      top: 50%;\n      right: 15%;\n      transform: rotate(180deg) translate(-50%, 50%);\n    }\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { RegisterForm } from \"../RegisterForm/RegisterForm\";\nimport { LoginForm } from \"../LoginForm/LoginForm\";\nimport { ResendEmailForm } from \"../ResendEmailForm/ResendEmailForm\";\nimport {\n  Container,\n  ContentThumb,\n  StyledLink,\n  StyledDetails,\n  DetailsList,\n  StyledOption,\n} from \"./AuthNavigate.styled\";\n\nexport const AuthNavigate = ({ linkPath, linktext }) => {\n  const { t } = useTranslation();\n  const [userProblems, setUserProblems] = useState(null);\n  const location = useLocation();\n\n  const handleEmailResend = () => {\n    setUserProblems(\"email\");\n  };\n\n  const handleForgotPassword = () => {\n    setUserProblems(\"password\");\n  };\n\n  const handleGoBack = () => {\n    setUserProblems(null);\n  };\n\n  return (\n    <Container currentPage={location.pathname}>\n      <ContentThumb>\n        {!userProblems ? (\n          <>\n            {location.pathname === \"/register\" ? (\n              <RegisterForm />\n            ) : (\n              <LoginForm />\n            )}\n            <StyledDetails>\n              <summary>{t(\"Have some problems?\")}</summary>\n              <DetailsList>\n                {location.pathname !== \"/register\" && (\n                  <StyledOption onClick={handleForgotPassword}>\n                    {t(\"Forgot password\")}\n                  </StyledOption>\n                )}\n                <StyledOption onClick={handleEmailResend}>\n                  {t(\"Resend verification email\")}\n                </StyledOption>\n              </DetailsList>\n            </StyledDetails>\n            <StyledLink to={linkPath}>{t(linktext)}</StyledLink>\n          </>\n        ) : (\n          <>\n            <ResendEmailForm userProblems={userProblems} />\n            <StyledLink onClick={handleGoBack}>\n              {t(`Back to ${location.pathname.slice(1)}`)}\n            </StyledLink>\n          </>\n        )}\n      </ContentThumb>\n    </Container>\n  );\n};\n\nAuthNavigate.propTypes = {\n  linkPath: PropTypes.string.isRequired,\n  linktext: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  padding: 40px 24px;\n  border-radius: 8px;\n  background-color: var(--primary-bg-color);\n\n  font-family: var(--primary-font);\n  font-weight: 600;\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    padding: 25px;\n  }\n\n  > label {\n    margin-top: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 18px;\n    }\n\n    :nth-child(2) {\n      margin-top: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-top: 40px;\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 1;\n  color: var(--accent-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n    0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n\n  width: 100%;\n  margin-top: 32px;\n  padding: 14px;\n\n  border-radius: 16px;\n  background: var(--accent-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: var(--light-text-color);\n  font-family: var(--primary-font);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.36px;\n\n  transition: background var(--animation);\n  :hover,\n  :focus {\n    background: var(--hover-btn-bg-color);\n  }\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    stroke-width: 3px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 48px;\n    padding: 16px;\n\n    font-size: 18px;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n\n  width: 100%;\n  margin-top: 10px;\n  padding: 14px;\n\n  border-radius: 16px;\n  background: var(--accent-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: var(--light-text-color);\n  font-family: var(--primary-font);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.36px;\n\n  transition: background var(--animation);\n  :hover,\n  :focus {\n    background: var(--hover-btn-bg-color);\n  }\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    stroke-width: 1px;\n\n    @media screen and (min-width: 768px) {\n      width: 22px;\n      height: 22px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n\n    font-size: 18px;\n  }\n`;\n\nexport const Divider = styled.p`\n  margin-top: 10px;\n  padding: 0 16px;\n\n  text-transform: uppercase;\n  text-align: center;\n  color: var(--auth-placeholder-color);\n\n  :before,\n  :after {\n    content: \" \";\n    display: inline-block;\n    width: 70px;\n    height: 3px;\n    background-color: var(--auth-placeholder-color);\n    margin-bottom: 5px;\n  }\n\n  :before {\n    margin-right: 10px;\n  }\n\n  :after {\n    margin-left: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    :before,\n    :after {\n      width: 155px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n`;\n","import styled from \"styled-components\";\n\nconst getBgColor = (num) => {\n  switch (num) {\n    case 0:\n      return \"#999999\";\n    case 25:\n      return \"var(--error-text-color)\";\n    case 50:\n      return \"#f59625\";\n    case 75:\n      return \"#c3e852\";\n    case 100:\n      return \"var(--correct-text-color)\";\n    default:\n      return \"transparent\";\n  }\n};\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 120%;\n  left: 2%;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 96%;\n  height: 5px;\n`;\n\nexport const ProgressBar = styled.div`\n  width: 70%;\n  height: 5px;\n  border-radius: 5px;\n  outline: 2px solid var(--auth-placeholder-color);\n\n  @media screen and (min-width: 768px) {\n    width: 75%;\n  }\n`;\n\nexport const ProgressIndicator = styled.div`\n  width: ${({ num }) => `${num}%`};\n  height: 100%;\n  background-color: ${({ num }) => getBgColor(num)};\n`;\n\nexport const ProgressText = styled.p`\n  font-size: 12px;\n  color: ${({ num }) => getBgColor(num)};\n`;\n","import zxcvbn from \"zxcvbn\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Container,\n  ProgressBar,\n  ProgressIndicator,\n  ProgressText,\n} from \"./PasswordStrengthIndicator.styled\";\n\nexport const PasswordStrengthIndicator = ({ password }) => {\n  const { t } = useTranslation();\n  const testResult = zxcvbn(password);\n  const num = (testResult.score * 100) / 4;\n\n  const handleProgressTextContent = (num) => {\n    switch (num) {\n      case 0:\n        return t(\"Very weak\");\n      case 25:\n        return t(\"Weak\");\n      case 50:\n        return t(\"Medium\");\n      case 75:\n        return t(\"Strong\");\n      case 100:\n        return t(\"Very strong\");\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <Container>\n      <ProgressBar>\n        <ProgressIndicator num={num}></ProgressIndicator>\n      </ProgressBar>\n      <ProgressText num={num}>{handleProgressTextContent(num)}</ProgressText>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nconst validateBgColor = (auth, theme) =>\n  auth\n    ? `var(--primary-bg-color)`\n    : `${theme.variableColors.secondaryBackground}`;\n\nconst validateLabelColor = (auth, theme) =>\n  auth\n    ? `var(--primary-text-color)`\n    : `${theme.variableColors.labelUserFormTextColor}`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n\n  font-size: 12px;\n  font-family: \"InterSemiBold\";\n\n  color: ${({ error, isSubmited, theme, auth }) =>\n    validateColor(error, isSubmited, validateLabelColor(auth, theme))};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputThumb = styled.span`\n  position: absolute;\n  top: 23px;\n  left: 0;\n\n  display: inline-block;\n  margin: 0;\n  width: 100%;\n  height: 46px;\n\n  @media screen and (min-width: 768px) {\n    top: 25px;\n    height: 54px;\n  }\n\n  > svg {\n    position: absolute;\n    bottom: 14px;\n    right: 8px;\n    width: 24px;\n    height: 24px;\n\n    @media screen and (min-width: 768px) {\n      bottom: 18px;\n    }\n  }\n\n  > button {\n    position: absolute;\n    bottom: 0;\n    right: 24px;\n\n    width: 46px;\n    height: 46px;\n    background-color: transparent;\n    color: var(--auth-placeholder-color);\n\n    @media screen and (min-width: 768px) {\n      width: 54px;\n      height: 54px;\n    }\n\n    > svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const StyledInput = styled.input`\n  font-family: \"InterRegular\";\n\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background-color: ${({ auth, theme }) => validateBgColor(auth, theme)};\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n\n  color: ${({ theme, auth }) => validateLabelColor(auth, theme)};\n  font-size: 14px;\n  line-height: 18px;\n\n  ::placeholder {\n    color: var(--auth-placeholder-color);\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n  }\n\n  &[type=\"password\"] {\n    ::placeholder {\n      font-family: var(--primary-font);\n      letter-spacing: 0;\n    }\n\n    :not(:placeholder-shown) {\n      font-family: Verdana, sans-serif;\n      letter-spacing: 1px;\n    }\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: ${({ type, validation }) => {\n    if (type === \"password\" && validation) {\n      return \"18px\";\n    }\n    return \"8px\";\n  }};\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport {\n  AiOutlineExclamationCircle,\n  AiOutlineCheckCircle,\n} from \"react-icons/ai\";\n\nimport { PasswordStrengthIndicator } from \"../../Auth/PasswordStrangthIndicator/PasswordStrengthIndicator\";\nimport {\n  StyledLabel,\n  InputThumb,\n  StyledInput,\n  StyledValidation,\n} from \"./FormInput.styled\";\n\nexport const FormInput = ({\n  text,\n  name,\n  type,\n  placeholder,\n  isSubmited,\n  formik,\n  setAllowSubmit,\n  user,\n  auth,\n  validation,\n}) => {\n  const { t } = useTranslation();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const checkInputName = () => {\n    if (name === \"password\") {\n      return true;\n    } else if (name === \"passwordRepeat\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleClick = () => {\n    setIsVisible((prevState) => !prevState);\n  };\n\n  const handleIcon = (error) => {\n    if (!isSubmited) {\n      return;\n    }\n\n    return error ? <AiOutlineExclamationCircle /> : <AiOutlineCheckCircle />;\n  };\n\n  const handleChange = (e) => {\n    formik.handleChange(e);\n    if (!setAllowSubmit || !user) {\n      return;\n    }\n\n    if (user[`${name}`] !== e.target.value) {\n      setAllowSubmit(true);\n    } else {\n      setAllowSubmit(false);\n    }\n  };\n\n  return (\n    <StyledLabel\n      auth={auth}\n      isSubmited={isSubmited}\n      error={formik.errors[`${name}`]}\n    >\n      {text}\n      <StyledInput\n        type={isVisible ? \"text\" : type}\n        name={name}\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={formik.values[`${name}`]}\n        isSubmited={isSubmited}\n        error={formik.errors[`${name}`]}\n        auth={auth}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation\n          isSubmited={isSubmited}\n          error={formik.errors[`${name}`]}\n          type={type}\n          validation={validation}\n        >\n          {formik.errors[`${name}`]\n            ? t(formik.errors[`${name}`])\n            : t(`This is a CORRECT ${name}`)}\n        </StyledValidation>\n      )}\n      <InputThumb>\n        {handleIcon(formik.errors[`${name}`])}\n        {checkInputName() && (\n          <>\n            <button type=\"button\" onClick={handleClick}>\n              {isVisible ? <LuEye /> : <LuEyeOff />}\n            </button>\n            {validation && formik.values[`${name}`].length > 0 && (\n              <PasswordStrengthIndicator password={formik.values[`${name}`]} />\n            )}\n          </>\n        )}\n      </InputThumb>\n    </StyledLabel>\n  );\n};\n\nFormInput.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  isSubmited: PropTypes.bool.isRequired,\n  formik: PropTypes.object.isRequired,\n  setAllowSubmit: PropTypes.func,\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.string,\n    phone: PropTypes.string,\n    skype: PropTypes.string,\n    imgURL: PropTypes.string,\n    updatedEmail: PropTypes.string,\n  }),\n};\n"],"names":["RegisterForm","t","useTranslation","_useState","useState","_useState2","_slicedToArray","isSubmited","setIsSubmited","dispatch","useDispatch","formik","useFormik","initialValues","username","email","password","validationSchema","RegisterSchema","onSubmit","values","_ref","resetForm","register","_jsxs","StyledForm","children","Wrapper","_jsx","Title","LangSwitcher","FormInput","text","name","type","placeholder","auth","validation","SubmitBtn","onClick","e","preventDefault","handleSubmit","LuLogIn","Divider","GoogleLink","href","FcGoogle","StyledLoginForm","styled","_templateObject","_taggedTemplateLiteral","LoginTitle","_templateObject2","LoginSubmitBtn","_templateObject3","LoginGoogleLink","_templateObject4","LoginDivider","_templateObject5","div","_templateObject6","LoginForm","LoginSchema","login","EmailForm","EmailTitle","EmailSubmitBtn","ResendEmailForm","userProblems","_useState3","_useState4","isDisabled","setIsDisabled","_useState5","_useState6","seconds","setSeconds","useEffect","setTimeout","EmailSchema","_ref2","endpoint","axios","post","concat","then","response","toast","success","data","message","catch","err","error","disabled","Container","section","prop","currentPage","signupGooseImg","loginGooseImg","bigSignupGooseImg","bigLoginGooseImg","ContentThumb","StyledLink","Link","StyledDetails","details","DetailsList","ul","StyledOption","li","arrowSvg","AuthNavigate","linkPath","linktext","setUserProblems","location","useLocation","pathname","_Fragment","slice","to","form","h2","button","a","p","getBgColor","num","ProgressBar","ProgressIndicator","ProgressText","_ref3","PasswordStrengthIndicator","zxcvbn","score","handleProgressTextContent","validateColor","color","validateLabelColor","theme","variableColors","labelUserFormTextColor","StyledLabel","label","InputThumb","span","StyledInput","input","secondaryBackground","validateBgColor","_ref4","StyledValidation","_ref5","_ref6","setAllowSubmit","user","isVisible","setIsVisible","errors","onChange","handleChange","target","value","touched","AiOutlineExclamationCircle","AiOutlineCheckCircle","handleIcon","prevState","LuEye","LuEyeOff","length"],"sourceRoot":""}