{"version":3,"file":"static/js/580.a8c83177.chunk.js","mappings":"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","sources":["helpers/formValidationSchemas.js","components/FormInput/FormInput.styled.jsx","components/FormInput/FormInput.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.js","components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.js","components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.js","pages/LoginPage/LoginPage.js"],"sourcesContent":["import { object, string } from \"yup\";\n\nexport const RegisterSchema = object().shape({\n  username: string()\n    .max(16, \"Username should not exceed 16 characters\")\n    .required(\"Username is required\"),\n  email: string()\n    .email(\"Invalid email\")\n    .matches(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, {\n      message: \"Invalid email\",\n      excludeEmptyString: true,\n    })\n    .required(\"Email is required\"),\n  password: string()\n    .min(6, \"Password is too short\")\n    .required(\"Password is required\"),\n});\n\nexport const LoginSchema = object().shape({\n  email: string()\n    .email(\"Invalid email\")\n    .matches(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, {\n      message: \"Invalid email\",\n      excludeEmptyString: true,\n    })\n    .required(\"Email is required\"),\n  password: string()\n    .min(6, \"Password is too short\")\n    .required(\"Password is required\"),\n});\n","import styled from \"styled-components\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  margin-top: 24px;\n\n  font-size: 12px;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    margin-top: 18px;\n  }\n\n  :nth-child(2) {\n    margin-top: 32px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 40px;\n    }\n  }\n`;\n\nexport const InputThumb = styled.span`\n  position: absolute;\n  top: 23px;\n  left: 0;\n\n  display: inline-block;\n  margin: 0;\n  width: 100%;\n  height: 46px;\n\n  @media screen and (min-width: 768px) {\n    top: 25px;\n    height: 54px;\n  }\n\n  > svg {\n    position: absolute;\n    bottom: 18px;\n    right: 8px;\n    width: 24px;\n    height: 24px;\n  }\n\n  > button {\n    position: absolute;\n    bottom: 0;\n    right: 24px;\n\n    width: 46px;\n    height: 46px;\n    background-color: transparent;\n    color: var(--auth-placeholder-color);\n\n    @media screen and (min-width: 768px) {\n      width: 54px;\n      height: 54px;\n    }\n\n    > svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background: var(--primary-bg-color);\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n\n  color: var(--primary-text-color);\n  font-size: 14px;\n  line-height: 18px;\n\n  ::placeholder {\n    color: var(--auth-placeholder-color);\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n  }\n\n  &[type=\"password\"] {\n    ::placeholder {\n      font-family: var(--primary-font);\n      letter-spacing: 0;\n    }\n\n    :not(:placeholder-shown) {\n      font-family: Verdana, sans-serif;\n      letter-spacing: 1px;\n    }\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n  }\n`;\n","import { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport {\n  AiOutlineExclamationCircle,\n  AiOutlineCheckCircle,\n} from \"react-icons/ai\";\n\nimport {\n  StyledLabel,\n  InputThumb,\n  StyledInput,\n  StyledValidation,\n} from \"./FormInput.styled\";\n\nexport const FormInput = ({\n  text,\n  name,\n  type,\n  placeholder,\n  isSubmited,\n  formik,\n  children,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClick = () => {\n    setIsVisible((prevState) => !prevState);\n  };\n\n  const handleIcon = (error) => {\n    if (!isSubmited) {\n      return;\n    }\n\n    return error ? <AiOutlineExclamationCircle /> : <AiOutlineCheckCircle />;\n  };\n\n  return (\n    <StyledLabel isSubmited={isSubmited} error={formik.errors[`${name}`]}>\n      {text}\n      <StyledInput\n        type={isVisible ? \"text\" : type}\n        name={name}\n        placeholder={placeholder}\n        onChange={formik.handleChange}\n        value={formik.values[`${name}`]}\n        isSubmited={isSubmited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation\n          isSubmited={isSubmited}\n          error={formik.errors[`${name}`]}\n        >\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is an CORRECT ${name}`}\n        </StyledValidation>\n      )}\n      <InputThumb>\n        {handleIcon(formik.errors[`${name}`])}\n        {name === \"password\" && (\n          <button type=\"button\" onClick={handleClick}>\n            {isVisible ? <LuEye /> : <LuEyeOff />}\n          </button>\n        )}\n      </InputThumb>\n    </StyledLabel>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  padding: 40px 24px;\n  border-radius: 8px;\n  background-color: var(--primary-bg-color);\n\n  font-family: var(--primary-font);\n  font-weight: 600;\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 1;\n  color: var(--accent-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n    0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n\n  width: 100%;\n  margin-top: 32px;\n  padding: 14px;\n\n  border-radius: 16px;\n  background: var(--accent-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: var(--light-text-color);\n  font-family: var(--primary-font);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.36px;\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    stroke-width: 3px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 48px;\n    padding: 16px;\n\n    font-size: 18px;\n  }\n`;\n","import { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { RegisterSchema } from \"../../../helpers/formValidationSchemas\";\n\nimport { LuLogIn } from \"react-icons/lu\";\nimport { FormInput } from \"components/FormInput/FormInput\";\nimport { StyledForm, Title, SubmitBtn } from \"./RegisterForm.styled\";\n\nexport const RegisterForm = () => {\n  const [isSubmited, setIsSubmited] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledForm>\n      <Title>Sign Up</Title>\n      <FormInput\n        text=\"Name\"\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n      <FormInput\n        text=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n      <FormInput\n        text=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n      <SubmitBtn type=\"submit\" onClick={handleValidation}>\n        Sign Up <LuLogIn />\n      </SubmitBtn>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  StyledForm,\n  Title,\n  //   StyledLabel,\n  //   InputThumb,\n  //   StyledInput,\n  SubmitBtn,\n} from \"../RegisterForm/RegisterForm.styled\";\n\nexport const StyledLoginForm = styled(StyledForm)``;\n\nexport const LoginTitle = styled(Title)``;\n\nexport const LoginSubmitBtn = styled(SubmitBtn)``;\n","import { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { LoginSchema } from \"helpers/formValidationSchemas\";\n\nimport { LuLogIn } from \"react-icons/lu\";\nimport { FormInput } from \"components/FormInput/FormInput\";\nimport {\n  StyledLoginForm,\n  LoginTitle,\n  LoginSubmitBtn,\n} from \"./LoginForm.styled\";\n\nexport const LoginForm = () => {\n  const [isSubmited, setIsSubmited] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledLoginForm>\n      <LoginTitle>Log In</LoginTitle>\n      <FormInput\n        text=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n      <FormInput\n        text=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n      <LoginSubmitBtn type=\"submit\" onClick={handleValidation}>\n        Log In <LuLogIn />\n      </LoginSubmitBtn>\n    </StyledLoginForm>\n  );\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport * as signupGooseImg from \"../../../assets/images/register/signup_goose-min.png\";\nimport * as bigSignupGooseImg from \"../../../assets/images/register/signup_goose@2x-min.png\";\nimport * as loginGooseImg from \"../../../assets/images/login/login_goose-min.png\";\nimport * as bigLoginGooseImg from \"../../../assets/images/login/login_goose@2x-min.png\";\n\nconst setBgImage = (currentPage) => {\n  return currentPage === \"/register\"\n    ? `url(${signupGooseImg.default})`\n    : `url(${loginGooseImg.default})`;\n};\n\nconst setBigBgImage = (currentPage) => {\n  return currentPage === \"/register\"\n    ? `url(${bigSignupGooseImg.default})`\n    : `url(${bigLoginGooseImg.default})`;\n};\n\nexport const Container = styled.section`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--auth-bg-color);\n\n  @media screen and (min-width: 1440px) {\n    background-image: ${(prop) => setBgImage(prop.currentPage)};\n    background-size: ${(prop) =>\n      prop.currentPage === \"/register\" ? \"400px 416px\" : \"368px 521px\"};\n    background-position: ${(prop) =>\n      prop.currentPage === \"/register\"\n        ? \"left 50px bottom 0\"\n        : \"right 60px bottom 19px\"};\n    background-repeat: no-repeat;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${(prop) => setBigBgImage(prop.currentPage)};\n    }\n  }\n`;\n\nexport const ContentThumb = styled.div`\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n\n  width: 100%;\n  padding: 0 20px;\n  text-align: center;\n\n  @media screen and (min-width: 375px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 480px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  margin-top: 18px;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--accent-bg-color);\n  text-decoration-line: underline;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  :hover,\n  :focus {\n    color: var(--hover-btn-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { RegisterForm } from \"../RegisterForm/RegisterForm\";\nimport { LoginForm } from \"../LoginForm/LoginForm\";\nimport { Container, ContentThumb, StyledLink } from \"./AuthNavigate.styled\";\n\nexport const AuthNavigate = ({ linkPath, linktext, children }) => {\n  const location = useLocation();\n\n  return (\n    <Container currentPage={location.pathname}>\n      <ContentThumb>\n        {location.pathname === \"/register\" ? <RegisterForm /> : <LoginForm />}\n        <StyledLink to={linkPath}>{linktext}</StyledLink>\n      </ContentThumb>\n    </Container>\n  );\n};\n\nAuthNavigate.propTypes = {\n  linkPath: PropTypes.string.isRequired,\n  linktext: PropTypes.string.isRequired,\n};\n","import { AuthNavigate } from \"components/Auth/AuthNavigate/AuthNavigate\";\n\nfunction LoginPage() {\n  return (\n    <AuthNavigate linkPath={\"/register\"} linktext={\"Sign up\"}>\n      Login\n    </AuthNavigate>\n  );\n}\n\nexport default LoginPage;\n"],"names":["RegisterSchema","object","shape","username","string","max","required","email","matches","message","excludeEmptyString","password","min","LoginSchema","validateColor","error","isSubmited","color","StyledLabel","styled","label","_templateObject","_taggedTemplateLiteral","_ref","InputThumb","span","_templateObject2","StyledInput","input","_templateObject3","_ref2","StyledValidation","p","_templateObject4","_ref3","FormInput","text","name","type","placeholder","formik","_useState","children","useState","_useState2","_slicedToArray","isVisible","setIsVisible","_jsxs","errors","concat","_jsx","onChange","handleChange","value","values","touched","AiOutlineExclamationCircle","AiOutlineCheckCircle","handleIcon","onClick","prevState","LuEye","LuEyeOff","StyledForm","form","Title","h2","SubmitBtn","button","RegisterForm","setIsSubmited","useFormik","initialValues","validationSchema","onSubmit","console","log","e","preventDefault","handleSubmit","LuLogIn","StyledLoginForm","LoginTitle","LoginSubmitBtn","LoginForm","Container","section","prop","currentPage","signupGooseImg","loginGooseImg","bigSignupGooseImg","bigLoginGooseImg","ContentThumb","div","StyledLink","Link","AuthNavigate","linkPath","linktext","location","useLocation","pathname","to"],"sourceRoot":""}