{"version":3,"file":"static/js/134.0ed3c60e.chunk.js","mappings":"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","sources":["components/FormElements/FormInput/FormInput.styled.js","components/FormElements/FormInput/FormInput.js","components/SharedComponents/DatePicker/DatePicker.styled.js","components/SharedComponents/DatePicker/DatePicker.js","components/FormElements/DataInput/DataInput.styled.js","components/FormElements/DataInput/DataInput.js","components/AccountPage/UserForm/UserForm.styled.js","components/AccountPage/UserForm/UserForm.js","pages/AccountPage/AccountPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n\n  font-size: 12px;\n  color: ${({ error, isSubmited, theme }) =>\n    validateColor(\n      error,\n      isSubmited,\n      theme.variableColors.labelUserFormTextColor\n    )};\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputThumb = styled.span`\n  position: absolute;\n  top: 23px;\n  left: 0;\n\n  display: inline-block;\n  margin: 0;\n  width: 100%;\n  height: 46px;\n\n  @media screen and (min-width: 768px) {\n    top: 25px;\n    height: 54px;\n  }\n\n  > svg {\n    position: absolute;\n    bottom: 14px;\n    right: 8px;\n    width: 24px;\n    height: 24px;\n\n    @media screen and (min-width: 768px) {\n      bottom: 18px;\n    }\n  }\n\n  > button {\n    position: absolute;\n    bottom: 0;\n    right: 24px;\n\n    width: 46px;\n    height: 46px;\n    background-color: transparent;\n    color: var(--auth-placeholder-color);\n\n    @media screen and (min-width: 768px) {\n      width: 54px;\n      height: 54px;\n    }\n\n    > svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n\n  color: ${({ theme }) => theme.variableColors.text};\n  font-size: 14px;\n  line-height: 18px;\n\n  ::placeholder {\n    color: var(--auth-placeholder-color);\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n  }\n\n  &[type=\"password\"] {\n    ::placeholder {\n      font-family: var(--primary-font);\n      letter-spacing: 0;\n    }\n\n    :not(:placeholder-shown) {\n      font-family: Verdana, sans-serif;\n      letter-spacing: 1px;\n    }\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n  }\n`;\n","import { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport {\n  AiOutlineExclamationCircle,\n  AiOutlineCheckCircle,\n} from \"react-icons/ai\";\n\nimport {\n  StyledLabel,\n  InputThumb,\n  StyledInput,\n  StyledValidation,\n} from \"./FormInput.styled\";\n\nexport const FormInput = ({\n  text,\n  name,\n  type,\n  placeholder,\n  isSubmited,\n  formik,\n  setAllowSubmit,\n  user,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClick = () => {\n    setIsVisible((prevState) => !prevState);\n  };\n\n  const handleIcon = (error) => {\n    if (!isSubmited) {\n      return;\n    }\n\n    return error ? <AiOutlineExclamationCircle /> : <AiOutlineCheckCircle />;\n  };\n\n  const handleChange = (e) => {\n    formik.handleChange(e);\n    if (!setAllowSubmit || !user) {\n      return;\n    }\n\n    if (user[`${name}`] !== e.target.value) {\n      setAllowSubmit(true);\n    } else {\n      setAllowSubmit(false);\n    }\n  };\n\n  return (\n    <StyledLabel isSubmited={isSubmited} error={formik.errors[`${name}`]}>\n      {text}\n      <StyledInput\n        type={isVisible ? \"text\" : type}\n        name={name}\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={formik.values[`${name}`]}\n        isSubmited={isSubmited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation\n          isSubmited={isSubmited}\n          error={formik.errors[`${name}`]}\n        >\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is an CORRECT ${name}`}\n        </StyledValidation>\n      )}\n      <InputThumb>\n        {handleIcon(formik.errors[`${name}`])}\n        {name === \"password\" && (\n          <button type=\"button\" onClick={handleClick}>\n            {isVisible ? <LuEye /> : <LuEyeOff />}\n          </button>\n        )}\n      </InputThumb>\n    </StyledLabel>\n  );\n};\n","import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker-wrapper {\n    width: 100%;\n  }\n\n  .react-datepicker__input-container {\n    > input {\n      width: 100%;\n    }\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n    border: none;\n    margin-bottom: 20px;\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px 14px 12px;\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n\n  font-family: var(--primary-font);\n  font-size: 14px;\n  line-height: 1.3;\n\n  color: ${({ theme }) => theme.variableColors.text};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n\n  :focus-visible {\n    outline: none;\n    border: ${({ theme }) => theme.variableColors.borderInputHover};\n    border-radius: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 18px 18px 16px;\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n`;\n","import { DatePickerWrapper, StyledDatePicker } from \"./DatePicker.styled\";\n\nexport const DatePicker = (props) => {\n  return (\n    <>\n      <DatePickerWrapper>\n        <StyledDatePicker {...props} />\n      </DatePickerWrapper>\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { FaChevronDown } from \"react-icons/fa\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n\n  font-size: 12px;\n  color: ${({ error, isSubmited, theme }) =>\n    validateColor(\n      error,\n      isSubmited,\n      theme.variableColors.labelUserFormTextColor\n    )};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputThumb = styled.span`\n  position: absolute;\n  top: 23px;\n  left: 0;\n\n  display: inline-block;\n  margin: 0;\n  width: 100%;\n  height: 46px;\n\n  @media screen and (min-width: 768px) {\n    top: 25px;\n    height: 54px;\n  }\n\n  > svg {\n    position: absolute;\n    bottom: 14px;\n    right: 8px;\n    width: 24px;\n    height: 24px;\n\n    @media screen and (min-width: 768px) {\n      bottom: 18px;\n    }\n  }\n\n  > button {\n    position: absolute;\n    bottom: 0;\n    right: 24px;\n\n    width: 46px;\n    height: 46px;\n    background-color: transparent;\n    color: var(--auth-placeholder-color);\n\n    @media screen and (min-width: 768px) {\n      width: 54px;\n      height: 54px;\n    }\n\n    > svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n  }\n`;\n\nexport const ArrowIcon = styled(FaChevronDown)`\n  color: ${({ theme }) => theme.variableColors.arrowIconColor};\n  width: 12px;\n  height: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const StyledIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  right: 10px;\n  top: 30px;\n\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: transparent;\n  z-index: 1;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    right: 15px;\n    top: 40px;\n  }\n`;\n","import {\n  AiOutlineExclamationCircle,\n  AiOutlineCheckCircle,\n} from \"react-icons/ai\";\n\nimport { DatePicker } from \"components/SharedComponents/DatePicker/DatePicker\";\nimport { format } from \"date-fns\";\nimport {\n  StyledLabel,\n  InputThumb,\n  StyledValidation,\n  StyledIconContainer,\n  ArrowIcon,\n} from \"./DataInput.styled\";\n\nexport const DataInput = ({\n  text,\n  name,\n  isSubmited,\n  formik,\n  setAllowSubmit,\n}) => {\n  const handleIcon = (error) => {\n    if (!isSubmited) {\n      return;\n    }\n\n    return error ? <AiOutlineExclamationCircle /> : <AiOutlineCheckCircle />;\n  };\n\n  return (\n    <StyledLabel isSubmited={isSubmited} error={formik.errors[`${name}`]}>\n      {!isSubmited && (\n        <StyledIconContainer>\n          <ArrowIcon />\n        </StyledIconContainer>\n      )}\n      {text}\n      <DatePicker\n        name=\"birthday\"\n        selected={new Date(formik?.values.birthday)}\n        onChange={async (date) => {\n          formik.setFieldValue(\"birthday\", format(date, \"yyyy-MM-dd\"));\n          await Promise.resolve();\n          setAllowSubmit(true);\n        }}\n        dateFormat=\"dd-MM-yyyy\"\n        maxDate={new Date()}\n        placeholderText=\"dd-MM-yyyy\"\n        formatWeekDay={(day) => day.charAt(0)}\n        calendarStartDay={1}\n        isSubmited={isSubmited}\n        error={formik.errors[`${name}`]}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation\n          isSubmited={isSubmited}\n          error={formik.errors[`${name}`]}\n        >\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is an CORRECT ${name}`}\n        </StyledValidation>\n      )}\n      <InputThumb>{handleIcon(formik.errors[`${name}`])}</InputThumb>\n    </StyledLabel>\n  );\n};\n","import styled from \"styled-components\";\nimport { AiOutlineUser, AiOutlinePlus } from \"react-icons/ai\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  position: relative;\n\n  gap: 34px;\n  width: 100%;\n  height: 100%;\n  margin-top: 51px;\n  // margin-top: 95px;\n  padding: 40px 20px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-radius: 16px;\n\n  @media (min-width: 768px) {\n    margin-top: 0;\n    // margin-top: 64px;\n    padding: 40px;\n    position: static;\n  }\n\n  @media (min-width: 1440px) {\n    gap: 0;\n    padding-top: 60px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport const FlexInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 18px;\n  width: 100%;\n\n  @media (min-width: 480px) {\n    width: 299px;\n  }\n\n  @media (min-width: 768px) {\n    width: 354px;\n    gap: 22px;\n  }\n\n  @media (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    column-gap: 50px;\n    row-gap: 20px;\n    width: 758px;\n    margin-bottom: 84px;\n    margin-top: 44px;\n\n    & label:nth-child(1) {\n      grid-column: 1 / 2;\n      grid-row: 1 / 2;\n    }\n\n    & label:nth-child(3) {\n      grid-column: 1 / 2;\n      grid-row: 3 / 4;\n    }\n\n    & label:nth-child(4) {\n      grid-column: 2 / 3;\n      grid-row: 1 / 2;\n    }\n\n    & label:nth-child(5) {\n      grid-column: 2 / 3;\n      grid-row: 2 / 3;\n    }\n  }\n`;\n\nexport const AvatarBlock = styled.div`\n  margin-top: -76px;\n\n  @media (min-width: 768px) {\n    margin-top: 0;\n  }\n\n  @media (min-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const InputAvatar = styled.input`\n  display: none;\n  width: 200px;\n  height: 150px;\n`;\n\nexport const DefaultIcon = styled(AiOutlineUser)`\n  width: 50%;\n  height: 50%;\n  position: relative;\n  top: 25%;\n  left: 25%;\n  object-fit: cover;\n  font-size: 38px;\n  color: var(--auth-bg-color);\n`;\n\nexport const LabelImg = styled.img`\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  overflow: hidden;\n  object-fit: cover;\n`;\n\nexport const LabelAvatar = styled.label`\n  display: block;\n  position: relative;\n  border-radius: 50%;\n  border: 2px solid var(--accent-bg-color);\n  width: 72px;\n  height: 72px;\n  background-color: ${({ theme }) => theme.variableColors.avatarBgColor};\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const AddAvatarBtn = styled.div`\n  width: 14px;\n  height: 14px;\n  background-color: var(--accent-bg-color);\n  border-radius: 50%;\n  color: var(--light-text-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  cursor: pointer;\n  bottom: -4px;\n  right: 15px;\n\n  @media (min-width: 768px) {\n    bottom: -6px;\n    right: 24px;\n    width: 24px;\n    height: 24px;\n  }\n\n  transition: background-color var(--animation);\n  &:hover,\n  :focus {\n    background-color: var(--hover-btn-bg-color);\n  }\n`;\n\nexport const PlusIcon = styled(AiOutlinePlus)`\n  color: var(--light-text-color);\n  background-color: var(--accent-bg-color);\n  width: 8px;\n  height: 8px;\n\n  @media (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: \"InterSemiBold\";\n  display: block;\n  width: 100%;\n  max-width: 195px;\n  background-color: var(--accent-bg-color);\n  border-radius: 16px;\n  color: var(--light-text-color);\n  font-size: 14px;\n  line-height: 1.3;\n  text-align: center;\n  border: none;\n  padding: 14px;\n\n  &[disabled] {\n    background-color: #84828a;\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  @media (min-width: 768px) {\n    padding: 15px;\n    max-width: 262px;\n    max-height: 48px;\n  }\n\n  transition: background-color var(--animation), box-shadow var(--animation);\n  &:hover,\n  :focus {\n    box-shadow: 4px 2px 16px rgba(136, 165, 191, 1);\n    background-color: var(--hover-btn-bg-color);\n  }\n`;\n\nexport const TitleAvatar = styled.p`\n  font-family: \"InterBold\";\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  margin: 14px 0 0 0;\n  text-align: center;\n  color: ${({ theme }) => theme.variableColors.titleAvatar};\n\n  @media (min-width: 768px) {\n    margin: 20px 0 0 0;\n    font-size: 18px;\n    line-height: 1;\n  }\n`;\n\nexport const TextAvatar = styled.p`\n  font-family: \"InterSemiBold\";\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.2;\n  color: ${({ theme }) => theme.variableColors.textAvatar};\n  margin-top: 4px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 14px;\n    line-height: 1.3;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 1.3;\n  }\n`;\n\nexport const Success = styled.div`\n  color: var(--correct-text-color);\n  font-size: 12px;\n  height: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const BirthdayContainer = styled.div`\n  position: relative;\n  z-index: 100;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"redux/auth/selectrors\";\nimport { getUserInfo, updateUserInfo } from \"redux/auth/operations\";\n\nimport { useFormik } from \"formik\";\nimport { UpdateInfoSchema } from \"helpers/formValidationSchemas\";\nimport { format } from \"date-fns\";\n\nimport { toast } from \"react-toastify\";\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport { DataInput } from \"components/FormElements/DataInput/DataInput\";\nimport {\n  Form,\n  Button,\n  InputAvatar,\n  AddAvatarBtn,\n  LabelImg,\n  LabelAvatar,\n  TitleAvatar,\n  TextAvatar,\n  FlexInput,\n  AvatarBlock,\n  PlusIcon,\n  BirthdayContainer,\n  DefaultIcon,\n} from \"./UserForm.styled\";\n\nexport const UserForm = () => {\n  const dispatch = useDispatch();\n  let user = useSelector(selectUser);\n  if (!user) {\n    const authData = localStorage.getItem(\"auth\");\n    if (authData) {\n      const auth = JSON.parse(authData);\n      user = auth.user;\n    } else {\n      dispatch(getUserInfo());\n    }\n  }\n\n  const [isSubmited, setIsSubmited] = useState(false);\n  const [allowSubmit, setAllowSubmit] = useState(false);\n  const [image, setImage] = useState(null);\n  const [userData, setUserData] = useState({\n    username: user.username ?? \"\",\n    phone: user.phone ?? \"\",\n    birthday: format(new Date(user.birthday || Date.now()), \"yyyy-MM-dd\"),\n    skype: user.skype ?? \"\",\n    email: user.email ?? \"\",\n    imgURL: user.imgURL ?? null,\n  });\n\n  const formik = useFormik({\n    initialValues: userData,\n    validationSchema: UpdateInfoSchema,\n    onSubmit: (values) => {\n      setIsSubmited(true);\n      dispatch(updateUserInfo(values));\n      setUserData(values);\n      formik.setTouched({});\n      setAllowSubmit(false);\n    },\n  });\n\n  useEffect(() => {\n    if (formik.errors.imgURL) {\n      toast.error(`${formik.errors.imgURL}`);\n    }\n  }, [formik.errors.imgURL]);\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  const handleAvatarChange = async (event) => {\n    setIsSubmited(false);\n    const file = event.target.files[0];\n    if (file) {\n      const imageURL = URL.createObjectURL(file);\n      setImage(imageURL);\n      await formik.setFieldValue(\"imgURL\", file);\n      await Promise.resolve();\n      setAllowSubmit(true);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleValidation}>\n      <AvatarBlock>\n        <LabelAvatar htmlFor=\"image\">\n          {image || userData.imgURL ? (\n            <LabelImg\n              alt=\"Avatar\"\n              src={image || userData.imgURL}\n              width=\"48\"\n              height=\"48\"\n            />\n          ) : (\n            <DefaultIcon />\n          )}\n          <InputAvatar\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/jpg, image/jpeg, image/png\"\n            onChange={handleAvatarChange}\n          />\n          <AddAvatarBtn>\n            <PlusIcon />\n          </AddAvatarBtn>\n        </LabelAvatar>\n\n        <TitleAvatar>{userData.username}</TitleAvatar>\n        <TextAvatar>User</TextAvatar>\n      </AvatarBlock>\n\n      <FlexInput>\n        <FormInput\n          text=\"User Name\"\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"Username\"\n          formik={formik}\n          isSubmited={isSubmited}\n          setAllowSubmit={setAllowSubmit}\n          user={user}\n        />\n\n        <BirthdayContainer>\n          <DataInput\n            text=\"Birthday\"\n            name=\"birthday\"\n            formik={formik}\n            isSubmited={isSubmited}\n            setAllowSubmit={setAllowSubmit}\n          />\n        </BirthdayContainer>\n\n        <FormInput\n          text=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          formik={formik}\n          isSubmited={isSubmited}\n          setAllowSubmit={setAllowSubmit}\n          user={user}\n        />\n\n        <FormInput\n          text=\"Phone\"\n          name=\"phone\"\n          type=\"phone\"\n          placeholder=\"Enter phone number\"\n          formik={formik}\n          isSubmited={isSubmited}\n          setAllowSubmit={setAllowSubmit}\n          user={user}\n        />\n\n        <FormInput\n          text=\"Skype\"\n          name=\"skype\"\n          type=\"text\"\n          placeholder=\"Enter skype number\"\n          formik={formik}\n          isSubmited={isSubmited}\n          setAllowSubmit={setAllowSubmit}\n          user={user}\n        />\n      </FlexInput>\n\n      <Button type=\"submit\" disabled={!allowSubmit}>\n        Save changes\n      </Button>\n    </Form>\n  );\n};\n","import { UserForm } from \"components/AccountPage/UserForm/UserForm\";\n\nfunction AccountPage() {\n  return (\n    <>\n      <UserForm />\n    </>\n  );\n}\n\nexport default AccountPage;\n"],"names":["validateColor","error","isSubmited","color","StyledLabel","styled","label","_templateObject","_taggedTemplateLiteral","_ref","theme","variableColors","labelUserFormTextColor","InputThumb","span","_templateObject2","StyledInput","input","_templateObject3","_ref2","secondaryBackground","_ref3","_ref4","text","StyledValidation","p","_templateObject4","_ref5","FormInput","name","type","placeholder","formik","setAllowSubmit","user","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","_jsxs","errors","concat","children","_jsx","onChange","e","handleChange","target","value","values","touched","AiOutlineExclamationCircle","AiOutlineCheckCircle","handleIcon","onClick","prevState","LuEye","LuEyeOff","DatePickerWrapper","div","StyledDatePicker","DatePicker","borderInputHover","props","_Fragment","_objectSpread","ArrowIcon","FaChevronDown","arrowIconColor","StyledIconContainer","_templateObject5","DataInput","selected","Date","birthday","_asyncToGenerator","_regeneratorRuntime","mark","_callee","date","wrap","_context","prev","next","setFieldValue","format","Promise","resolve","stop","_x","apply","arguments","dateFormat","maxDate","placeholderText","formatWeekDay","day","charAt","calendarStartDay","Form","form","FlexInput","AvatarBlock","InputAvatar","DefaultIcon","AiOutlineUser","LabelImg","img","_templateObject6","LabelAvatar","_templateObject7","avatarBgColor","AddAvatarBtn","_templateObject8","PlusIcon","AiOutlinePlus","_templateObject9","Button","button","_templateObject10","TitleAvatar","_templateObject11","titleAvatar","TextAvatar","_templateObject12","textAvatar","BirthdayContainer","_templateObject13","_templateObject14","UserForm","_user$username","_user$phone","_user$skype","_user$email","_user$imgURL","dispatch","useDispatch","useSelector","selectUser","authData","localStorage","getItem","JSON","parse","getUserInfo","setIsSubmited","_useState3","_useState4","allowSubmit","_useState5","_useState6","image","setImage","_useState7","username","phone","now","skype","email","imgURL","_useState8","userData","setUserData","useFormik","initialValues","validationSchema","UpdateInfoSchema","onSubmit","updateUserInfo","setTouched","useEffect","toast","handleAvatarChange","event","file","imageURL","files","URL","createObjectURL","preventDefault","handleSubmit","htmlFor","alt","src","width","height","id","accept","disabled"],"sourceRoot":""}