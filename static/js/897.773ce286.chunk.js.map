{"version":3,"file":"static/js/897.773ce286.chunk.js","mappings":"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","sources":["icons/icon-arrow-right.svg","hooks/useDate.js","icons/icon-arrow-left.svg","components/CalendarPage/PeriodPaginator/PeriodPaginator.styled.js","components/CalendarPage/PeriodPaginator/PeriodPaginator.js","components/CalendarPage/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/CalendarPage/PeriodTypeSelect/PeriodTypeSelect.js","components/CalendarPage/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarPage/CalendarToolbar/CalendarToolbar.js","pages/CalendarPage/CalendarPage.styled.js","components/CalendarPage/CalendarTable/CalendarTable.styled.js","../node_modules/date-fns/esm/getWeeksInMonth/index.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js","../node_modules/date-fns/esm/formatISO/index.js","redux/tasks/selectors.js","components/CalendarPage/CalendarTable/CalendarTableItem.styled.js","components/CalendarPage/CalendarTable/CalendarTableItem.js","../node_modules/date-fns/esm/isThisMonth/index.js","../node_modules/date-fns/esm/isToday/index.js","components/CalendarPage/CalendarTable/CalendarTable.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","pages/CalendarPage/CalendarPage.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 12,\n    viewBox: \"0 0 6 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.75 10.5L5.25 6L0.75 1.5\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconArrowRight);\nexport default __webpack_public_path__ + \"static/media/icon-arrow-right.233a7e6d57bab1a1f79b37a572c08ff9.svg\";\nexport { ForwardRef as ReactComponent };","import { useParams } from \"react-router-dom\";\n\nexport const useDate = () => {\n  const params = useParams();\n  const date = new Date(params.currentDate);\n\n  if (Object.prototype.toString.call(date) === \"[object Date]\") {\n    if (isNaN(date)) {\n      return new Date();\n    } else {\n      return date;\n    }\n  }\n};\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 6,\n    height: 12,\n    viewBox: \"0 0 6 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.25 10.5L0.75 6L5.25 1.5\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconArrowLeft);\nexport default __webpack_public_path__ + \"static/media/icon-arrow-left.c84d07bbcc772d1143243b6486df358f.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { ReactComponent as IconArrowRight } from \"../../../icons/icon-arrow-right.svg\";\nimport { ReactComponent as IconArrowLeft } from \"../../../icons/icon-arrow-left.svg\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n`;\n\nconst ButtonBase = styled.button`\n  width: 38px;\n  padding: 10px 10px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  stroke: black;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const ButtonLeft = styled(ButtonBase)`\n  border-radius: 8px 0 0 8px;\n`;\n\nexport const ButtonRight = styled(ButtonBase)`\n  border-radius: 0 8px 8px 0;\n`;\n\nexport const TitleContainer = styled.div`\n  padding: 8px 12px;\n  background-color: ${({ theme }) => theme.variableColors.backgroundButton};\n  border-radius: 8px;\n  min-width: 135px;\n`;\n\nexport const Name = styled.h1`\n  font-family: \"Inter\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.12;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.variableColors.textButton};\n`;\n\nexport const IconRight = styled(IconArrowRight)`\n  stroke: ${({ theme }) => theme.variableColors.arrowColor};\n`;\nexport const IconRightActive = styled(IconArrowRight)`\n  stroke: ${({ theme }) => theme.variableColors.activeArrowColor};\n`;\n\nexport const IconLeft = styled(IconArrowLeft)`\n  stroke: ${({ theme }) => theme.variableColors.arrowColor};\n`;\n\nexport const IconLeftActive = styled(IconArrowLeft)`\n  stroke: ${({ theme }) => theme.variableColors.activeArrowColor};\n`;\n","import { format, subDays, addDays, addMonths, subMonths } from \"date-fns\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDate } from \"../../../hooks/useDate\";\nimport {\n  Wrapper,\n  ButtonsContainer,\n  ButtonRight,\n  ButtonLeft,\n  TitleContainer,\n  Name,\n  IconRight,\n  IconRightActive,\n  IconLeft,\n  IconLeftActive,\n} from \"./PeriodPaginator.styled.js\";\n\nexport const PeriodPaginator = ({ activePage }) => {\n  const [activeBtn, setActiveBtn] = useState(\"\");\n\n  const navigate = useNavigate();\n  const urlDate = useDate();\n\n  const handleNextDay = () => {\n    setActiveBtn(\"next\");\n\n    const date = addDays(urlDate, 1);\n    navigate(`/calendar/day/${format(date, \"ddMMMyyyy\")}`);\n  };\n\n  const handlePrevDay = () => {\n    setActiveBtn(\"prev\");\n\n    const date = subDays(urlDate, 1);\n    navigate(`/calendar/day/${format(date, \"ddMMMyyyy\")}`);\n  };\n\n  const handleNextMonth = () => {\n    setActiveBtn(\"next\");\n\n    const date = addMonths(urlDate, 1);\n    navigate(`/calendar/month/${format(date, \"MMMMyyyy\")}`);\n  };\n\n  const handlePrevMonth = () => {\n    setActiveBtn(\"prev\");\n\n    const date = subMonths(urlDate, 1);\n    navigate(`/calendar/month/${format(date, \"MMMMyyyy\")}`);\n  };\n\n  return (\n    <Wrapper>\n      {activePage === \"month\" && (\n        <>\n          <TitleContainer>\n            <Name>{format(urlDate, \" MMM yyyy\")}</Name>\n          </TitleContainer>\n          <ButtonsContainer>\n            <ButtonLeft type=\"button\" onClick={handlePrevMonth}>\n              {activeBtn === \"prev\" ? <IconLeftActive /> : <IconLeft />}\n            </ButtonLeft>\n            <ButtonRight type=\"button\" id={\"2\"} onClick={handleNextMonth}>\n              {activeBtn === \"next\" ? <IconRightActive /> : <IconRight />}\n            </ButtonRight>\n          </ButtonsContainer>\n        </>\n      )}\n\n      {activePage === \"day\" && (\n        <>\n          <TitleContainer>\n            <Name>{format(urlDate, \"d MMM yyyy\")}</Name>\n          </TitleContainer>\n          <ButtonsContainer>\n            <ButtonLeft type=\"button\" onClick={handlePrevDay}>\n              {activeBtn === \"prev\" ? <IconLeftActive /> : <IconLeft />}\n            </ButtonLeft>\n            <ButtonRight type=\"button\" onClick={handleNextDay}>\n              {activeBtn === \"next\" ? <IconRightActive /> : <IconRight />}\n            </ButtonRight>\n          </ButtonsContainer>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst NavLinkBase = styled(NavLink)`\n  font-family: \"Inter\";\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 18px;\n  text-decoration: none;\n  padding: 8px 25px;\n  align-items: center;\n  border-radius: 0px 8px 8px 0px;\n\n  &:hover {\n    color: ${({ theme }) => theme.variableColors.hoverTextBtn};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 18px;\n  }\n`;\n\nexport const NavLinkDay = styled(NavLinkBase)`\n  color: ${({ theme }) => theme.variableColors.activeTextColorBtn};\n  background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n`;\n\nexport const ActiveLinkDay = styled(NavLinkBase)`\n  color: ${({ theme }) => theme.variableColors.activeTextColorBtn};\n  background-color: ${({ theme }) => theme.variableColors.activeButtonBlue};\n`;\n\nexport const NavLinkMonth = styled(NavLinkBase)`\n  color: ${({ theme }) => theme.variableColors.activeTextColorBtn};\n  background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  padding: 8px 16px;\n  border-right: 1px solid rgba(62, 133, 243, 0.2);\n  border-radius: 8px 0px 0px 8px;\n`;\n\nexport const ActiveLinkMonth = styled(NavLinkBase)`\n  color: ${({ theme }) => theme.variableColors.activeTextColorBtn};\n  background-color: ${({ theme }) => theme.variableColors.activeButtonBlue};\n  padding: 8px 16px;\n  border-right: 1px solid rgba(62, 133, 243, 0.2);\n  border-radius: 8px 0px 0px 8px;\n`;\n","import { format, isSameMonth } from \"date-fns\";\nimport PropTypes from \"prop-types\";\nimport { useDate } from \"hooks/useDate\";\nimport {\n  Container,\n  NavLinkDay,\n  ActiveLinkDay,\n  NavLinkMonth,\n  ActiveLinkMonth,\n} from \"./PeriodTypeSelect.styled.js\";\n\nexport const PeriodTypeSelect = ({ activePage }) => {\n  const urlDate = useDate();\n  const today = new Date();\n\n  const currentDate = format(urlDate, \"MMMMyyyy\");\n  const currentDay = format(urlDate, \"ddMMMMyyyy\");\n  const formattedToday = format(today, \"ddMMMMyyyy\");\n\n  const isToday = isSameMonth(urlDate, today);\n\n  return (\n    <Container>\n      {activePage === \"month\" ? (\n        <ActiveLinkMonth to={`/calendar/month/${currentDate}`}>\n          Month\n        </ActiveLinkMonth>\n      ) : (\n        <NavLinkMonth to={`/calendar/month/${currentDate}`}>Month</NavLinkMonth>\n      )}\n\n      {activePage === \"day\" ? (\n        <ActiveLinkDay\n          to={\n            isToday\n              ? `/calendar/day/${formattedToday}`\n              : `/calendar/day/${currentDay}`\n          }\n        >\n          Day\n        </ActiveLinkDay>\n      ) : (\n        <NavLinkDay\n          to={\n            isToday\n              ? `/calendar/day/${formattedToday}`\n              : `/calendar/day/${currentDay}`\n          }\n        >\n          Day\n        </NavLinkDay>\n      )}\n    </Container>\n  );\n};\n\nPeriodTypeSelect.propTypes = {\n  changePage: PropTypes.array,\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 18px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 32px;\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { PeriodPaginator } from \"../PeriodPaginator/PeriodPaginator\";\nimport { PeriodTypeSelect } from \"../PeriodTypeSelect/PeriodTypeSelect\";\nimport { Wrapper } from \"./CalendarToolbar.styled\";\n\nconst CalendarToolbar = () => {\n  const location = useLocation();\n\n  const activePage = (arr) => {\n    let active;\n    arr.map((page) => {\n      if (location.pathname.includes(page)) {\n        active = page;\n      }\n      return active;\n    });\n\n    return active;\n  };\n\n  const pages = [\"month\", \"day\"];\n\n  return (\n    <Wrapper>\n      <PeriodPaginator activePage={activePage(pages)} />\n      <PeriodTypeSelect activePage={activePage(pages)} />\n    </Wrapper>\n  );\n};\n\nexport default CalendarToolbar;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 20px;\n  padding-right: 20px;\n  padding-bottom: 55px;\n  background-color: ${({ theme }) => theme.variableColors.primaryBackground};\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Calendar = styled.ul.attrs((props) => ({\n  style: {\n    height: props.calendarHeight,\n    gridAutoRows: `minmax(${props.minGridRowsHeight}, 1fr)`,\n  },\n}))`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  background: var(--primary-background-color);\n  border-radius: 8px;\n  font-family: var(--primary-font);\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17px;\n\n  color: var(--calendar-digit-color);\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n\nexport const AllDays = styled.li`\n  position: relative;\n  border: var(--border-calendar);\n\n  @media (min-width: 768px) {\n    border: var(--border);\n  }\n`;\n\nexport const CurrentMonthDays = styled(AllDays)`\n  transition: background-color var(--animation), box-shadow var(--animation),\n    transform var(--animation), box-shadow var(--animation),\n    box-shadow var(--animation), box-shadow var(--animation);\n\n  &:hover,\n  :focus {\n    box-shadow: 4px 2px 16px rgba(136, 165, 191, 1);\n    transform: scale(1.05);\n    background-color: var(--primary-background-color);\n    z-index: 10;\n  }\n`;\n\nexport const OtherMonthStyledLink = styled(Link)`\n  text-decoration: none;\n  color: currentColor;\n  pointer-events: none;\n`;\nexport const CurrentMonthStyledLink = styled(Link)`\n  text-decoration: none;\n  color: currentColor;\n`;\n","import differenceInCalendarWeeks from \"../differenceInCalendarWeeks/index.js\";\nimport lastDayOfMonth from \"../lastDayOfMonth/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * const result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\nexport default function formatISO(date, options) {\n  var _options$format, _options$representati;\n  requiredArgs(1, arguments);\n  var originalDate = toDate(date);\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : '';\n\n  // Representation is either 'date' or 'complete'\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4);\n\n    // yyyyMMdd or yyyy-MM-dd.\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  }\n\n  // Representation is either 'time' or 'complete'\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2);\n      // If less than 0, the sign is +, because it is ahead of time.\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2);\n\n    // If there's also date, separate it with time with 'T'\n    var separator = result === '' ? '' : 'T';\n\n    // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n    var time = [hour, minute, second].join(timeDelimiter);\n\n    // HHmmss or HH:mm:ss.\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n  return result;\n}","export const selectMonthTasks = ({ tasks }) => tasks.monthTasks;\n\nexport const selectDayTasks = ({ tasks }) => tasks.dayTasks;\n\nexport const selectErrorTasks = ({ tasks }) => tasks.error;\n\nexport const selectIsLoadingTasks = ({ tasks }) => tasks.isLoading;\n","import styled from \"styled-components\";\nimport { TASK_PRIORITY } from \"../../../constants/Priority\";\n\nexport const DaysOfMonth = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  padding: 4px 6px;\n\n  border-radius: 6px;\n  @media (min-width: 768px) {\n    top: 12px;\n    right: 14px;\n    width: 27px;\n    height: 26px;\n\n    padding: 4px 8px;\n    border-radius: 8px;\n  }\n`;\n\nexport const Today = styled(DaysOfMonth)`\n  background-color: var(--accent-background-color);\n  color: var(--btn-text-color);\n`;\nexport const BoxTasks = styled.ul`\n  width: 100%;\n  height: 100%;\n  padding-top: ${(props) => props.columnPaddingTop}px;\n  display: grid;\n  justify-items: center;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 20px;\n  grid-gap: 2px;\n\n  @media (min-width: 768px) {\n    grid-auto-rows: 24px;\n    grid-gap: 4px;\n  }\n`;\n\nexport const Task = styled.li`\n  display: grid;\n  align-content: center;\n  grid-template-columns: 1fr;\n  grid-template-rows: minmax(auto, 10px);\n\n  width: 95%;\n  padding: 0 4px;\n  background: var(\n    ${(props) => {\n      if (props.priority === TASK_PRIORITY.medium) {\n        return \"--priority-medium-bg-color\";\n      }\n      if (props.priority === TASK_PRIORITY.high) {\n        return \"--priority-high-bg-color\";\n      }\n      return \"--priority-low-bg-color\";\n    }}\n  );\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    width: 90%;\n    grid-template-rows: minmax(auto, 11px);\n    padding: 0 6px;\n  }\n  @media (min-width: 1280px) {\n    width: 90%;\n  }\n`;\n\nexport const Title = styled.p`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-family: var(--primary-font);\n  font-style: normal;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1;\n\n  color: var(\n    ${(props) => {\n      if (props.priority === TASK_PRIORITY.medium) {\n        return \"--task-priority-medium-color\";\n      }\n      if (props.priority === TASK_PRIORITY.high) {\n        return \"--task-priority-high-color\";\n      }\n      return \"--task-priority-low-color\";\n    }}\n  );\n  @media (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\nexport const MoreTasks = styled.p`\n  margin-top: 4px;\n  white-space: nowrap;\n\n  font-family: var(--primary-font);\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1;\n  @media (min-width: 768px) {\n    margin-top: 6.5px;\n    font-weight: 600;\n    font-size: 12px;\n  }\n  @media (min-width: 1280px) {\n    margin-top: 4px;\n    font-size: 14px;\n  }\n`;\n","import { format, isSameDay, isThisMonth, isToday } from 'date-fns';\nimport { useParams } from 'react-router-dom';\nimport {\n  DaysOfMonth,\n  Today,\n  BoxTasks, Title,\n  Task,\n  MoreTasks,\n} from './CalendarTableItem.styled';\nimport { useMedia } from 'react-use';\nimport PropTypes from 'prop-types';\n\nexport const CalendarTableItem = ({ day, dayTasks, gridRowHeight }) => {\n  const DayOfMonth = useParams();\n  const isWide = useMedia('(min-width: 768px)');\n  const isWideSmaller = useMedia('(max-width: 374.98px)');\n\n  const borderHeight = 1;\n  let columnPaddingTop = 27;\n  let taskHeight = 20 + 2; // height + gap\n\n  if (isWide) {\n    columnPaddingTop = 36;\n    taskHeight = 24 + 4; // height + gap\n  }\n\n  const maxTasksInColumn = Math.floor(\n    (gridRowHeight + borderHeight * 2 - columnPaddingTop) / taskHeight\n  );\n \n\n  const countTasks = dayTasks?.length;\n\n  const AllDays = isThisMonth(new Date(DayOfMonth.currentDate))\n    ? isToday(day)\n      ? Today\n      : DaysOfMonth\n    : isSameDay(new Date(DayOfMonth.currentDate), new Date(day))\n    ? Today\n    : DaysOfMonth;\n  return (\n    <>\n      <AllDays>{format(day, 'd')}</AllDays>\n      <BoxTasks length={dayTasks?.length} columnPaddingTop={columnPaddingTop}>\n        {countTasks > 0 &&\n          countTasks <= maxTasksInColumn &&\n          dayTasks?.map(task => {\n            return (\n              <Task key={task._id} priority={task.priority}>\n                <Title priority={task.priority}>{task.title}</Title>\n              </Task>\n            );\n          })}\n        {countTasks > 0 &&\n          countTasks > maxTasksInColumn &&\n          dayTasks?.map((task, idx) => {\n            if (idx < maxTasksInColumn - 1) {\n              return (\n                <Task key={task._id} priority={task.priority}>\n                  <Title priority={task.priority}>{task.title}</Title>\n                </Task>\n              );\n            }\n            return false;\n          })}\n        {countTasks > maxTasksInColumn && isWideSmaller ? (\n          <MoreTasks>+ {countTasks - maxTasksInColumn + 1}</MoreTasks>\n        ) : (\n          countTasks > maxTasksInColumn && (\n            <MoreTasks>+{countTasks - maxTasksInColumn + 1} More</MoreTasks>\n          )\n        )}\n      </BoxTasks>\n    </>\n  );\n};\nCalendarTableItem.propTypes = {\n  day: PropTypes.object.isRequired,\n  dayTasks:\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        createDay: PropTypes.number.isRequired,\n        createMonth: PropTypes.number.isRequired,\n        createYear: PropTypes.number.isRequired,\n        end: PropTypes.string,\n        owner: PropTypes.any.isRequired,\n        priority: PropTypes.string.isRequired,\n        start: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n      })\n    ) || undefined.isRequired,\n    gridRowHeight: PropTypes.number.isRequired,\n};\n","import isSameMonth from \"../isSameMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * const result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import { /* useDispatch, */ useSelector } from \"react-redux\";\nimport {\n  Calendar,\n  AllDays,\n  CurrentMonthDays,\n  OtherMonthStyledLink,\n  CurrentMonthStyledLink,\n} from \"./CalendarTable.styled\";\nimport {\n  format,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  isSameMonth,\n  eachDayOfInterval,\n  formatISO,\n  getWeeksInMonth,\n} from \"date-fns\";\nimport {\n  selectMonthTasks,\n  selectIsLoadingTasks,\n} from \"../../../redux/tasks/selectors\";\nimport { CalendarTableItem } from \"./CalendarTableItem\";\nimport { GusLoader } from \"../../Loader/GusLoader\";\nimport { useMedia, useWindowSize } from \"react-use\";\n\nexport const CalendarTable = () => {\n  /* const dispath = useDispatch(); */\n  const currentMonth = new Date();\n  const isLoading = useSelector(selectIsLoadingTasks);\n\n  const tasksOfMonth = useSelector(selectMonthTasks);\n\n  const monthStart = startOfMonth(currentMonth);\n  const monthEnd = endOfMonth(currentMonth);\n\n  const daysInMonth = eachDayOfInterval({\n    start: startOfWeek(monthStart, { weekStartsOn: 1 }),\n    end: endOfWeek(monthEnd, { weekStartsOn: 1 }),\n  });\n\n  const isTablet = useMedia(\"(min-width: 768px) and (max-width: 1279.98px)\");\n  const isDesktop = useMedia(\"(min-width: 1280px)\");\n\n  let minGridRowsHeight = 94;\n  let headerHeight = 278;\n\n  if (isTablet) {\n    minGridRowsHeight = 122;\n    headerHeight = 264;\n  }\n\n  if (isDesktop) {\n    minGridRowsHeight = 122;\n    headerHeight = 294;\n  }\n\n  const { height: windowHeight } = useWindowSize();\n  const weeksInMonth = getWeeksInMonth(new Date(currentMonth), {\n    weekStartsOn: 1,\n  });\n  const minCalendarHeight = weeksInMonth * minGridRowsHeight;\n  let calendarHeight = minCalendarHeight;\n  if (windowHeight > minCalendarHeight + headerHeight) {\n    calendarHeight = windowHeight - headerHeight - 2;\n  }\n\n  const gridRowHeight = Math.floor(calendarHeight / weeksInMonth);\n\n  return (\n    <>\n      <Calendar\n        calendarHeight={`${calendarHeight}px`}\n        minGridRowsHeight={`${minGridRowsHeight}px`}\n      >\n        {isLoading && <GusLoader />}\n        {daysInMonth?.map((day, idx) => {\n          const StyledLink = !isSameMonth(day, currentMonth)\n            ? OtherMonthStyledLink\n            : CurrentMonthStyledLink;\n\n          const Days = !isSameMonth(day, currentMonth)\n            ? AllDays\n            : CurrentMonthDays;\n          return (\n            <Days key={idx}>\n              <StyledLink\n                to={`/calendar/day/${formatISO(new Date(day), {\n                  representation: \"date\",\n                })}`}\n              >\n                {isSameMonth(day, currentMonth) && (\n                  <CalendarTableItem\n                    day={day}\n                    dayTasks={tasksOfMonth[Number(format(day, \"d\")) - 1]}\n                    gridRowHeight={gridRowHeight}\n                  />\n                )}\n              </StyledLink>\n            </Days>\n          );\n        })}\n      </Calendar>\n    </>\n  );\n};\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import { format } from \"date-fns\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport { useNavigate, Outlet, useLocation } from \"react-router-dom\";\nimport CalendarToolbar from \"../../components/CalendarPage/CalendarToolbar/CalendarToolbar\";\nimport { useDate } from \"hooks/useDate\";\nimport { Container } from \"./CalendarPage.styled\";\nimport { CalendarTable } from \"../../components/CalendarPage/CalendarTable/CalendarTable\";\n\nconst CalendarPage = () => {\n  const [isActivePage, setIsActivePage] = useState(false);\n  const navigate = useNavigate();\n  const urlDate = useDate();\n  const location = useLocation();\n  const formattedCurrentDate = format(urlDate, \"MMMMu\");\n\n  useEffect(() => {\n    if (location.pathname === \"/calendar\") {\n      navigate(`/calendar/month/${formattedCurrentDate}`);\n      return;\n    }\n  }, [formattedCurrentDate, navigate, location.pathname]);\n\n  const doActiveDate = () => {\n    setIsActivePage(false);\n  };\n  const doActiveMonth = () => {\n    setIsActivePage(true);\n  };\n\n  return (\n    <Container>\n      <CalendarToolbar\n        isActivePage={isActivePage}\n        doActiveMonth={doActiveMonth}\n        doActiveDate={doActiveDate}\n      />\n      <CalendarTable />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["_path","useDate","params","useParams","date","Date","currentDate","Object","prototype","toString","call","isNaN","_excluded","_extends","assign","bind","target","i","arguments","length","source","key","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconArrowRight","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","SvgIconArrowLeft","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","ButtonsContainer","_templateObject2","ButtonBase","button","_templateObject3","theme","variableColors","secondaryBackground","ButtonLeft","_templateObject4","ButtonRight","_templateObject5","TitleContainer","_templateObject6","_ref2","backgroundButton","Name","h1","_templateObject7","_ref3","textButton","IconRight","IconArrowRight","_templateObject8","_ref4","arrowColor","IconRightActive","_templateObject9","_ref5","activeArrowColor","IconLeft","IconArrowLeft","_templateObject10","_ref6","IconLeftActive","_templateObject11","_ref7","PeriodPaginator","activePage","_useState","useState","_useState2","_slicedToArray","activeBtn","setActiveBtn","navigate","useNavigate","urlDate","_jsxs","children","_Fragment","_jsx","format","type","onClick","subMonths","concat","addMonths","subDays","addDays","Container","NavLinkBase","NavLink","hoverTextBtn","NavLinkDay","activeTextColorBtn","buttonBlue","ActiveLinkDay","activeButtonBlue","NavLinkMonth","ActiveLinkMonth","_ref8","_ref9","PeriodTypeSelect","today","currentDay","formattedToday","isToday","isSameMonth","to","location","useLocation","arr","active","map","page","pathname","includes","pages","primaryBackground","Calendar","ul","attrs","style","calendarHeight","gridAutoRows","minGridRowsHeight","AllDays","li","CurrentMonthDays","OtherMonthStyledLink","Link","CurrentMonthStyledLink","getWeeksInMonth","options","requiredArgs","differenceInCalendarWeeks","dirtyDate","toDate","month","getMonth","setFullYear","getFullYear","setHours","lastDayOfMonth","startOfMonth","formatISO","_options$format","_options$representati","originalDate","getTime","RangeError","String","representation","result","tzOffset","dateDelimiter","timeDelimiter","day","addLeadingZeros","getDate","year","offset","getTimezoneOffset","absoluteOffset","Math","abs","hourOffset","floor","minuteOffset","separator","time","getHours","getMinutes","getSeconds","join","selectMonthTasks","tasks","monthTasks","selectIsLoadingTasks","isLoading","DaysOfMonth","Today","BoxTasks","columnPaddingTop","Task","priority","TASK_PRIORITY","medium","high","Title","p","MoreTasks","CalendarTableItem","dayTasks","gridRowHeight","DayOfMonth","isWide","useMedia","isWideSmaller","taskHeight","maxTasksInColumn","borderHeight","countTasks","now","isThisMonth","isSameDay","task","_id","idx","CalendarTable","currentMonth","useSelector","tasksOfMonth","monthStart","monthEnd","endOfMonth","daysInMonth","dirtyInterval","_options$step","interval","startDate","start","endTime","end","dates","step","Number","push","setDate","eachDayOfInterval","startOfWeek","weekStartsOn","endOfWeek","headerHeight","windowHeight","useWindowSize","weeksInMonth","minCalendarHeight","GusLoader","StyledLink","Days","isActivePage","setIsActivePage","formattedCurrentDate","useEffect","CalendarToolbar","doActiveMonth","doActiveDate","Suspense","fallback","Outlet"],"sourceRoot":""}