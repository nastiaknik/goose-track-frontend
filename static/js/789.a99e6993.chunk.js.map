{"version":3,"file":"static/js/789.a99e6993.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/endOfISOWeek/index.js","../node_modules/date-fns/esm/formatISO/index.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useMedia.js","components/CalendarPage/CalendarTable/CalendarTable.styled.js","components/CalendarPage/CalendarTable/CalendarTable.js","pages/CalendarPage/CalendarPage.js"],"sourcesContent":["import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import endOfWeek from \"../endOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from \"../toDate/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.representation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\nexport default function formatISO(date, options) {\n  var _options$format, _options$representati;\n  requiredArgs(1, arguments);\n  var originalDate = toDate(date);\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n  var format = String((_options$format = options === null || options === void 0 ? void 0 : options.format) !== null && _options$format !== void 0 ? _options$format : 'extended');\n  var representation = String((_options$representati = options === null || options === void 0 ? void 0 : options.representation) !== null && _options$representati !== void 0 ? _options$representati : 'complete');\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : '';\n\n  // Representation is either 'date' or 'complete'\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4);\n\n    // yyyyMMdd or yyyy-MM-dd.\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  }\n\n  // Representation is either 'time' or 'complete'\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2);\n      // If less than 0, the sign is +, because it is ahead of time.\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2);\n\n    // If there's also date, separate it with time with 'T'\n    var separator = result === '' ? '' : 'T';\n\n    // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n    var time = [hour, minute, second].join(timeDelimiter);\n\n    // HHmmss or HH:mm:ss.\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n  return result;\n}","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexport default useMedia;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  background: var(--primary-bg-color);\n  border: var(--border-calendar);\n  border-radius: 8px;\n  @media (min-width: 768px) {\n    border: var(--border);\n  }\n`;\nexport const ListMonth = styled(List)`\n  grid-template-rows: 50px;\n  @media (min-width: 768px) {\n    grid-template-rows: 46px;\n  }\n`;\nexport const ListDays = styled(List)`\n  grid-template-rows: 74px;\n  @media (min-width: 768px) {\n    grid-template-rows: 68px;\n  }\n`;\n\nexport const Month = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Days = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 10px;\n\n  padding-top: 10px;\n`;\n\nconst Day = styled.div`\n  font-family: \"Inter\", sans-serif;\n  font-style: normal;\n\n  text-transform: uppercase;\n\n  color: var(--secondary-text-color);\n  text-align: center;\n`;\n\nexport const DayWeek = styled(Day)`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.12px;\n`;\n\nexport const OtherMonthStyledLink = styled(Link)`\n  text-decoration: none;\n  color: currentColor;\n  pointer-events: none;\n`;\nexport const CurrentMonthStyledLink = styled(Link)`\n  text-decoration: none;\n  color: currentColor;\n`;\n\nconst DateOfWeek = styled(Day)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17px;\n\n  width: 24px;\n  height: 24px;\n  padding: 4px 6px;\n  color: var(--secondary-text-color);\n  border-radius: 6px;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.12px;\n    width: 27px;\n    height: 26px;\n    padding: 4px 8px;\n    border-radius: 6px;\n  }\n`;\n\nexport const ChoosedDate = styled(DateOfWeek)`\n  background-color: var(--accent-bg-color);\n  color: var(--primary-bg-color);\n`;\nexport const DateOfWeekCurrentMonth = styled(DateOfWeek)`\n  transition: box-shadow var(--animation), box-shadow var(--animation);\n\n  &:hover,\n  :focus {\n    box-shadow: 4px 4px 24px rgba(136, 165, 191, 1);\n  }\n`;\n\nexport const DateOfWeekOtherMonth = styled(DateOfWeek)`\n  opacity: 0.3;\n`;\n","import {\n  startOfISOWeek,\n  format,\n  eachDayOfInterval,\n  endOfISOWeek,\n  isSameDay,\n  formatISO,\n  isSameMonth,\n} from \"date-fns\";\nimport PropTypes from \"prop-types\";\nimport { useMedia } from \"react-use\";\n\nimport {\n  ListMonth,\n  DateOfWeekCurrentMonth,\n  DateOfWeekOtherMonth,\n  ChoosedDate,\n  DayWeek,\n  Days,\n  Month,\n  ListDays,\n  OtherMonthStyledLink,\n  CurrentMonthStyledLink,\n} from \"./CalendarTable.styled\";\n\nexport const CalendarHead = ({ currentDay }) => {\n  const isWide = useMedia(\"(min-width: 768px)\");\n\n  let daysInWeek;\n\n  if (currentDay) {\n    daysInWeek = eachDayOfInterval({\n      start: startOfISOWeek(new Date(currentDay), { weekStartsOn: 1 }),\n      end: endOfISOWeek(new Date(currentDay), { weekStartsOn: 1 }),\n    });\n  } else {\n    daysInWeek = eachDayOfInterval({\n      start: startOfISOWeek(new Date(), { weekStartsOn: 1 }),\n      end: endOfISOWeek(new Date(), { weekStartsOn: 1 }),\n    });\n  }\n\n  const List = currentDay ? ListDays : ListMonth;\n\n  return (\n    <>\n      <List>\n        {daysInWeek?.map((day, idx) => {\n          const Week = currentDay ? Days : Month;\n          const StyledLink = !isSameMonth(new Date(day), new Date())\n            ? OtherMonthStyledLink\n            : CurrentMonthStyledLink;\n\n          const DateOfWeek = isSameMonth(new Date(day), new Date())\n            ? DateOfWeekCurrentMonth\n            : DateOfWeekOtherMonth;\n\n          const DateWeek = isSameDay(new Date(currentDay), new Date(day))\n            ? ChoosedDate\n            : DateOfWeek;\n\n          return (\n            <Week key={idx}>\n              {isWide ? (\n                <DayWeek>{format(day, \"EEE\")}</DayWeek>\n              ) : (\n                <DayWeek>{format(day, \"EEEEE\")}</DayWeek>\n              )}\n\n              {currentDay && (\n                <StyledLink\n                  to={`/calendar/day/${formatISO(new Date(day), {\n                    representation: \"date\",\n                  })}`}\n                >\n                  <DateWeek>{format(day, \"d\")}</DateWeek>\n                </StyledLink>\n              )}\n            </Week>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nCalendarHead.propTypes = {\n  currentDay: PropTypes.string,\n};\n","import { CalendarHead } from \"../../components/CalendarPage/CalendarTable/CalendarTable\";\n\nfunction CalendarPage() {\n  return <CalendarHead />;\n}\n\nexport default CalendarPage;\n"],"names":["eachDayOfInterval","dirtyInterval","options","_options$step","requiredArgs","arguments","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","currentDate","setHours","step","Number","isNaN","push","setDate","getDate","endOfISOWeek","dirtyDate","endOfWeek","weekStartsOn","formatISO","date","_options$format","_options$representati","originalDate","format","String","representation","result","tzOffset","dateDelimiter","timeDelimiter","day","addLeadingZeros","month","getMonth","year","getFullYear","concat","offset","getTimezoneOffset","absoluteOffset","Math","abs","hourOffset","floor","minuteOffset","separator","time","getHours","getMinutes","getSeconds","join","isBrowser","window","query","defaultState","_a","useState","undefined","matchMedia","matches","getInitialState","state","setState","useEffect","mounted","mql","onChange","addListener","removeListener","List","styled","ul","_templateObject","_taggedTemplateLiteral","ListMonth","_templateObject2","ListDays","_templateObject3","Month","li","_templateObject4","Days","_templateObject5","Day","div","_templateObject6","DayWeek","_templateObject7","OtherMonthStyledLink","Link","_templateObject8","CurrentMonthStyledLink","_templateObject9","DateOfWeek","_templateObject10","ChoosedDate","_templateObject11","DateOfWeekCurrentMonth","_templateObject12","DateOfWeekOtherMonth","_templateObject13","CalendarHead","_ref","_daysInWeek","daysInWeek","currentDay","isWide","useMedia","startOfISOWeek","Date","_jsx","_Fragment","children","map","idx","Week","StyledLink","isSameMonth","DateWeek","isSameDay","_jsxs","to"],"sourceRoot":""}