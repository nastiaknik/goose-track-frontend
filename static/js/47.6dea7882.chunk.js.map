{"version":3,"file":"static/js/47.6dea7882.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const Container = styled.section`\n  width: 1087px;\n  /* height: 752px; */\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left:113px;\n  padding-right: 114px;\n  padding-top: 142px;\n  padding-bottom:104px;\n`;\nexport const ChartHead = styled.div`\ndisplay:flex;\njustify-content: space-between;\nmargin-bottom:40px;\n`;\nexport const LegendList = styled.ul`\n  display: flex;\n  gap: 30px;\n  /* list-style: disc; */\n  color: ${({ theme }) => theme.variableColors.text};\n  li{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const Chart = styled.div`\n  width: 860px;\n  height: 440px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  color: #fff;\n\n  padding: 10px;\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  /* margin-left: 40px; */\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding: 20px;\n  }\n`;\n","// https://chat.openai.com/\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  LabelList,\n  ResponsiveContainer,\n} from \"recharts\";\nimport {\n  Chart,\n} from \"./StatisticsChart.styled\";\n\nexport const StatisticsChart = ({\n  todoByDayPer,\n  inprogressByDayPer,\n  doneByDayPer,\n  todoByMPer,\n  inprogressByMPer,\n  doneByMPer,\n  currentTheme\n}) => {\n  // console.log(`принял todoByDayPer ${todoByDayPer}`);\n  // console.log(`принял inprogressByDayPer${inprogressByDayPer}`);\n  // console.log(`принял doneByDayPer${doneByDayPer}`);\n  // console.log(`принял todoByMPer${todoByMPer}`);\n  // console.log(`принял inprogressByMPer${inprogressByMPer}`);\n  //  console.log(`принял doneByMPer${doneByMPer}`);\n \n  const data = [\n    {\n      name: \"To Do\",\n      ByDay: todoByDayPer,\n      ByMonth: todoByMPer,\n      amt: 2400,\n    },\n    {\n      name: \"In Progress\",\n      ByDay: inprogressByDayPer,\n      ByMonth: inprogressByMPer,\n      amt: 2210,\n    },\n    {\n      name: \"Done\",\n      ByDay: doneByDayPer,\n      ByMonth: doneByMPer,\n      amt: 2290,\n    },\n  ];\n\n  const  renderCustomizedLabel =  (props) => {\n    const { x, y, width, value } =  props;\n    const radius = 15;\n    return currentTheme ? (\n      <g>\n        <text\n          x={x + 2 + width / 2}\n          y={y - radius}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={x + 2 + width / 2}\n          y={y - radius}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n\n  return (\n    <>\n      {data &&\n        \n      <Chart>\n        <ResponsiveContainer width={800} height=\"80%\">\n          <BarChart\n            width={780}\n            height={400}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n            barCategoryGap={75}\n            barGap={10}\n            barSize={27}\n          >\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"0%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={0}\n                />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={1}\n                />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"0%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={0}\n                />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={1}\n                />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} />\n            <XAxis dataKey=\"name\" tickLine={false} tickMargin={16} />\n\n            <YAxis\n              type=\"number\"\n              domain={[0, 100]}\n              position=\"left\"\n              axisLine={false}\n              tickLine={false}\n              tickMargin={50}\n            >\n              <Label value=\"Task\" position=\"top\" offset={-8} />\n            </YAxis>\n            <Bar\n              dataKey=\"ByDay\"\n              fill=\"url(#colorUv)\"\n              radius={[0, 0, 10, 10]}\n              // maxBarSize={27}\n            >\n              <LabelList\n                dataKey=\"ByDay\"\n                position=\"top\"\n                content={renderCustomizedLabel}\n                // formatter={(value) => `${value}%`}\n              />\n            </Bar>\n            <Bar\n              dataKey=\"ByMonth\"\n              fill=\"url(#colorUv1)\"\n              radius={[0, 0, 10, 10]}\n              // maxBarSize={27}\n            >\n              <LabelList\n                dataKey=\"ByMonth\"\n                position=\"top\"\n                content={renderCustomizedLabel}\n                // formatter={(value) => `${value}%`}\n              />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </Chart>\n      }\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const Container = styled.section`\n  width: 1087px;\n  /* height: 752px; */\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left: 113px;\n  padding-right: 114px;\n  padding-top: 142px;\n  padding-bottom: 104px;\n`;\n","import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport const LegendList = styled.ul`\n  display: flex;\n  gap: 30px;\n  /* list-style: disc; */\n  color: ${({ theme }) => theme.variableColors.text};\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const ChartHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n`;\nexport const PrevDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background: transparent;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const NextDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background: transparent;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 134px;\n  height: 42px;\n  margin-right:8px;\n  border: ${({ hasError, success }) => {\n    if (hasError) {\n      return \"var(--border-auth-error)\";\n    }\n    if (success) {\n      return \"var(--border-auth-correct)\";\n    }\n    return \"var(--border)\";\n  }};\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 12px 12px 12px 14px;\n  box-sizing: border-box;\n  color: white;\n  background-color: #3e85f3;\n\n  :focus-visible {\n    outline: none;\n    border: var(--border-input-hover);\n    border-radius: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 145px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 14px 14px 14px 18px;\n  }\n  transition: border var(--animation);\n\n  :hover,\n  :focus {\n    border: ${({ hasError, success }) => {\n      if (hasError) {\n        return \"var(--border-auth-error)\";\n      }\n      if (success) {\n        return \"var(--border-auth-correct)\";\n      }\n      return \"var(--border-input-hover)\";\n    }};\n  }\n`;\n","\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from \"react-icons/md\";\n\nimport {\n  StyledDatePicker,\n  DatePickerWrapper,\n  DataContainer,\n  PrevDayButton,\n  NextDayButton,\n  LegendList,\n  ChartHead,\n} from \"./StatisticsHead.styled\";\nimport { TbPointFilled } from \"react-icons/tb\";\n\n\nexport const StatisticsHead = ({\n  selectedDate,\n  setSelectedDate,\n  handlePreviousDay,\n  handleNextDay,\n}) => {\n\n  return (\n    <ChartHead>\n      <DataContainer>\n        <DatePickerWrapper>\n          <StyledDatePicker\n            selected={selectedDate}\n            onChange={(date) => setSelectedDate(date)}\n            dateFormat=\"d MMMM yyyy \"\n          />\n        </DatePickerWrapper>\n        <PrevDayButton onClick={handlePreviousDay}>\n          <MdOutlineKeyboardArrowLeft />\n        </PrevDayButton>\n        <NextDayButton onClick={handleNextDay}>\n          <MdOutlineKeyboardArrowRight />\n        </NextDayButton>\n      </DataContainer>\n      <LegendList>\n        <li>\n          <TbPointFilled color=\"#FFD2DD\" size={20} />\n          <span>By Day</span>\n        </li>\n        <li>\n          <TbPointFilled color=\"#3E85F3\" size={20} />\n          <span>By Month</span>\n        </li>\n      </LegendList>\n    </ChartHead>\n  );\n};\n\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { selectMonthTasks, selectDayTasks } from \"redux/tasks/selectors\";\nimport { Container } from \"./StatisticsPage.styled\";\nimport { StatisticsHead } from \"components/StatisticsPage/StatisticsChart/StatisticsHead\";\nimport { getTasksByMonth, getTasksByDay } from \"redux/tasks/operations\";\n\n\nfunction StatisticsPage() {\n\n const [selectedDate, setSelectedDate] = useState(new Date());\n\n const handlePreviousDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() - 1);\n   setSelectedDate(newDate);\n };\n\n const handleNextDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() + 1);\n   setSelectedDate(newDate);\n };\n\n const dispatch = useDispatch();\n \n//   const paramsM={ year: `${selectedDate.getFullYear()}`,\n//      month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),}\n  \n const paramsM = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n\n  // const paramsD = {\n  //   year: `${selectedDate.getFullYear()}`,\n  //   month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n  //   day: `${selectedDate.getDate()}`.padStart(2, \"0\"),\n  // };\n  \n const paramsD = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n     day: `${selectedDate.getDate()}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n\n\n useEffect(() => {\n  \n   dispatch(getTasksByDay(paramsD));\n }, [paramsD, dispatch]);\n   useEffect(() => {\n     dispatch(getTasksByMonth(paramsM));\n    \n   }, [paramsM, dispatch]);\n\n\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n  const tasksM = useSelector(selectMonthTasks);\n  const tasksD = useSelector(selectDayTasks);\n\n  const todoByM = tasksM.filter((task) => task.category === \"To do\").length ;\nconst inprogressByM = tasksM.filter((task) => task.category === \"In progress\").length;\nconst doneByM = tasksM.filter((task) => task.category === \"Done\").length;\n\nconst todoByDay = tasksD.filter((task) => task.category === \"To do\").length;\nconst inprogressByDay = tasksD.filter((task) => task.category === \"In progress\").length;\n  const doneByDay = tasksD.filter((task) => task.category === \"Done\").length;\n  \n\n  // ФУНКЦІЯ ДЛЯ ПЕРЕВІРКИ КОМПОНЕНТА STATISTICS CHART БЕЗ ДАННИХ ЗІ СТОРА\n\n// function getRandomInt(min, max) {\n//   min = Math.ceil(min);\n//   max = Math.floor(max);\n//   return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\n// }\n\n  // const todoByDay = getRandomInt(0,11);\n  // const inprogressByDay = getRandomInt(0, 11);\n  // const doneByDay = getRandomInt(0, 11);\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100) || 0;\n  const inprogressByDayPer =\n    Math.round((inprogressByDay / allTasksByDay) * 100) || 0;\n  const doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100) || 0;\n\n  //   const todoByM = getRandomInt(11, 30);\n  // const inprogressByM = getRandomInt(11, 30);\n  // const doneByM = getRandomInt(11, 30);\n  const allTasksByM = todoByM + inprogressByM + doneByM;\n  const todoByMPer = Math.round((todoByM / allTasksByM) * 100) || 0;\n  const inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100) || 0;\n  const doneByMPer = Math.round((doneByM / allTasksByM) * 100) || 0;\n\n//  console.log(`отправил todoByDayPer ${todoByDayPer}`);\n//  console.log(`отправил inprogressByDayPer${inprogressByDayPer}`);\n//  console.log(`отправил doneByDayPer${doneByDayPer}`);\n//  console.log(`отправил todoByMPer${todoByMPer}`);\n//  console.log(`отправил inprogressByMPer${inprogressByMPer}`);\n//  console.log(`отправил doneByMPer${doneByMPer}`);\n\n  return (\n    <>\n      <Container>\n        <StatisticsHead\n         selectedDate={selectedDate}\n         setSelectedDate={setSelectedDate}\n         handlePreviousDay={handlePreviousDay}\n         handleNextDay={handleNextDay}\n        />\n        <StatisticsChart\n          todoByDayPer={todoByDayPer}\n          inprogressByDayPer={inprogressByDayPer}\n          doneByDayPer={doneByDayPer}\n          todoByMPer={todoByMPer}\n          inprogressByMPer={inprogressByMPer}\n          doneByMPer={doneByMPer}\n          currentTheme={currentTheme}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default StatisticsPage;\n"],"names":["Chart","styled","section","_templateObject","_taggedTemplateLiteral","_ref","theme","variableColors","secondaryBackground","div","_templateObject2","ul","_templateObject3","_ref2","text","_templateObject4","_ref3","_ref4","borderColor","StatisticsChart","todoByDayPer","inprogressByDayPer","doneByDayPer","todoByMPer","inprogressByMPer","doneByMPer","currentTheme","data","name","ByDay","ByMonth","amt","renderCustomizedLabel","props","x","y","width","value","_jsx","children","fill","textAnchor","dominantBaseline","concat","_Fragment","ResponsiveContainer","height","_jsxs","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","barSize","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","Bar","radius","LabelList","content","Container","LegendList","ChartHead","PrevDayButton","button","NextDayButton","DataContainer","_templateObject5","DatePickerWrapper","_templateObject6","StyledDatePicker","DatePicker","_templateObject7","hasError","success","_ref5","StatisticsHead","selectedDate","setSelectedDate","handlePreviousDay","handleNextDay","selected","onChange","date","dateFormat","onClick","MdOutlineKeyboardArrowLeft","MdOutlineKeyboardArrowRight","TbPointFilled","color","size","_useState","useState","Date","_useState2","_slicedToArray","dispatch","useDispatch","paramsM","useMemo","year","getFullYear","month","getMonth","padStart","paramsD","day","getDate","useEffect","getTasksByDay","getTasksByMonth","useSelector","state","tasksM","selectMonthTasks","tasksD","selectDayTasks","todoByM","filter","task","category","length","inprogressByM","doneByM","todoByDay","inprogressByDay","doneByDay","allTasksByDay","Math","round","allTasksByM","newDate","setDate"],"sourceRoot":""}