{"version":3,"file":"static/js/47.1e580ccb.chunk.js","mappings":"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","sources":["components/SharedComponents/DatePicker/DatePicker.styled.js","components/SharedComponents/DatePicker/DatePicker.js","components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker-wrapper {\n    width: 100%;\n  }\n\n  .react-datepicker__input-container {\n    > input {\n      width: 100%;\n    }\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n    border: none;\n    margin-bottom: 20px;\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px 14px 12px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n  font-family: \"InterRegular\";\n  font-size: 14px;\n  line-height: 1.3;\n  color: ${({ theme }) => theme.variableColors.text};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n\n  :focus-visible {\n    outline: none;\n    border: ${({ theme }) => theme.variableColors.borderInputHover};\n    border-radius: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 18px 18px 16px;\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 121px;\n  height: 30px;\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 6px 12px;\n  box-sizing: border-box;\n  color: white;\n  background-color: #3e85f3;\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    min-width: 145px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 8px 12px;\n  }\n\n  :hover,\n  :focus {\n    background-color: var(--hover-btn-bg-color);\n  }\n\n  transition: background-color var(--animation);\n`;\n","import { forwardRef } from \"react\";\nimport { DatePickerWrapper, Input, Button } from \"./DatePicker.styled\";\nimport DatePicker from \"react-datepicker\";\n\nexport const StyledDatePicker = (props) => {\n  return (\n    <DatePickerWrapper>\n      <DatePicker\n        customInput={<CustomInput element={props.element} />}\n        {...props}\n      />\n    </DatePickerWrapper>\n  );\n};\n\nconst CustomInput = forwardRef(({ value, onClick, element }, ref) => {\n  console.log(element);\n  return element === \"input\" ? (\n    <Input onClick={onClick} ref={ref} value={value} />\n  ) : (\n    <Button onClick={onClick} ref={ref}>\n      {value}\n    </Button>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const Chart = styled.div`\n  & .recharts-cartesian-axis-tick-value {\n    fill: ${({ theme }) => theme.variableColors.text};\n  }\n  & .recharts-surface {\n    overflow: visible;\n  }\n  & .recharts-label {\n    fill: ${({ theme }) => theme.variableColors.text};\n    font-size: 14px;\n    font-family: \"InterSemiBold\";\n    font-style: normal;\n    font-weight: 600;\n    line-height: 1.5;\n  }\n\n  max-width: 640px;\n  height: 413px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding: 40px 14px 30px 14px;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  font-size: 14px;\n\n  font-family: \"InterRegular\";\n  font-weight: 400;\n  color: ${({ theme }) => theme.variableColors.text};\n\n  @media (min-width: 768px) {\n    max-width: 860px;\n    height: 424px;\n    padding: 32px 32px 10px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n    height: 440px;\n    padding: 40px 40px 15px 40px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  LabelList,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Chart } from \"./StatisticsChart.styled\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const StatisticsChart = ({\n  todoByDayPer,\n  inprogressByDayPer,\n  doneByDayPer,\n  todoByMPer,\n  inprogressByMPer,\n  doneByMPer,\n  currentTheme,\n}) => {\n  const { t } = useTranslation();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const chartElements = [\n      {\n        name: t(\"To Do\"),\n        ByDay: todoByDayPer,\n        ByMonth: todoByMPer,\n        amt: 2400,\n      },\n      {\n        name: t(\"In Progress\"),\n        ByDay: inprogressByDayPer,\n        ByMonth: inprogressByMPer,\n        amt: 2210,\n      },\n      {\n        name: t(\"Done\"),\n        ByDay: doneByDayPer,\n        ByMonth: doneByMPer,\n        amt: 2290,\n      },\n    ];\n    setData(chartElements);\n  }, [\n    todoByDayPer,\n    todoByMPer,\n    inprogressByDayPer,\n    inprogressByMPer,\n    doneByDayPer,\n    doneByMPer,\n    t,\n  ]);\n\n  const renderCustomizedLabel = (props) => {\n    const { x, y, width, value } = props;\n    const radius = 15;\n    const valX = x + 2 + width / 2;\n    let valY;\n\n    if (value === 100) {\n      valY = y + radius;\n    } else {\n      valY = y - radius;\n    }\n    return currentTheme ? (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <>\n      {data.length > 0 && (\n        <Chart>\n          <ResponsiveContainer height=\"90%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              barCategoryGap=\"25%\"\n              barGap=\"15%\"\n            >\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <defs>\n                <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <CartesianGrid vertical={false} />\n              <XAxis dataKey=\"name\" tickLine={false} tickMargin={14} />\n\n              <YAxis\n                width={25}\n                type=\"number\"\n                domain={[0, 100]}\n                position=\"left\"\n                axisLine={false}\n                tickLine={false}\n                tickMargin={8}\n              >\n                <Label\n                  position=\"insideTopRight\"\n                  value={t(\"Tasks\")}\n                  dx={-5}\n                  dy={-40}\n                />\n              </YAxis>\n              <Bar dataKey=\"ByDay\" fill=\"url(#colorUv)\" radius={[0, 0, 10, 10]}>\n                <LabelList\n                  dataKey=\"ByDay\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n              <Bar\n                dataKey=\"ByMonth\"\n                fill=\"url(#colorUv1)\"\n                radius={[0, 0, 10, 10]}\n              >\n                <LabelList\n                  dataKey=\"ByMonth\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Chart>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const Container = styled.section`\n  max-width: 704px;\n  height: 864px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 24px;\n  padding-bottom: 135px;\n\n  @media (min-width: 768px) {\n    max-width: 1087px;\n    height: 854px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 132px;\n    padding-bottom: 224px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 100vw;\n    height: 752px;\n    padding-left: 113px;\n    padding-right: 114px;\n    padding-top: 134px;\n    padding-bottom: 104px;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: none;\n`;\n","import styled from \"styled-components\";\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from \"react-icons/md\";\n\nexport const LegendList = styled.ul`\n  font-family: \"InterRegular\";\n  font-weight: 400;\n  display: flex;\n  gap: 30px;\n  color: ${({ theme }) => theme.variableColors.text};\n  padding-inline-start: 0px;\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ChartHead = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* max-width: 307px; */\n  justify-content: space-between;\n  margin-bottom: 40px;\n  max-width: 640px;\n  margin-left: auto;\n  margin-right: auto;\n  @media (min-width: 768px) {\n    max-width: 860px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n  }\n`;\n\nexport const PrevDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  }\n`;\n\nexport const NextDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  }\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 767.9px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtDiv = styled.div`\n  display: flex;\n  @media (min-width: 768px) {\n    margin-left: 8px;\n  }\n`;\n\nexport const LeftArrow = styled(MdOutlineKeyboardArrowLeft)`\n  fill: ${({ theme }) => theme.variableColors.arrowColor};\n`;\n\nexport const RightArrow = styled(MdOutlineKeyboardArrowRight)`\n  fill: ${({ theme }) => theme.variableColors.arrowColor};\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { enUS as en, uk as ua, pl, es } from \"date-fns/locale\";\nimport { StyledDatePicker } from \"components/SharedComponents/DatePicker/DatePicker\";\nimport { TbPointFilled } from \"react-icons/tb\";\nimport {\n  DataContainer,\n  PrevDayButton,\n  NextDayButton,\n  LegendList,\n  ChartHead,\n  ButtDiv,\n  LeftArrow,\n  RightArrow,\n} from \"./StatisticsHead.styled\";\n\nexport const StatisticsHead = ({\n  selectedDate,\n  setSelectedDate,\n  handlePreviousDay,\n  handleNextDay,\n}) => {\n  const { i18n, t } = useTranslation();\n  const currentLanguage = i18n.language;\n  const locale = { en, ua, pl, es };\n\n  return (\n    <ChartHead>\n      <DataContainer>\n        <StyledDatePicker\n          selected={selectedDate}\n          onChange={(date) => setSelectedDate(date)}\n          dateFormat=\"d MMMM yyyy \"\n          element=\"button\"\n          locale={locale[currentLanguage]}\n        />\n        <ButtDiv>\n          <PrevDayButton onClick={handlePreviousDay}>\n            <LeftArrow />\n          </PrevDayButton>\n          <NextDayButton onClick={handleNextDay}>\n            <RightArrow />\n          </NextDayButton>\n        </ButtDiv>\n      </DataContainer>\n      <LegendList>\n        <li>\n          <TbPointFilled color=\"#FFD2DD\" size={20} />\n          <span>{t(\"By Day\")}</span>\n        </li>\n        <li>\n          <TbPointFilled color=\"#3E85F3\" size={20} />\n          <span>{t(\"By Month\")}</span>\n        </li>\n      </LegendList>\n    </ChartHead>\n  );\n};\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectMonthTasks, selectDayTasks } from \"redux/tasks/selectors\";\nimport { Container, Title } from \"./StatisticsPage.styled\";\nimport { StatisticsHead } from \"components/StatisticsPage/StatisticsChart/StatisticsHead\";\nimport { getTasksByMonth, getTasksByDay } from \"redux/tasks/operations\";\n\n\nfunction StatisticsPage() {\n\n const [selectedDate, setSelectedDate] = useState(new Date());\n\n const handlePreviousDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() - 1);\n   setSelectedDate(newDate);\n };\n\n const handleNextDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() + 1);\n   setSelectedDate(newDate);\n };\n\n const dispatch = useDispatch();\n  \n const paramsM = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n  \n const paramsD = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n     day: `${selectedDate.getDate()}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n\n\n useEffect(() => {\n  \n   dispatch(getTasksByDay(paramsD));\n }, [paramsD, dispatch]);\n   useEffect(() => {\n     dispatch(getTasksByMonth(paramsM));\n    \n   }, [paramsM, dispatch]);\n\n\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n  const tasksM = useSelector(selectMonthTasks);\n  const tasksD = useSelector(selectDayTasks);\n\n  const todoByM = tasksM.filter((task) => task.category === \"To do\").length ;\nconst inprogressByM = tasksM.filter((task) => task.category === \"In progress\").length;\nconst doneByM = tasksM.filter((task) => task.category === \"Done\").length;\n\nconst todoByDay = tasksD.filter((task) => task.category === \"To do\").length;\nconst inprogressByDay = tasksD.filter((task) => task.category === \"In progress\").length;\n  const doneByDay = tasksD.filter((task) => task.category === \"Done\").length;\n  \n\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100) || 0;\n  const inprogressByDayPer =\n    Math.round((inprogressByDay / allTasksByDay) * 100) || 0;\n  const doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100) || 0;\n\n \n  const allTasksByM = todoByM + inprogressByM + doneByM;\n  const todoByMPer = Math.round((todoByM / allTasksByM) * 100) || 0;\n  const inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100) || 0;\n  const doneByMPer = Math.round((doneByM / allTasksByM) * 100) || 0;\n\n  return (\n    <>\n      <Container>\n      <Title>Statistics</Title>\n        <StatisticsHead\n         selectedDate={selectedDate}\n         setSelectedDate={setSelectedDate}\n         handlePreviousDay={handlePreviousDay}\n         handleNextDay={handleNextDay}\n        />\n        <StatisticsChart\n          todoByDayPer={todoByDayPer}\n          inprogressByDayPer={inprogressByDayPer}\n          doneByDayPer={doneByDayPer}\n          todoByMPer={todoByMPer}\n          inprogressByMPer={inprogressByMPer}\n          doneByMPer={doneByMPer}\n          currentTheme={currentTheme}\n        />\n      </Container>\n    </>\n  );\n}\n\nStatisticsHead.propTypes = {\n  selectedDate: PropTypes.any,\n  setSelectedDate: PropTypes.func,\n  handlePreviousDay: PropTypes.func,\n  handleNextDay: PropTypes.func,\n};\nStatisticsChart.propTypes = {\n  todoByDayPer: PropTypes.number,\n  inprogressByDayPer: PropTypes.number,\n  doneByDayPer: PropTypes.number,\n  todoByMPer: PropTypes.number,\n  inprogressByMPer: PropTypes.number,\n  doneByMPer: PropTypes.number,\n  currentTheme: PropTypes.bool,\n};\n\nexport default StatisticsPage;\n"],"names":["DatePickerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Input","input","_templateObject2","_ref","error","isSubmited","color","validateColor","_ref2","theme","variableColors","text","_ref3","secondaryBackground","_ref4","borderInputHover","Button","button","_templateObject3","StyledDatePicker","props","_jsx","children","DatePicker","_objectSpread","customInput","CustomInput","element","forwardRef","ref","value","onClick","console","log","Chart","borderColor","_ref5","StatisticsChart","todoByDayPer","inprogressByDayPer","doneByDayPer","todoByMPer","inprogressByMPer","doneByMPer","currentTheme","t","useTranslation","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","chartElements","name","ByDay","ByMonth","amt","renderCustomizedLabel","valY","x","y","width","valX","fill","textAnchor","dominantBaseline","concat","_Fragment","length","ResponsiveContainer","height","_jsxs","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","dx","dy","Bar","radius","LabelList","content","Container","section","Title","h1","LegendList","ul","ChartHead","PrevDayButton","buttonBlue","NextDayButton","_templateObject4","_ref6","_ref7","DataContainer","_templateObject5","ButtDiv","_templateObject6","LeftArrow","MdOutlineKeyboardArrowLeft","_templateObject7","_ref8","arrowColor","RightArrow","MdOutlineKeyboardArrowRight","_templateObject8","_ref9","StatisticsHead","selectedDate","setSelectedDate","handlePreviousDay","handleNextDay","_useTranslation","i18n","currentLanguage","language","locale","en","ua","pl","es","selected","onChange","date","dateFormat","TbPointFilled","size","propTypes","PropTypes","Date","dispatch","useDispatch","paramsM","useMemo","year","getFullYear","month","getMonth","padStart","paramsD","day","getDate","getTasksByDay","getTasksByMonth","useSelector","state","tasksM","selectMonthTasks","tasksD","selectDayTasks","todoByM","filter","task","category","inprogressByM","doneByM","todoByDay","inprogressByDay","doneByDay","allTasksByDay","Math","round","allTasksByM","newDate","setDate"],"sourceRoot":""}