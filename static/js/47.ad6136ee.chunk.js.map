{"version":3,"file":"static/js/47.ad6136ee.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Chart = styled.div`\n  max-width: 307px;\n  height: 413px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding: 40px 14px 30px 14px;\n\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  @media (min-width: 768px) {\n    max-width: 640px;\n    height: 424px;\n    padding: 32px 32px 10px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n    height: 440px;\n    padding: 40px 40px 15px 40px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  LabelList,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Chart } from \"./StatisticsChart.styled\";\n\nexport const StatisticsChart = ({\n  todoByDayPer,\n  inprogressByDayPer,\n  doneByDayPer,\n  todoByMPer,\n  inprogressByMPer,\n  doneByMPer,\n  currentTheme,\n}) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const qwe = [\n      {\n        name: \"To Do\",\n        ByDay: todoByDayPer,\n        ByMonth: todoByMPer,\n        amt: 2400,\n      },\n      {\n        name: \"In Progress\",\n        ByDay: inprogressByDayPer,\n        ByMonth: inprogressByMPer,\n        amt: 2210,\n      },\n      {\n        name: \"Done\",\n        ByDay: doneByDayPer,\n        ByMonth: doneByMPer,\n        amt: 2290,\n      },\n    ];\n    setData(qwe);\n  }, [\n    todoByDayPer,\n    todoByMPer,\n    inprogressByDayPer,\n    inprogressByMPer,\n    doneByDayPer,\n    doneByMPer,\n  ]);\n\n  const renderCustomizedLabel = (props) => {\n    const { x, y, width, value } = props;\n    const radius = 15;\n    const valX = x + 2 + width / 2;\n    let valY;\n\n    if (value === 100) {\n      valY = y + radius;\n    } else {\n      valY = y - radius;\n    }\n    return currentTheme ? (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <>\n      {data.length > 0 && (\n        <Chart>\n          <ResponsiveContainer height=\"90%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              // barCategoryGap={75}\n              barGap={10}\n              barSize={27}\n            >\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <defs>\n                <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <CartesianGrid vertical={false} />\n              <XAxis dataKey=\"name\" tickLine={false} tickMargin={14} />\n\n              <YAxis\n                width={50}\n                type=\"number\"\n                domain={[0, 100]}\n                position=\"left\"\n                axisLine={false}\n                tickLine={false}\n                tickMargin={40}\n              >\n                <Label value=\"Task\" position=\"top\" offset={-9} />\n              </YAxis>\n              <Bar dataKey=\"ByDay\" fill=\"url(#colorUv)\" radius={[0, 0, 10, 10]}>\n                <LabelList\n                  dataKey=\"ByDay\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n              <Bar\n                dataKey=\"ByMonth\"\n                fill=\"url(#colorUv1)\"\n                radius={[0, 0, 10, 10]}\n              >\n                <LabelList\n                  dataKey=\"ByMonth\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Chart>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const Container = styled.section`\n  max-width: 335px;\n  height: 864px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 24px;\n  padding-bottom: 135px;\n\n  @media (min-width: 768px) {\n    max-width: 704px;\n    height: 854px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 132px;\n    padding-bottom: 224px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1087px;\n    height: 752px;\n    padding-left: 113px;\n    padding-right: 114px;\n    padding-top: 134px;\n    padding-bottom: 104px;\n  }\n`;\n","import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport const LegendList = styled.ul`\n  display: flex;\n  gap: 30px;\n  color: ${({ theme }) => theme.variableColors.text};\n  padding-inline-start: 0px;\n   li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const ChartHead = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 307px;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  max-width: 640px;\n  @media (min-width: 768px) {\n    max-width: 640px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n  }\n`;\nexport const PrevDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background: transparent;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const NextDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background: transparent;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* :hover,\n  :focus {\n    fill: ${({ theme }) => theme.variableColors.tex};\n  } */\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media (max-width: 767.9px) {\n    width: 100%;\n  }\n`;\nexport const ButtDiv = styled.div`\n  display: flex;\n  @media (min-width: 768px) {\n    margin-left: 8px;\n  }\n`;\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 121px;\n  height: 30px;\n  border: ${({ hasError, success }) => {\n    if (hasError) {\n      return \"var(--border-auth-error)\";\n    }\n    if (success) {\n      return \"var(--border-auth-correct)\";\n    }\n    return \"var(--border)\";\n  }};\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 6px 12px 6px 12px;\n  box-sizing: border-box;\n  color: white;\n  background-color: #3e85f3;\n  text-align: center;\n\n  /* :focus-visible {\n    outline: none;\n    border: var(--border-input-hover);\n    border-radius: 8px;\n  } */\n\n  @media screen and (min-width: 768px) {\n    width: 145px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 8px 12px 8px 12px;\n  }\n\n  transition: border var(--animation);\n\n  :hover,\n  :focus {\n    border: ${({ hasError, success }) => {\n      if (hasError) {\n        return \"var(--border-auth-error)\";\n      }\n      if (success) {\n        return \"var(--border-auth-correct)\";\n      }\n      return \"var(--border-input-hover)\";\n    }};\n  }\n`;\n","\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from \"react-icons/md\";\n\nimport {\n  StyledDatePicker,\n  DatePickerWrapper,\n  DataContainer,\n  PrevDayButton,\n  NextDayButton,\n  LegendList,\n  ChartHead,\n  ButtDiv,\n} from \"./StatisticsHead.styled\";\nimport { TbPointFilled } from \"react-icons/tb\";\n\n\nexport const StatisticsHead = ({\n  selectedDate,\n  setSelectedDate,\n  handlePreviousDay,\n  handleNextDay,\n}) => {\n\n  return (\n    <ChartHead>\n      <DataContainer>\n        <DatePickerWrapper>\n          <StyledDatePicker\n            selected={selectedDate}\n            onChange={(date) => setSelectedDate(date)}\n            dateFormat=\"d MMMM yyyy \"\n          />\n        </DatePickerWrapper>\n        <ButtDiv>\n          <PrevDayButton onClick={handlePreviousDay}>\n            <MdOutlineKeyboardArrowLeft />\n          </PrevDayButton>\n          <NextDayButton onClick={handleNextDay}>\n            <MdOutlineKeyboardArrowRight />\n          </NextDayButton>\n        </ButtDiv>\n      </DataContainer>\n      <LegendList>\n        <li>\n          <TbPointFilled color=\"#FFD2DD\" size={20} />\n          <span>By Day</span>\n        </li>\n        <li>\n          <TbPointFilled color=\"#3E85F3\" size={20} />\n          <span>By Month</span>\n        </li>\n      </LegendList>\n    </ChartHead>\n  );\n};\n\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { selectMonthTasks, selectDayTasks } from \"redux/tasks/selectors\";\nimport { Container } from \"./StatisticsPage.styled\";\nimport { StatisticsHead } from \"components/StatisticsPage/StatisticsChart/StatisticsHead\";\nimport { getTasksByMonth, getTasksByDay } from \"redux/tasks/operations\";\n\n\nfunction StatisticsPage() {\n\n const [selectedDate, setSelectedDate] = useState(new Date());\n\n const handlePreviousDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() - 1);\n   setSelectedDate(newDate);\n };\n\n const handleNextDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() + 1);\n   setSelectedDate(newDate);\n };\n\n const dispatch = useDispatch();\n  \n const paramsM = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n  \n const paramsD = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n     day: `${selectedDate.getDate()}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n\n\n useEffect(() => {\n  \n   dispatch(getTasksByDay(paramsD));\n }, [paramsD, dispatch]);\n   useEffect(() => {\n     dispatch(getTasksByMonth(paramsM));\n    \n   }, [paramsM, dispatch]);\n\n\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n  const tasksM = useSelector(selectMonthTasks);\n  const tasksD = useSelector(selectDayTasks);\n\n  const todoByM = tasksM.filter((task) => task.category === \"To do\").length ;\nconst inprogressByM = tasksM.filter((task) => task.category === \"In progress\").length;\nconst doneByM = tasksM.filter((task) => task.category === \"Done\").length;\n\nconst todoByDay = tasksD.filter((task) => task.category === \"To do\").length;\nconst inprogressByDay = tasksD.filter((task) => task.category === \"In progress\").length;\n  const doneByDay = tasksD.filter((task) => task.category === \"Done\").length;\n  \n\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100) || 0;\n  const inprogressByDayPer =\n    Math.round((inprogressByDay / allTasksByDay) * 100) || 0;\n  const doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100) || 0;\n\n \n  const allTasksByM = todoByM + inprogressByM + doneByM;\n  const todoByMPer = Math.round((todoByM / allTasksByM) * 100) || 0;\n  const inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100) || 0;\n  const doneByMPer = Math.round((doneByM / allTasksByM) * 100) || 0;\n\n  return (\n    <>\n      <Container>\n        <StatisticsHead\n         selectedDate={selectedDate}\n         setSelectedDate={setSelectedDate}\n         handlePreviousDay={handlePreviousDay}\n         handleNextDay={handleNextDay}\n        />\n        <StatisticsChart\n          todoByDayPer={todoByDayPer}\n          inprogressByDayPer={inprogressByDayPer}\n          doneByDayPer={doneByDayPer}\n          todoByMPer={todoByMPer}\n          inprogressByMPer={inprogressByMPer}\n          doneByMPer={doneByMPer}\n          currentTheme={currentTheme}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default StatisticsPage;\n"],"names":["Chart","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","variableColors","secondaryBackground","_ref2","borderColor","StatisticsChart","todoByDayPer","inprogressByDayPer","doneByDayPer","todoByMPer","inprogressByMPer","doneByMPer","currentTheme","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","name","ByDay","ByMonth","amt","renderCustomizedLabel","props","valY","x","y","width","value","valX","_jsx","children","fill","textAnchor","dominantBaseline","concat","_Fragment","length","ResponsiveContainer","height","_jsxs","BarChart","margin","top","right","left","bottom","barGap","barSize","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","Bar","radius","LabelList","content","Container","section","LegendList","ul","text","ChartHead","_templateObject2","PrevDayButton","button","_templateObject3","NextDayButton","_templateObject4","_ref3","_ref4","tex","DataContainer","_templateObject5","ButtDiv","_templateObject6","DatePickerWrapper","_templateObject7","StyledDatePicker","DatePicker","_templateObject8","_ref5","hasError","success","_ref6","StatisticsHead","selectedDate","setSelectedDate","handlePreviousDay","handleNextDay","selected","onChange","date","dateFormat","onClick","MdOutlineKeyboardArrowLeft","MdOutlineKeyboardArrowRight","TbPointFilled","color","size","Date","dispatch","useDispatch","paramsM","useMemo","year","getFullYear","month","getMonth","padStart","paramsD","day","getDate","getTasksByDay","getTasksByMonth","useSelector","state","tasksM","selectMonthTasks","tasksD","selectDayTasks","todoByM","filter","task","category","inprogressByM","doneByM","todoByDay","inprogressByDay","doneByDay","allTasksByDay","Math","round","allTasksByM","newDate","setDate"],"sourceRoot":""}