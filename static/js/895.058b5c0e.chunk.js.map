{"version":3,"file":"static/js/895.058b5c0e.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsChart/StatisticsHead.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.styled.js","components/StatisticsPage/StatisticsChart/StatisticsHead.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from \"react-icons/md\";\n\nexport const LegendList = styled.ul`\n  font-family: \"InterRegular\";\n  font-weight: 400;\n  display: flex;\n  gap: 30px;\n  color: ${({ theme }) => theme.variableColors.text};\n  padding-inline-start: 0px;\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const ChartHead = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* max-width: 307px; */\n  justify-content: space-between;\n  margin-bottom: 40px;\n  max-width: 640px;\n  margin-left: auto;\n  margin-right: auto;\n  @media (min-width: 768px) {\n    max-width: 860px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n  }\n`;\n\nexport const PrevDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  }\n`;\n\nexport const NextDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.variableColors.buttonBlue};\n  }\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 767.9px) {\n    width: 100%;\n  }\n`;\n\nexport const ButtDiv = styled.div`\n  display: flex;\n  @media (min-width: 768px) {\n    margin-left: 8px;\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    border: none;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 121px;\n  height: 30px;\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 6px 12px 6px 12px;\n  box-sizing: border-box;\n  color: white;\n  background-color: #3e85f3;\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 145px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 8px 12px 8px 12px;\n  }\n\n  :hover,\n  :focus {\n    background-color: var(--hover-btn-bg-color);\n  }\n  transition: background-color var(--animation);\n`;\n\nexport const LeftArrow = styled(MdOutlineKeyboardArrowLeft)`\n  fill: ${({ theme }) => theme.variableColors.arrowColor};\n`;\n\nexport const RightArrow = styled(MdOutlineKeyboardArrowRight)`\n  fill: ${({ theme }) => theme.variableColors.arrowColor};\n`;\n","import styled from \"styled-components\";\n\nexport const Chart = styled.div`\n  & .recharts-cartesian-axis-tick-value {\n    fill: ${({ theme }) => theme.variableColors.text};\n  }\n  & .recharts-surface {\n    overflow: visible;\n  }\n  & .recharts-label {\n    fill: ${({ theme }) => theme.variableColors.text};\n    font-size: 14px;\n    font-family: \"InterSemiBold\";\n    font-style: normal;\n    font-weight: 600;\n    line-height: 1.5;\n  }\n\n  max-width: 640px;\n  height: 413px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding: 40px 14px 30px 14px;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  font-size: 14px;\n\n  font-family: \"InterRegular\";\n  font-weight: 400;\n  color: ${({ theme }) => theme.variableColors.text};\n\n  @media (min-width: 768px) {\n    max-width: 860px;\n    height: 424px;\n    padding: 32px 32px 10px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 860px;\n    height: 440px;\n    padding: 40px 40px 15px 40px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  LabelList,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Chart } from \"./StatisticsChart.styled\";\n\nexport const StatisticsChart = ({\n  todoByDayPer,\n  inprogressByDayPer,\n  doneByDayPer,\n  todoByMPer,\n  inprogressByMPer,\n  doneByMPer,\n  currentTheme,\n}) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const chartElements = [\n      {\n        name: \"To Do\",\n        ByDay: todoByDayPer,\n        ByMonth: todoByMPer,\n        amt: 2400,\n      },\n      {\n        name: \"In Progress\",\n        ByDay: inprogressByDayPer,\n        ByMonth: inprogressByMPer,\n        amt: 2210,\n      },\n      {\n        name: \"Done\",\n        ByDay: doneByDayPer,\n        ByMonth: doneByMPer,\n        amt: 2290,\n      },\n    ];\n    setData(chartElements);\n  }, [\n    todoByDayPer,\n    todoByMPer,\n    inprogressByDayPer,\n    inprogressByMPer,\n    doneByDayPer,\n    doneByMPer,\n  ]);\n\n  const renderCustomizedLabel = (props) => {\n    const { x, y, width, value } = props;\n    const radius = 15;\n    const valX = x + 2 + width / 2;\n    let valY;\n\n    if (value === 100) {\n      valY = y + radius;\n    } else {\n      valY = y - radius;\n    }\n    return currentTheme ? (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={valX}\n          y={valY}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <>\n      {data.length > 0 && (\n        <Chart>\n          <ResponsiveContainer height=\"90%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n              barCategoryGap=\"25%\"\n              barGap=\"15%\"\n              // barSize={27}\n              // barSize={isMobile? 15: 27}\n            >\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(255, 210, 221)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <defs>\n                <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={0}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"rgb(62, 133, 243)\"\n                    stopOpacity={1}\n                  />\n                </linearGradient>\n              </defs>\n              <CartesianGrid vertical={false} />\n              <XAxis dataKey=\"name\" tickLine={false} tickMargin={14} />\n\n              <YAxis\n                width={25}\n                type=\"number\"\n                domain={[0, 100]}\n                position=\"left\"\n                axisLine={false}\n                tickLine={false}\n                tickMargin={8}\n              >\n                <Label\n                  position=\"insideTopRight\"\n                  value=\"Tasks\"\n                  dx={-5}\n                  dy={-40}\n                />\n              </YAxis>\n              <Bar dataKey=\"ByDay\" fill=\"url(#colorUv)\" radius={[0, 0, 10, 10]}>\n                <LabelList\n                  dataKey=\"ByDay\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n              <Bar\n                dataKey=\"ByMonth\"\n                fill=\"url(#colorUv1)\"\n                radius={[0, 0, 10, 10]}\n              >\n                <LabelList\n                  dataKey=\"ByMonth\"\n                  position=\"top\"\n                  content={renderCustomizedLabel}\n                />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Chart>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const Container = styled.section`\n  max-width: 704px;\n  height: 864px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 24px;\n  padding-bottom: 135px;\n\n  @media (min-width: 768px) {\n    max-width: 1087px;\n    height: 854px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 132px;\n    padding-bottom: 224px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 100vw;\n    height: 752px;\n    padding-left: 113px;\n    padding-right: 114px;\n    padding-top: 134px;\n    padding-bottom: 104px;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: none;\n`;\n","import {\n  StyledDatePicker,\n  DatePickerWrapper,\n  DataContainer,\n  PrevDayButton,\n  NextDayButton,\n  LegendList,\n  ChartHead,\n  ButtDiv,\n  LeftArrow,\n  RightArrow,\n} from \"./StatisticsHead.styled\";\nimport { TbPointFilled } from \"react-icons/tb\";\n\nexport const StatisticsHead = ({\n  selectedDate,\n  setSelectedDate,\n  handlePreviousDay,\n  handleNextDay,\n}) => {\n  return (\n    <ChartHead>\n      <DataContainer>\n        <DatePickerWrapper>\n          <StyledDatePicker\n            selected={selectedDate}\n            onChange={(date) => setSelectedDate(date)}\n            dateFormat=\"d MMMM yyyy \"\n          />\n        </DatePickerWrapper>\n        <ButtDiv>\n          <PrevDayButton onClick={handlePreviousDay}>\n            <LeftArrow />\n          </PrevDayButton>\n          <NextDayButton onClick={handleNextDay}>\n            <RightArrow />\n          </NextDayButton>\n        </ButtDiv>\n      </DataContainer>\n      <LegendList>\n        <li>\n          <TbPointFilled color=\"#FFD2DD\" size={20} />\n          <span>By Day</span>\n        </li>\n        <li>\n          <TbPointFilled color=\"#3E85F3\" size={20} />\n          <span>By Month</span>\n        </li>\n      </LegendList>\n    </ChartHead>\n  );\n};\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectMonthTasks, selectDayTasks } from \"redux/tasks/selectors\";\nimport { Container, Title } from \"./StatisticsPage.styled\";\nimport { StatisticsHead } from \"components/StatisticsPage/StatisticsChart/StatisticsHead\";\nimport { getTasksByMonth, getTasksByDay } from \"redux/tasks/operations\";\n\n\nfunction StatisticsPage() {\n\n const [selectedDate, setSelectedDate] = useState(new Date());\n\n const handlePreviousDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() - 1);\n   setSelectedDate(newDate);\n };\n\n const handleNextDay = () => {\n   const newDate = new Date(selectedDate);\n   newDate.setDate(newDate.getDate() + 1);\n   setSelectedDate(newDate);\n };\n\n const dispatch = useDispatch();\n  \n const paramsM = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n  \n const paramsD = useMemo(() => {\n   return {\n     year: `${selectedDate.getFullYear()}`,\n     month: `${selectedDate.getMonth() + 1}`.padStart(2, \"0\"),\n     day: `${selectedDate.getDate()}`.padStart(2, \"0\"),\n   };\n }, [selectedDate]);\n\n\n useEffect(() => {\n  \n   dispatch(getTasksByDay(paramsD));\n }, [paramsD, dispatch]);\n   useEffect(() => {\n     dispatch(getTasksByMonth(paramsM));\n    \n   }, [paramsM, dispatch]);\n\n\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n  const tasksM = useSelector(selectMonthTasks);\n  const tasksD = useSelector(selectDayTasks);\n\n  const todoByM = tasksM.filter((task) => task.category === \"To do\").length ;\nconst inprogressByM = tasksM.filter((task) => task.category === \"In progress\").length;\nconst doneByM = tasksM.filter((task) => task.category === \"Done\").length;\n\nconst todoByDay = tasksD.filter((task) => task.category === \"To do\").length;\nconst inprogressByDay = tasksD.filter((task) => task.category === \"In progress\").length;\n  const doneByDay = tasksD.filter((task) => task.category === \"Done\").length;\n  \n\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100) || 0;\n  const inprogressByDayPer =\n    Math.round((inprogressByDay / allTasksByDay) * 100) || 0;\n  const doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100) || 0;\n\n \n  const allTasksByM = todoByM + inprogressByM + doneByM;\n  const todoByMPer = Math.round((todoByM / allTasksByM) * 100) || 0;\n  const inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100) || 0;\n  const doneByMPer = Math.round((doneByM / allTasksByM) * 100) || 0;\n\n  return (\n    <>\n      <Container>\n      <Title>Statistics</Title>\n        <StatisticsHead\n         selectedDate={selectedDate}\n         setSelectedDate={setSelectedDate}\n         handlePreviousDay={handlePreviousDay}\n         handleNextDay={handleNextDay}\n        />\n        <StatisticsChart\n          todoByDayPer={todoByDayPer}\n          inprogressByDayPer={inprogressByDayPer}\n          doneByDayPer={doneByDayPer}\n          todoByMPer={todoByMPer}\n          inprogressByMPer={inprogressByMPer}\n          doneByMPer={doneByMPer}\n          currentTheme={currentTheme}\n        />\n      </Container>\n    </>\n  );\n}\n\nStatisticsHead.propTypes = {\n  selectedDate: PropTypes.any,\n  setSelectedDate: PropTypes.func,\n  handlePreviousDay: PropTypes.func,\n  handleNextDay: PropTypes.func,\n};\nStatisticsChart.propTypes = {\n  todoByDayPer: PropTypes.number,\n  inprogressByDayPer: PropTypes.number,\n  doneByDayPer: PropTypes.number,\n  todoByMPer: PropTypes.number,\n  inprogressByMPer: PropTypes.number,\n  doneByMPer: PropTypes.number,\n  currentTheme: PropTypes.bool,\n};\n\nexport default StatisticsPage;\n"],"names":["LegendList","styled","ul","_templateObject","_taggedTemplateLiteral","_ref","theme","variableColors","text","ChartHead","div","_templateObject2","PrevDayButton","button","_templateObject3","_ref2","borderColor","_ref3","secondaryBackground","_ref4","buttonBlue","NextDayButton","_templateObject4","_ref5","_ref6","_ref7","DataContainer","_templateObject5","ButtDiv","_templateObject6","DatePickerWrapper","_templateObject7","StyledDatePicker","DatePicker","_templateObject8","LeftArrow","MdOutlineKeyboardArrowLeft","_templateObject9","_ref8","arrowColor","RightArrow","MdOutlineKeyboardArrowRight","_templateObject10","_ref9","Chart","StatisticsChart","todoByDayPer","inprogressByDayPer","doneByDayPer","todoByMPer","inprogressByMPer","doneByMPer","currentTheme","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","name","ByDay","ByMonth","amt","renderCustomizedLabel","props","valY","x","y","width","value","valX","_jsx","children","fill","textAnchor","dominantBaseline","concat","_Fragment","length","ResponsiveContainer","height","_jsxs","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","dx","dy","Bar","radius","LabelList","content","Container","section","Title","h1","StatisticsHead","selectedDate","setSelectedDate","handlePreviousDay","handleNextDay","selected","onChange","date","dateFormat","onClick","TbPointFilled","color","size","propTypes","PropTypes","Date","dispatch","useDispatch","paramsM","useMemo","year","getFullYear","month","getMonth","padStart","paramsD","day","getDate","getTasksByDay","getTasksByMonth","useSelector","state","tasksM","selectMonthTasks","tasksD","selectDayTasks","todoByM","filter","task","category","inprogressByM","doneByM","todoByDay","inprogressByDay","doneByDay","allTasksByDay","Math","round","allTasksByM","newDate","setDate"],"sourceRoot":""}