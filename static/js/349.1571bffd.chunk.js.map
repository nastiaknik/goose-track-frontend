{"version":3,"file":"static/js/349.1571bffd.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/PasswordStrangthIndicator/PasswordStrengthIndicator.styled.js","components/Auth/PasswordStrangthIndicator/PasswordStrengthIndicator.js","components/FormElements/FormInput/FormInput.styled.js","components/FormElements/FormInput/FormInput.js","components/Auth/PasswordRecoveryForm/PasswordRecoveryForm.styled.js","components/Auth/PasswordRecoveryForm/PasswordRecoveryForm.js","pages/PasswordRecoveryPage/PasswordRecoveryPage.styled.js","pages/PasswordRecoveryPage/PasswordRecoveryPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  padding: 40px 24px;\n  border-radius: 8px;\n  background-color: var(--primary-bg-color);\n\n  font-family: var(--primary-font);\n  font-weight: 600;\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    padding: 25px;\n  }\n\n  > label {\n    margin-top: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 18px;\n    }\n\n    :nth-child(2) {\n      margin-top: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-top: 40px;\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 1;\n  color: var(--accent-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n    0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n\n  width: 100%;\n  margin-top: 32px;\n  padding: 14px;\n\n  border-radius: 16px;\n  background: var(--accent-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: var(--light-text-color);\n  font-family: var(--primary-font);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.36px;\n\n  transition: background var(--animation);\n  :hover,\n  :focus {\n    background: var(--hover-btn-bg-color);\n  }\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    stroke-width: 3px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 48px;\n    padding: 16px;\n\n    font-size: 18px;\n  }\n`;\n\nexport const GoogleLink = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n\n  width: 100%;\n  margin-top: 10px;\n  padding: 14px;\n\n  border-radius: 16px;\n  background: var(--accent-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: var(--light-text-color);\n  font-family: var(--primary-font);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.36px;\n\n  transition: background var(--animation);\n  :hover,\n  :focus {\n    background: var(--hover-btn-bg-color);\n  }\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    stroke-width: 1px;\n\n    @media screen and (min-width: 768px) {\n      width: 22px;\n      height: 22px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n\n    font-size: 18px;\n  }\n`;\n\nexport const Divider = styled.p`\n  margin-top: 10px;\n  padding: 0 16px;\n\n  text-transform: uppercase;\n  text-align: center;\n  color: var(--auth-placeholder-color);\n\n  :before,\n  :after {\n    content: \" \";\n    display: inline-block;\n    width: 70px;\n    height: 3px;\n    background-color: var(--auth-placeholder-color);\n    margin-bottom: 5px;\n  }\n\n  :before {\n    margin-right: 10px;\n  }\n\n  :after {\n    margin-left: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    :before,\n    :after {\n      width: 155px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n`;\n","import styled from \"styled-components\";\n\nconst getBgColor = (num) => {\n  switch (num) {\n    case 0:\n      return \"#999999\";\n    case 25:\n      return \"var(--error-text-color)\";\n    case 50:\n      return \"#f59625\";\n    case 75:\n      return \"#c3e852\";\n    case 100:\n      return \"var(--correct-text-color)\";\n    default:\n      return \"transparent\";\n  }\n};\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 120%;\n  left: 2%;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 96%;\n  height: 5px;\n`;\n\nexport const ProgressBar = styled.div`\n  width: 70%;\n  height: 5px;\n  border-radius: 5px;\n  outline: 2px solid var(--auth-placeholder-color);\n\n  @media screen and (min-width: 768px) {\n    width: 75%;\n  }\n`;\n\nexport const ProgressIndicator = styled.div`\n  width: ${({ num }) => `${num}%`};\n  height: 100%;\n  background-color: ${({ num }) => getBgColor(num)};\n`;\n\nexport const ProgressText = styled.p`\n  font-size: 12px;\n  color: ${({ num }) => getBgColor(num)};\n`;\n","import zxcvbn from \"zxcvbn\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Container,\n  ProgressBar,\n  ProgressIndicator,\n  ProgressText,\n} from \"./PasswordStrengthIndicator.styled\";\n\nexport const PasswordStrengthIndicator = ({ password }) => {\n  const { t } = useTranslation();\n  const testResult = zxcvbn(password);\n  const num = (testResult.score * 100) / 4;\n\n  const handleProgressTextContent = (num) => {\n    switch (num) {\n      case 0:\n        return t(\"Very weak\");\n      case 25:\n        return t(\"Weak\");\n      case 50:\n        return t(\"Medium\");\n      case 75:\n        return t(\"Strong\");\n      case 100:\n        return t(\"Very strong\");\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <Container>\n      <ProgressBar>\n        <ProgressIndicator num={num}></ProgressIndicator>\n      </ProgressBar>\n      <ProgressText num={num}>{handleProgressTextContent(num)}</ProgressText>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nconst validateBgColor = (auth, theme) =>\n  auth\n    ? `var(--primary-bg-color)`\n    : `${theme.variableColors.secondaryBackground}`;\n\nconst validateLabelColor = (auth, theme) =>\n  auth\n    ? `var(--primary-text-color)`\n    : `${theme.variableColors.labelUserFormTextColor}`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n\n  font-size: 12px;\n  font-family: \"InterSemiBold\";\n\n  color: ${({ error, isSubmited, theme, auth }) =>\n    validateColor(error, isSubmited, validateLabelColor(auth, theme))};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputThumb = styled.span`\n  position: absolute;\n  top: 23px;\n  left: 0;\n\n  display: inline-block;\n  margin: 0;\n  width: 100%;\n  height: 46px;\n\n  @media screen and (min-width: 768px) {\n    top: 25px;\n    height: 54px;\n  }\n\n  > svg {\n    position: absolute;\n    bottom: 14px;\n    right: 8px;\n    width: 24px;\n    height: 24px;\n\n    @media screen and (min-width: 768px) {\n      bottom: 18px;\n    }\n  }\n\n  > button {\n    position: absolute;\n    bottom: 0;\n    right: 24px;\n\n    width: 46px;\n    height: 46px;\n    background-color: transparent;\n    color: var(--auth-placeholder-color);\n\n    @media screen and (min-width: 768px) {\n      width: 54px;\n      height: 54px;\n    }\n\n    > svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const StyledInput = styled.input`\n  font-family: \"InterRegular\";\n\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background-color: ${({ auth, theme }) => validateBgColor(auth, theme)};\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n\n  color: ${({ theme, auth }) => validateLabelColor(auth, theme)};\n  font-size: 14px;\n  line-height: 18px;\n\n  ::placeholder {\n    color: var(--auth-placeholder-color);\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n  }\n\n  &[type=\"password\"] {\n    ::placeholder {\n      font-family: var(--primary-font);\n      letter-spacing: 0;\n    }\n\n    :not(:placeholder-shown) {\n      font-family: Verdana, sans-serif;\n      letter-spacing: 1px;\n    }\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: ${({ type, validation }) => {\n    if (type === \"password\" && validation) {\n      return \"18px\";\n    }\n    return \"8px\";\n  }};\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport {\n  AiOutlineExclamationCircle,\n  AiOutlineCheckCircle,\n} from \"react-icons/ai\";\n\nimport { PasswordStrengthIndicator } from \"../../Auth/PasswordStrangthIndicator/PasswordStrengthIndicator\";\nimport {\n  StyledLabel,\n  InputThumb,\n  StyledInput,\n  StyledValidation,\n} from \"./FormInput.styled\";\n\nexport const FormInput = ({\n  text,\n  name,\n  type,\n  placeholder,\n  isSubmited,\n  formik,\n  setAllowSubmit,\n  user,\n  auth,\n  validation,\n}) => {\n  const { t } = useTranslation();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const checkInputName = () => {\n    if (name === \"password\") {\n      return true;\n    } else if (name === \"passwordRepeat\") {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleClick = () => {\n    setIsVisible((prevState) => !prevState);\n  };\n\n  const handleIcon = (error) => {\n    if (!isSubmited) {\n      return;\n    }\n\n    return error ? <AiOutlineExclamationCircle /> : <AiOutlineCheckCircle />;\n  };\n\n  const handleChange = (e) => {\n    formik.handleChange(e);\n    if (!setAllowSubmit || !user) {\n      return;\n    }\n\n    if (user[`${name}`] !== e.target.value) {\n      setAllowSubmit(true);\n    } else {\n      setAllowSubmit(false);\n    }\n  };\n\n  return (\n    <StyledLabel\n      auth={auth}\n      isSubmited={isSubmited}\n      error={formik.errors[`${name}`]}\n    >\n      {text}\n      <StyledInput\n        type={isVisible ? \"text\" : type}\n        name={name}\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={formik.values[`${name}`]}\n        isSubmited={isSubmited}\n        error={formik.errors[`${name}`]}\n        auth={auth}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation\n          isSubmited={isSubmited}\n          error={formik.errors[`${name}`]}\n          type={type}\n          validation={validation}\n        >\n          {formik.errors[`${name}`]\n            ? t(formik.errors[`${name}`])\n            : t(`This is a CORRECT ${name}`)}\n        </StyledValidation>\n      )}\n      <InputThumb>\n        {handleIcon(formik.errors[`${name}`])}\n        {checkInputName() && (\n          <>\n            <button type=\"button\" onClick={handleClick}>\n              {isVisible ? <LuEye /> : <LuEyeOff />}\n            </button>\n            {validation && formik.values[`${name}`].length > 0 && (\n              <PasswordStrengthIndicator password={formik.values[`${name}`]} />\n            )}\n          </>\n        )}\n      </InputThumb>\n    </StyledLabel>\n  );\n};\n\nFormInput.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  isSubmited: PropTypes.bool.isRequired,\n  formik: PropTypes.object.isRequired,\n  setAllowSubmit: PropTypes.func,\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.string,\n    phone: PropTypes.string,\n    skype: PropTypes.string,\n    imgURL: PropTypes.string,\n    updatedEmail: PropTypes.string,\n  }),\n};\n","import styled from \"styled-components\";\nimport {\n  StyledForm,\n  Title,\n  SubmitBtn,\n} from \"../RegisterForm/RegisterForm.styled\";\n\nexport const StyledRecoveryForm = styled(StyledForm)`\n  > label {\n    margin-top: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 18px;\n    }\n\n    :nth-child(2) {\n      margin-top: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-top: 40px;\n      }\n    }\n  }\n`;\n\nexport const RecoveryTitle = styled(Title)``;\n\nexport const RecoverySubmitBtn = styled(SubmitBtn)``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport axios from \"axios\";\nimport { PasswordSchema } from \"helpers/formValidationSchemas\";\nimport { toast } from \"react-toastify\";\n\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport {\n  StyledRecoveryForm,\n  RecoveryTitle,\n  RecoverySubmitBtn,\n  Wrapper,\n} from \"./PasswordRecoveryForm.styled\";\n\nexport const PasswordRecoveryForm = () => {\n  const { t } = useTranslation();\n  const [isSubmited, setIsSubmited] = useState(false);\n  const { verificationId } = useParams();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues: {\n      id: \"\",\n      password: \"\",\n      passwordRepeat: \"\",\n    },\n    validationSchema: PasswordSchema,\n    onSubmit: (values, { resetForm }) => {\n      axios\n        .patch(\n          `https://goose-track-backend-i4mr.onrender.com/api/auth/recovery`,\n          { id: values.id, password: values.password }\n        )\n        .then((response) => {\n          toast.success(t(response.data.message));\n          navigate(\"/login\", { replace: true });\n        })\n        .catch((err) => toast.error(t(err.response.data.message)));\n\n      resetForm();\n      setIsSubmited(false);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n\n    if (formik.values.password !== formik.values.passwordRepeat) {\n      toast.error(t(\"Passwords should be the same for both inputs\"));\n      return;\n    }\n\n    formik.values.id = verificationId;\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledRecoveryForm>\n      <Wrapper>\n        <RecoveryTitle>{t(\"Change password\")}</RecoveryTitle>\n      </Wrapper>\n      <FormInput\n        text=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder={t(\"Enter password\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text={t(\"Repeat password\")}\n        name=\"passwordRepeat\"\n        type=\"password\"\n        placeholder={t(\"Repeat your password\")}\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <RecoverySubmitBtn type=\"submit\" onClick={handleValidation}>\n        {t(\"Change password\")}\n      </RecoverySubmitBtn>\n    </StyledRecoveryForm>\n  );\n};\n","import styled from \"styled-components\";\nimport * as loginGooseImg from \"assets/images/login/login_goose-min.png\";\nimport * as bigLoginGooseImg from \"assets/images/login/login_goose@2x-min.png\";\n\nexport const Container = styled.section`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--auth-bg-color);\n\n  @media screen and (min-width: 1440px) {\n    background-image: url(${loginGooseImg.default});\n    background-size: ${(prop) =>\n      prop.currentPage === \"/register\" ? \"400px 416px\" : \"368px 521px\"};\n    background-position: ${(prop) =>\n      prop.currentPage === \"/register\"\n        ? \"left 50px bottom 0\"\n        : \"right 60px bottom 19px\"};\n    background-repeat: no-repeat;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bigLoginGooseImg.default});\n    }\n  }\n`;\n\nexport const ContentThumb = styled.div`\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n\n  width: 100%;\n  padding: 0 20px;\n  text-align: center;\n\n  @media screen and (min-width: 375px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 480px;\n  }\n`;\n","import { PasswordRecoveryForm } from \"components/Auth/PasswordRecoveryForm/PasswordRecoveryForm\";\nimport { Container, ContentThumb } from \"./PasswordRecoveryPage.styled\";\n\nfunction PasswordRecoveryPage() {\n  return (\n    <Container>\n      <ContentThumb>\n        <PasswordRecoveryForm />\n      </ContentThumb>\n    </Container>\n  );\n}\n\nexport default PasswordRecoveryPage;\n"],"names":["StyledForm","styled","form","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","SubmitBtn","button","_templateObject3","GoogleLink","a","_templateObject4","Divider","p","_templateObject5","Wrapper","div","_templateObject6","getBgColor","num","Container","ProgressBar","ProgressIndicator","_ref","concat","_ref2","ProgressText","_ref3","PasswordStrengthIndicator","password","t","useTranslation","zxcvbn","score","_jsxs","children","_jsx","handleProgressTextContent","validateColor","error","isSubmited","color","validateLabelColor","auth","theme","variableColors","labelUserFormTextColor","StyledLabel","label","InputThumb","span","StyledInput","input","secondaryBackground","validateBgColor","_ref4","StyledValidation","_ref5","type","validation","_ref6","FormInput","text","name","placeholder","formik","setAllowSubmit","user","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","errors","onChange","e","handleChange","target","value","values","touched","AiOutlineExclamationCircle","AiOutlineCheckCircle","handleIcon","_Fragment","onClick","prevState","LuEye","LuEyeOff","length","StyledRecoveryForm","RecoveryTitle","RecoverySubmitBtn","PasswordRecoveryForm","setIsSubmited","verificationId","useParams","navigate","useNavigate","useFormik","initialValues","id","passwordRepeat","validationSchema","PasswordSchema","onSubmit","resetForm","axios","patch","then","response","toast","success","data","message","replace","catch","err","preventDefault","handleSubmit","section","loginGooseImg","prop","currentPage","bigLoginGooseImg","ContentThumb"],"sourceRoot":""}