{"version":3,"file":"static/js/378.b68968f2.chunk.js","mappings":"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","sources":["components/SharedComponents/DatePicker/DatePicker.styled.js","components/SharedComponents/DatePicker/DatePicker.js","components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 299px;\n  height: 42px;\n  border: ${({ hasError, success }) => {\n    if (hasError) {\n      return \"var(--border-auth-error)\";\n    }\n    if (success) {\n      return \"var(--border-auth-correct)\";\n    }\n    return \"var(--border)\";\n  }};\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 12px 12px 12px 14px;\n  box-sizing: border-box;\n  color: var(--primary-text-color);\n  background-color: var(--primary-bg-color);\n\n  &:focus-visible {\n    outline: none;\n    border: var(--border);\n    border-radius: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 14px 14px 14px 18px;\n  }\n  transition: border var(--animation);\n  &:hover,\n  :focus {\n    border: ${({ hasError, success }) => {\n      if (hasError) {\n        return \"var(--border-auth-error)\";\n      }\n      if (success) {\n        return \"var(--border-auth-correct)\";\n      }\n      return \"var(--border)\";\n    }};\n  }\n`;\n","import { DatePickerWrapper, StyledDatePicker } from \"./DatePicker.styled\";\n\nexport const DatePicker = (props) => {\n  return (\n    <>\n      <DatePickerWrapper>\n        <StyledDatePicker {...props} />\n      </DatePickerWrapper>\n    </>\n  );\n};\n","import styled from \"styled-components\";\nexport const Container = styled.section`\n  width: 1087px;\n  /* height: 752px; */\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left:113px;\n  padding-right: 114px;\n  padding-top: 142px;\n  padding-bottom:104px;\n`;\nexport const ChartHead = styled.div`\ndisplay:flex;\njustify-content: space-between;\nmargin-bottom:40px;\n`;\nexport const LegendList = styled.ul`\n  display: flex;\n  gap: 30px;\n  /* list-style: disc; */\n  color: ${({ theme }) => theme.variableColors.text};\n  li{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const Chart = styled.div`\n  width: 860px;\n  height: 440px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  color: #fff;\n\n  padding: 10px;\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  /* margin-left: 40px; */\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding: 20px;\n  }\n`;\n","import { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  //   Cell,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  // Tooltip,\n  LabelList,\n  // Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport {\n  Chart,\n  Container,\n  ChartHead,\n  LegendList,\n} from \"./StatisticsChart.styled\";\nimport { DatePicker } from \"components/SharedComponents/DatePicker/DatePicker\";\nimport { TbPointFilled } from \"react-icons/tb\";\n\nconst todoByDay = 3;\nconst inprogressByDay = 2;\nconst doneByDay = 4;\nconst allTasksByDay = todoByDay + inprogressByDay + doneByDay;\nconst todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100);\nconst inprogressByDayPer = Math.round((inprogressByDay / allTasksByDay) * 100);\nconst doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100);\n\nconst todoByM = 30;\nconst inprogressByM = 30;\nconst doneByM = 40;\nconst allTasksByM = todoByM + inprogressByM + doneByM;\nconst todoByMPer = Math.round((todoByM / allTasksByM) * 100);\nconst inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100);\nconst doneByMPer = Math.round((doneByM / allTasksByM) * 100);\n\nconst data = [\n  {\n    name: \"To Do\",\n    ByDay: todoByDayPer,\n    ByMonth: todoByMPer,\n    amt: 2400,\n  },\n  {\n    name: \"In Progress\",\n    ByDay: inprogressByDayPer,\n    ByMonth: inprogressByMPer,\n    amt: 2210,\n  },\n  {\n    name: \"Done\",\n    ByDay: doneByDayPer,\n    ByMonth: doneByMPer,\n    amt: 2290,\n  },\n];\n\nexport const StatisticsChart = () => {\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n\n  const renderCustomizedLabel = (props) => {\n    const { x, y, width, value } = props;\n    const radius = 15;\n\n    return currentTheme ? (\n      <g>\n        <text\n          x={x + 2 + width / 2}\n          y={y - radius}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={x + 2 + width / 2}\n          y={y - radius}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <Container>\n      <ChartHead>\n        <DatePicker\n          // id=\"birthday\"\n          // name=\"birthday\"\n          // selected={new Date(formik.values.birthday)}\n          // onChange={(date) => {\n          //   formik.setFieldValue(\"birthday\", date);\n          // }}\n          // onBlur={formik.handleBlur}\n          dateFormat=\"dd-MM-yyyy\"\n          // maxDate={new Date()}\n          placeholderText=\"dd-MM-yyyy\"\n          formatWeekDay={(day) => day.charAt(0)}\n          calendarStartDay={1}\n          // hasError={formik.touched.birthday && formik.errors.birthday}\n          // success={formik.touched.birthday}\n        />\n        <LegendList>\n          <li>\n            <TbPointFilled color=\"#FFD2DD\" size={20} />\n            <span>By Day</span>\n          </li>\n          <li>\n            <TbPointFilled color=\"#3E85F3\" size={20} />\n            <span>By Month</span>\n          </li>\n        </LegendList>\n      </ChartHead>\n      <Chart>\n        <ResponsiveContainer width={800} height=\"80%\">\n          <BarChart\n            width={780}\n            height={400}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n            barCategoryGap={75}\n            barGap={10}\n            barSize={27}\n          >\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"0%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={0}\n                />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={1}\n                />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"0%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={0}\n                />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={1}\n                />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} />\n            <XAxis dataKey=\"name\" tickLine={false} tickMargin={16} />\n\n            <YAxis\n              type=\"number\"\n              domain={[0, allTasksByM]}\n              position=\"left\"\n              axisLine={false}\n              tickLine={false}\n              tickMargin={50}\n            >\n              <Label value=\"Task\" position=\"top\" offset={-8} />\n            </YAxis>\n            {/* <Tooltip /> */}\n            {/* <Legend /> */}\n            <Bar\n              dataKey=\"ByDay\"\n              fill=\"url(#colorUv)\"\n              radius={[0, 0, 10, 10]}\n              // maxBarSize={27}\n            >\n              <LabelList\n                dataKey=\"ByDay\"\n                position=\"top\"\n                content={renderCustomizedLabel}\n              />\n            </Bar>\n            <Bar\n              dataKey=\"ByMonth\"\n              // ${({theme})=>theme.testcolor1}\n              fill=\"url(#colorUv1)\"\n              radius={[0, 0, 10, 10]}\n              // maxBarSize={27}\n            >\n              <LabelList\n                dataKey=\"ByMonth\"\n                position=\"top\"\n                content={renderCustomizedLabel}\n              />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </Chart>\n    </Container>\n  );\n};\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nfunction StatisticsPage() {\n  return(\n  <>\n      <StatisticsChart/>\n  </>)\n}\n\nexport default StatisticsPage;\n"],"names":["DatePickerWrapper","styled","div","_templateObject","_taggedTemplateLiteral","StyledDatePicker","DatePicker","_templateObject2","_ref","hasError","success","_ref2","props","_jsx","_Fragment","children","_objectSpread","Container","section","theme","variableColors","secondaryBackground","ChartHead","LegendList","ul","_templateObject3","text","Chart","_templateObject4","_ref3","_ref4","borderColor","todoByDayPer","Math","round","todoByDay","inprogressByDayPer","doneByDayPer","allTasksByM","todoByM","data","name","ByDay","ByMonth","amt","inprogressByM","doneByM","StatisticsChart","currentTheme","useSelector","state","renderCustomizedLabel","x","y","width","value","fill","textAnchor","dominantBaseline","concat","_jsxs","dateFormat","placeholderText","formatWeekDay","day","charAt","calendarStartDay","TbPointFilled","color","size","ResponsiveContainer","height","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","barSize","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","Bar","radius","LabelList","content"],"sourceRoot":""}