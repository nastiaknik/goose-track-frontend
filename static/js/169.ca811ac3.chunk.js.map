{"version":3,"file":"static/js/169.ca811ac3.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.js","components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.js","components/Auth/ResendEmailForm/ResendEmailForm.styled.jsx","components/Auth/ResendEmailForm/ResendEmailForm.jsx","assets/images/svg/arrow-right.svg","components/Auth/AuthNavigate/AuthNavigate.styled.js","components/Auth/AuthNavigate/AuthNavigate.js","components/FormElements/FormInput/FormInput.styled.js","components/FormElements/FormInput/FormInput.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  padding: 40px 24px;\n  border-radius: 8px;\n  background-color: var(--primary-bg-color);\n\n  font-family: var(--primary-font);\n  font-weight: 600;\n  text-align: left;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n\n  > label {\n    margin-top: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 18px;\n    }\n\n    :nth-child(2) {\n      margin-top: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-top: 40px;\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  line-height: 1;\n  color: var(--accent-text-color);\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n    0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n\n  width: 100%;\n  margin-top: 32px;\n  padding: 14px;\n\n  border-radius: 16px;\n  background: var(--accent-bg-color);\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  color: var(--light-text-color);\n  font-family: var(--primary-font);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.36px;\n\n  transition: background var(--animation);\n  :hover,\n  :focus {\n    background: var(--hover-btn-bg-color);\n  }\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    stroke-width: 3px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 48px;\n    padding: 16px;\n\n    font-size: 18px;\n  }\n`;\n","import { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { RegisterSchema } from \"../../../helpers/formValidationSchemas\";\n\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\n\nimport { LuLogIn } from \"react-icons/lu\";\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport { StyledForm, Title, SubmitBtn } from \"./RegisterForm.styled\";\n\nexport const RegisterForm = () => {\n  const [isSubmited, setIsSubmited] = useState(false);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n      setIsSubmited(false);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledForm>\n      <Title>Sign Up</Title>\n      <FormInput\n        text=\"Name\"\n        name=\"username\"\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter email\"\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <SubmitBtn type=\"submit\" onClick={handleValidation}>\n        Sign Up <LuLogIn />\n      </SubmitBtn>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  StyledForm,\n  Title,\n  //   StyledLabel,\n  //   InputThumb,\n  //   StyledInput,\n  SubmitBtn,\n} from \"../RegisterForm/RegisterForm.styled\";\n\nexport const StyledLoginForm = styled(StyledForm)`\n  > label {\n    margin-top: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 18px;\n    }\n\n    :nth-child(2) {\n      margin-top: 32px;\n\n      @media screen and (min-width: 768px) {\n        margin-top: 40px;\n      }\n    }\n  }\n`;\n\nexport const LoginTitle = styled(Title)``;\n\nexport const LoginSubmitBtn = styled(SubmitBtn)``;\n","import { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { LoginSchema } from \"helpers/formValidationSchemas\";\n\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"redux/auth/operations\";\n\nimport { LuLogIn } from \"react-icons/lu\";\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport {\n  StyledLoginForm,\n  LoginTitle,\n  LoginSubmitBtn,\n} from \"./LoginForm.styled\";\n\nexport const LoginForm = () => {\n  const [isSubmited, setIsSubmited] = useState(false);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(login(values));\n      resetForm();\n      setIsSubmited(false);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <StyledLoginForm>\n      <LoginTitle>Log In</LoginTitle>\n      <FormInput\n        text=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter email\"\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <FormInput\n        text=\"Password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter password\"\n        isSubmited={isSubmited}\n        formik={formik}\n        auth={true}\n      />\n      <LoginSubmitBtn type=\"submit\" onClick={handleValidation}>\n        Log In <LuLogIn />\n      </LoginSubmitBtn>\n    </StyledLoginForm>\n  );\n};\n","import styled from \"styled-components\";\nimport {\n  StyledForm,\n  Title,\n  SubmitBtn,\n} from \"../RegisterForm/RegisterForm.styled\";\n\nexport const EmailForm = styled(StyledForm)``;\n\nexport const EmailTitle = styled(Title)``;\n\nexport const EmailSubmitBtn = styled(SubmitBtn)`\n  :disabled {\n    background-color: var(--inactive-nav-text-color);\n  }\n`;\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { EmailSchema } from \"../../../helpers/formValidationSchemas\";\nimport { toast } from \"react-toastify\";\n\nimport { FormInput } from \"components/FormElements/FormInput/FormInput\";\nimport {\n  EmailForm,\n  EmailTitle,\n  EmailSubmitBtn,\n} from \"./ResendEmailForm.styled\";\n\nexport const ResendEmailForm = () => {\n  const [isSubmited, setIsSubmited] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      setIsDisabled(false);\n    }\n\n    seconds > 0 && setTimeout(() => setSeconds(seconds - 1), 1000);\n  }, [seconds]);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n    },\n    validationSchema: EmailSchema,\n    onSubmit: (values, { resetForm }) => {\n      axios\n        .post(\n          \"https://goose-track-backend-i4mr.onrender.com/api/auth/activate\",\n          values\n        )\n        .then((response) => toast.success(response.data.message))\n        .catch((err) => toast.error(err.response.data.message));\n\n      resetForm();\n      setIsSubmited(false);\n      setIsDisabled(true);\n      setSeconds(60);\n    },\n  });\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    setIsSubmited(true);\n    formik.handleSubmit();\n  };\n\n  return (\n    <EmailForm>\n      <EmailTitle>Email verification resend</EmailTitle>\n      <FormInput\n        text=\"Email\"\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter email\"\n        isSubmited={isSubmited}\n        formik={formik}\n      />\n\n      <EmailSubmitBtn\n        type=\"submit\"\n        disabled={isDisabled}\n        onClick={handleValidation}\n      >\n        {isDisabled ? `Resend email in ${seconds} sec` : \"Resend email\"}\n      </EmailSubmitBtn>\n    </EmailForm>\n  );\n};\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Complete\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polyline\", {\n    \"data-name\": \"Right\",\n    fill: \"none\",\n    id: \"Right-2\",\n    points: \"16.4 7 21.5 12 16.4 17\",\n    stroke: \"#3e85f3\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    fill: \"none\",\n    stroke: \"#3e85f3\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 4,\n    x1: 2.5,\n    x2: 19.2,\n    y1: 12,\n    y2: 12\n  }))))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.1d2b9ce1518f07dcb3f7883cfd3d73e4.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport * as signupGooseImg from \"../../../assets/images/register/signup_goose-min.png\";\nimport * as bigSignupGooseImg from \"../../../assets/images/register/signup_goose@2x-min.png\";\nimport * as loginGooseImg from \"../../../assets/images/login/login_goose-min.png\";\nimport * as bigLoginGooseImg from \"../../../assets/images/login/login_goose@2x-min.png\";\nimport * as arrowSvg from \"../../../assets/images/svg/arrow-right.svg\";\n\nconst setBgImage = (currentPage) => {\n  return currentPage === \"/register\"\n    ? `url(${signupGooseImg.default})`\n    : `url(${loginGooseImg.default})`;\n};\n\nconst setBigBgImage = (currentPage) => {\n  return currentPage === \"/register\"\n    ? `url(${bigSignupGooseImg.default})`\n    : `url(${bigLoginGooseImg.default})`;\n};\n\nexport const Container = styled.section`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--auth-bg-color);\n\n  @media screen and (min-width: 1440px) {\n    background-image: ${(prop) => setBgImage(prop.currentPage)};\n    background-size: ${(prop) =>\n      prop.currentPage === \"/register\" ? \"400px 416px\" : \"368px 521px\"};\n    background-position: ${(prop) =>\n      prop.currentPage === \"/register\"\n        ? \"left 50px bottom 0\"\n        : \"right 60px bottom 19px\"};\n    background-repeat: no-repeat;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${(prop) => setBigBgImage(prop.currentPage)};\n    }\n  }\n`;\n\nexport const ContentThumb = styled.div`\n  position: fixed;\n  top: 50%;\n  transform: translateY(-50%);\n\n  width: 100%;\n  padding: 0 20px;\n  text-align: center;\n\n  @media screen and (min-width: 375px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 480px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 480px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  margin-top: 18px;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.16;\n  color: var(--accent-bg-color);\n  text-decoration-line: underline;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  transition: color var(--animation);\n  :hover,\n  :focus {\n    color: var(--hover-btn-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n\nexport const StyledDetails = styled.details`\n  position: relative;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  font-family: var(--primary-font);\n  font-weight: 600;\n  color: var(--accent-bg-color);\n  cursor: pointer;\n\n  > summary {\n    list-style: none;\n\n    font-size: 16px;\n    text-decoration-line: underline;\n\n    ::-webkit-details-marker {\n      display: none;\n    }\n\n    transition: color var(--animation);\n    :hover,\n    :focus {\n      color: var(--hover-btn-bg-color);\n    }\n  }\n`;\n\nexport const StyledOption = styled.li`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  width: 100%;\n  font-size: 14px;\n  display: inline-block;\n  margin-top: 10px;\n\n  ::before {\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    transform: translate(50%, -50%);\n\n    content: \" \";\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    background-image: url(${arrowSvg.default});\n    background-size: contain;\n    background-repeat: no-repeat;\n\n    opacity: 0;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  ::after {\n    position: absolute;\n    top: 50%;\n    right: 25%;\n\n    content: \" \";\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-right: 5px;\n    background-image: url(${arrowSvg.default});\n    background-size: contain;\n    background-repeat: no-repeat;\n    transform: rotate(180deg) translate(0, 50%);\n\n    opacity: 0;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  transition: color var(--animation);\n  :hover,\n  :focus {\n    color: var(--hover-btn-bg-color);\n    ::before {\n      opacity: 1;\n    }\n    ::after {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    ::before {\n      position: absolute;\n      top: 50%;\n      left: 10%;\n      transform: translate(50%, -50%);\n    }\n    ::after {\n      position: absolute;\n      top: 50%;\n      right: 15%;\n      transform: rotate(180deg) translate(-50%, 50%);\n    }\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { RegisterForm } from \"../RegisterForm/RegisterForm\";\nimport { LoginForm } from \"../LoginForm/LoginForm\";\nimport { ResendEmailForm } from \"../ResendEmailForm/ResendEmailForm\";\nimport {\n  Container,\n  ContentThumb,\n  StyledLink,\n  StyledDetails,\n  StyledOption,\n} from \"./AuthNavigate.styled\";\n\nexport const AuthNavigate = ({ linkPath, linktext, children }) => {\n  const [userProblems, setUserPrioblems] = useState(null);\n  const location = useLocation();\n\n  const handleEmailResend = () => {\n    setUserPrioblems(\"email\");\n  };\n\n  const handleGoBack = () => {\n    setUserPrioblems(null);\n  };\n\n  return (\n    <Container currentPage={location.pathname}>\n      <ContentThumb>\n        {!userProblems ? (\n          <>\n            {location.pathname === \"/register\" ? (\n              <RegisterForm />\n            ) : (\n              <LoginForm />\n            )}\n            <StyledDetails>\n              <summary>Have some problems?</summary>\n              <ul style={{ margin: 0, padding: 0 }}>\n                <StyledOption onClick={handleEmailResend}>\n                  Resend verification email\n                </StyledOption>\n              </ul>\n            </StyledDetails>\n            <StyledLink to={linkPath}>{linktext}</StyledLink>\n          </>\n        ) : (\n          <>\n            <ResendEmailForm />\n            <StyledLink onClick={handleGoBack}>\n              Back to {location.pathname.slice(1)}\n            </StyledLink>\n          </>\n        )}\n      </ContentThumb>\n    </Container>\n  );\n};\n\nAuthNavigate.propTypes = {\n  linkPath: PropTypes.string.isRequired,\n  linktext: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nconst validateColor = (error, isSubmited, color) => {\n  if (!isSubmited) {\n    return color;\n  } else {\n    return error ? \"var(--error-text-color)\" : \"var(--correct-text-color)\";\n  }\n};\n\nconst validateBgColor = (auth, theme) =>\n  auth\n    ? `var(--primary-bg-color)`\n    : `${theme.variableColors.secondaryBackground}`;\n\nconst validateLabelColor = (auth, theme) =>\n  auth\n    ? `var(--primary-text-color)`\n    : `${theme.variableColors.labelUserFormTextColor}`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n\n  font-size: 12px;\n  color: ${({ error, isSubmited, theme, auth }) =>\n    validateColor(error, isSubmited, validateLabelColor(auth, theme))};\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputThumb = styled.span`\n  position: absolute;\n  top: 23px;\n  left: 0;\n\n  display: inline-block;\n  margin: 0;\n  width: 100%;\n  height: 46px;\n\n  @media screen and (min-width: 768px) {\n    top: 25px;\n    height: 54px;\n  }\n\n  > svg {\n    position: absolute;\n    bottom: 14px;\n    right: 8px;\n    width: 24px;\n    height: 24px;\n\n    @media screen and (min-width: 768px) {\n      bottom: 18px;\n    }\n  }\n\n  > button {\n    position: absolute;\n    bottom: 0;\n    right: 24px;\n\n    width: 46px;\n    height: 46px;\n    background-color: transparent;\n    color: var(--auth-placeholder-color);\n\n    @media screen and (min-width: 768px) {\n      width: 54px;\n      height: 54px;\n    }\n\n    > svg {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin-top: 8px;\n  padding: 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  background-color: ${({ auth, theme }) => validateBgColor(auth, theme)};\n  outline: 2px solid transparent;\n  outline-color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"transparent\")};\n  transition: outline var(--animation);\n\n  color: ${({ theme, auth }) => validateLabelColor(auth, theme)};\n  font-size: 14px;\n  line-height: 18px;\n\n  ::placeholder {\n    color: var(--auth-placeholder-color);\n  }\n\n  :hover,\n  :focus {\n    outline: 2px solid var(--primary-text-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: 16px;\n  }\n\n  &[type=\"password\"] {\n    ::placeholder {\n      font-family: var(--primary-font);\n      letter-spacing: 0;\n    }\n\n    :not(:placeholder-shown) {\n      font-family: Verdana, sans-serif;\n      letter-spacing: 1px;\n    }\n  }\n`;\n\nexport const StyledValidation = styled.p`\n  margin-top: 8px;\n  margin-left: 14px;\n  font-size: 12px;\n  line-height: 1.16;\n  color: ${({ error, isSubmited }) =>\n    validateColor(error, isSubmited, \"var(--primary-text-color)\")};\n\n  @media screen and (min-width: 768px) {\n    margin-left: 18px;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nimport { LuEye, LuEyeOff } from \"react-icons/lu\";\nimport {\n  AiOutlineExclamationCircle,\n  AiOutlineCheckCircle,\n} from \"react-icons/ai\";\n\nimport {\n  StyledLabel,\n  InputThumb,\n  StyledInput,\n  StyledValidation,\n} from \"./FormInput.styled\";\n\nexport const FormInput = ({\n  text,\n  name,\n  type,\n  placeholder,\n  isSubmited,\n  formik,\n  setAllowSubmit,\n  user,\n  auth,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleClick = () => {\n    setIsVisible((prevState) => !prevState);\n  };\n\n  const handleIcon = (error) => {\n    if (!isSubmited) {\n      return;\n    }\n\n    return error ? <AiOutlineExclamationCircle /> : <AiOutlineCheckCircle />;\n  };\n\n  const handleChange = (e) => {\n    formik.handleChange(e);\n    if (!setAllowSubmit || !user) {\n      return;\n    }\n\n    if (user[`${name}`] !== e.target.value) {\n      setAllowSubmit(true);\n    } else {\n      setAllowSubmit(false);\n    }\n  };\n\n  return (\n    <StyledLabel\n      auth={auth}\n      isSubmited={isSubmited}\n      error={formik.errors[`${name}`]}\n    >\n      {text}\n      <StyledInput\n        type={isVisible ? \"text\" : type}\n        name={name}\n        placeholder={placeholder}\n        onChange={handleChange}\n        value={formik.values[`${name}`]}\n        isSubmited={isSubmited}\n        error={formik.errors[`${name}`]}\n        auth={auth}\n      />\n      {formik.touched[`${name}`] && (\n        <StyledValidation\n          isSubmited={isSubmited}\n          error={formik.errors[`${name}`]}\n        >\n          {formik.errors[`${name}`]\n            ? formik.errors[`${name}`]\n            : `This is a CORRECT ${name}`}\n        </StyledValidation>\n      )}\n      <InputThumb>\n        {handleIcon(formik.errors[`${name}`])}\n        {name === \"password\" && (\n          <button type=\"button\" onClick={handleClick}>\n            {isVisible ? <LuEye /> : <LuEyeOff />}\n          </button>\n        )}\n      </InputThumb>\n    </StyledLabel>\n  );\n};\n\nFormInput.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  isSubmited: PropTypes.bool.isRequired,\n  formik: PropTypes.object.isRequired,\n  setAllowSubmit: PropTypes.func,\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.string,\n    phone: PropTypes.string,\n    skype: PropTypes.string,\n    imgURL: PropTypes.string,\n    updatedEmail: PropTypes.string,\n  }),\n};\n"],"names":["StyledForm","styled","form","_templateObject","_taggedTemplateLiteral","Title","h2","_templateObject2","SubmitBtn","button","_templateObject3","RegisterForm","_useState","useState","_useState2","_slicedToArray","isSubmited","setIsSubmited","dispatch","useDispatch","formik","useFormik","initialValues","username","email","password","validationSchema","RegisterSchema","onSubmit","values","_ref","resetForm","register","_jsxs","children","_jsx","FormInput","text","name","type","placeholder","auth","onClick","e","preventDefault","handleSubmit","LuLogIn","StyledLoginForm","LoginTitle","LoginSubmitBtn","LoginForm","LoginSchema","login","EmailForm","EmailTitle","EmailSubmitBtn","ResendEmailForm","_useState3","_useState4","isDisabled","setIsDisabled","_useState5","_useState6","seconds","setSeconds","useEffect","setTimeout","EmailSchema","axios","post","then","response","toast","success","data","message","catch","err","error","disabled","concat","Container","section","prop","currentPage","signupGooseImg","loginGooseImg","bigSignupGooseImg","bigLoginGooseImg","ContentThumb","div","StyledLink","Link","StyledDetails","details","_templateObject4","StyledOption","li","_templateObject5","arrowSvg","AuthNavigate","linkPath","linktext","userProblems","setUserPrioblems","location","useLocation","pathname","_Fragment","slice","style","margin","padding","to","validateColor","color","validateLabelColor","theme","variableColors","labelUserFormTextColor","StyledLabel","label","InputThumb","span","StyledInput","input","_ref2","secondaryBackground","validateBgColor","_ref3","_ref4","StyledValidation","p","_ref5","setAllowSubmit","user","isVisible","setIsVisible","errors","onChange","handleChange","target","value","touched","AiOutlineExclamationCircle","AiOutlineCheckCircle","handleIcon","prevState","LuEye","LuEyeOff"],"sourceRoot":""}