{"version":3,"file":"static/js/786.d232c2f9.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsChart/StatisticsChart.styled.js","components/StatisticsPage/StatisticsChart/ButtData.styled.js","components/StatisticsPage/StatisticsChart/ButtData.js","components/StatisticsPage/StatisticsChart/StatisticsChart.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const Container = styled.section`\n  width: 1087px;\n  /* height: 752px; */\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  padding-left:113px;\n  padding-right: 114px;\n  padding-top: 142px;\n  padding-bottom:104px;\n`;\nexport const ChartHead = styled.div`\ndisplay:flex;\njustify-content: space-between;\nmargin-bottom:40px;\n`;\nexport const LegendList = styled.ul`\n  display: flex;\n  gap: 30px;\n  /* list-style: disc; */\n  color: ${({ theme }) => theme.variableColors.text};\n  li{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nexport const Chart = styled.div`\n  width: 860px;\n  height: 440px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 32px;\n\n  background-color: ${({ theme }) => theme.variableColors.secondaryBackground};\n  color: #fff;\n\n  padding: 10px;\n  border-radius: 29px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  /* margin-left: 40px; */\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding: 20px;\n  }\n`;\n","import styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport const PrevDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background: transparent;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const NextDayButton = styled.button`\n  width: 38px;\n  height: 34px;\n  border: 0.8px solid ${({ theme }) => theme.variableColors.borderColor};\n  background: transparent;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker__wrapper {\n    position: relative;\n  }\n\n  .react-datepicker {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-1%, 0%);\n    font-family: \"InterRegular\";\n    padding: 12px;\n    border-radius: 16px;\n    background-color: var(--accent-bg-color);\n\n    @media (min-width: 768px) {\n      padding: 18px;\n      transform: translate(-8%, 0%);\n    }\n  }\n\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: inherit;\n  }\n\n  .react-datepicker__header {\n    font-family: \"InterRegular\";\n    text-align: center;\n    background-color: var(--accent-bg-color);\n    border-top-right-radius: 16px;\n    border-top-left-radius: 16px;\n    position: relative;\n  }\n\n  .react-datepicker__day-names {\n    display: flex;\n    border-bottom: 1px solid #ffffff33;\n    padding: 12px 0;\n    justify-content: space-between;\n\n    @media (min-width: 768px) {\n      padding: 16px 0;\n    }\n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-top-right-radius: 16px;\n    border-bottom: 0px;\n    padding: 0;\n  }\n\n  .react-datepicker__current-month {\n    font-family: \"InterSemiBold\";\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 24px;\n      line-height: 28px;\n    }\n  }\n\n  .react-datepicker__day-name {\n    font-family: \"InterSemiBold\";\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    margin: 0;\n    color: var(--light-text-color);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n    }\n  }\n\n  .react-datepicker__navigation {\n    margin-top: 7px;\n\n    @media (min-width: 768px) {\n      margin-top: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n\n    @media (min-width: 768px) {\n      left: 17px;\n    }\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n\n    @media (min-width: 768px) {\n      right: 17px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before {\n    display: inline-block;\n    border-color: var(--light-text-color);\n    transition: border-color var(--animation);\n\n    @media (max-width: 767px) {\n      border-width: 2px 2px 0 0;\n      height: 9px;\n      width: 9px;\n    }\n\n    @media (min-width: 768px) {\n      margin-top: -2px;\n      height: 12px;\n      width: 12px;\n    }\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: var(--light-text-color);\n  }\n\n  .react-datepicker__week {\n    display: flex;\n    gap: 7px;\n\n    color: var(--light-text-color);\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    font-family: \"InterRegular\";\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 0em;\n    text-align: center;\n    color: var(--light-text-color);\n    width: 32px;\n    height: 32px;\n    margin: 0;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 32px;\n    transition: color var(--animation), background-color var(--animation);\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n      line-height: 24px;\n      width: 48px;\n      height: 48px;\n      line-height: 48px;\n    }\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 16px;\n    margin: 0;\n\n    @media (min-width: 768px) {\n      padding-top: 20px;\n    }\n  }\n\n  .react-datepicker__day--selected {\n    background-color: var(--light-text-color);\n    color: var(--accent-bg-color);\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: var(--primary-bg-color);\n    color: var(--accent-bg-color);\n    cursor: pointer;\n  }\n\n  .react-datepicker__day--outside-month {\n    color: var(--accent-bg-color);\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n\n  .react-datepicker__triangle,\n  .react-datepicker__aria-live {\n    display: none;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  position: relative;\n  width: 134px;\n  height: 42px;\n  margin-right:8px;\n  border: ${({ hasError, success }) => {\n    if (hasError) {\n      return \"var(--border-auth-error)\";\n    }\n    if (success) {\n      return \"var(--border-auth-correct)\";\n    }\n    return \"var(--border)\";\n  }};\n  border-radius: 8px;\n  font-family: \"InterSemiBold\";\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  outline: none;\n  padding: 12px 12px 12px 14px;\n  box-sizing: border-box;\n  color: white;\n  background-color: #3e85f3;\n\n  :focus-visible {\n    outline: none;\n    border: var(--border-input-hover);\n    border-radius: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 145px;\n    height: 34px;\n    font-size: 16px;\n    line-height: 1.2;\n    padding: 14px 14px 14px 18px;\n  }\n  transition: border var(--animation);\n\n  :hover,\n  :focus {\n    border: ${({ hasError, success }) => {\n      if (hasError) {\n        return \"var(--border-auth-error)\";\n      }\n      if (success) {\n        return \"var(--border-auth-correct)\";\n      }\n      return \"var(--border-input-hover)\";\n    }};\n  }\n`;\n","import { useState, useEffect, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from \"react-icons/md\";\n\nimport {\n  StyledDatePicker,\n  DatePickerWrapper,\n  DataContainer,\n  PrevDayButton,\n  NextDayButton,\n} from \"./ButtData.styled\";\nimport { getTasksByMonth } from \"redux/tasks/operations\";\n\n\n\nconst DateButton = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handlePreviousDay = () => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(newDate.getDate() - 1);\n    setSelectedDate(newDate);\n  };\n\n  const handleNextDay = () => {\n    const newDate = new Date(selectedDate);\n    newDate.setDate(newDate.getDate() + 1);\n    setSelectedDate(newDate);\n  };\n  const dispatch = useDispatch();\n  \n  const params = useMemo(() =>\n  {\n    return {year: `${selectedDate.getFullYear()}`,\n    month: `${selectedDate.getMonth()+1}`.padStart(2, \"0\")}\n  }, [selectedDate])\n  \n  // console.log(params)\n\n  useEffect(() => {\n    dispatch(getTasksByMonth(params));\n  }, [params, selectedDate, dispatch]);\n\n  return (\n    <DataContainer>\n      <DatePickerWrapper>\n        <StyledDatePicker\n          selected={selectedDate}\n          onChange={(date) => setSelectedDate(date)}\n          dateFormat=\"d MMMM yyyy \"\n        />\n      </DatePickerWrapper>\n      <PrevDayButton onClick={handlePreviousDay}>\n        <MdOutlineKeyboardArrowLeft />\n      </PrevDayButton>\n      <NextDayButton onClick={handleNextDay}>\n        <MdOutlineKeyboardArrowRight />\n      </NextDayButton>\n    </DataContainer>\n  );\n};\n\nexport default DateButton;","import { useSelector } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  //   Cell,\n  XAxis,\n  YAxis,\n  Label,\n  CartesianGrid,\n  // Tooltip,\n  LabelList,\n  // Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport {\n  Chart,\n  Container,\n  ChartHead,\n  LegendList,\n} from \"./StatisticsChart.styled\";\n\nimport { TbPointFilled } from \"react-icons/tb\";\n\nimport DateButton from \"./ButtData\";\nimport { selectMonthTasks } from \"redux/tasks/selectors\";\n\n\n\n\n\nexport const StatisticsChart = () => {\n  const currentTheme = useSelector((state) => state.theme.currentTheme);\n  const tasks = useSelector(selectMonthTasks);\n  // console.log(tasks);\n  const todoByM = tasks.filter((task) => task.category === \"To do\").length;\n  const inprogressByM = tasks.filter((task) => task.category === \"In progress\").length;\n  const doneByM = tasks.filter((task) => task.category === \"Done\").length;\n\n\n\nconst todoByDay = 3;\nconst inprogressByDay = 2;\nconst doneByDay = 4;\nconst allTasksByDay = todoByDay + inprogressByDay + doneByDay;\nconst todoByDayPer = Math.round((todoByDay / allTasksByDay) * 100);\nconst inprogressByDayPer = Math.round((inprogressByDay / allTasksByDay) * 100);\nconst doneByDayPer = Math.round((doneByDay / allTasksByDay) * 100);\n  \n  // const todoByM = 30;\n// const inprogressByM = 30;\n// const doneByM = 40;\nconst allTasksByM = todoByM + inprogressByM + doneByM;\nconst todoByMPer = Math.round((todoByM / allTasksByM) * 100);\nconst inprogressByMPer = Math.round((inprogressByM / allTasksByM) * 100);\n  const doneByMPer = Math.round((doneByM / allTasksByM) * 100);\n  console.log(`todoByM ${todoByM}`);\n  console.log(`inprogressByM ${inprogressByM}`);\n  console.log(`doneByM ${doneByM}`);\n  console.log(`allTasksByM ${allTasksByM}`);\n\n\nconst data = [\n  {\n    name: \"To Do\",\n    ByDay: todoByDayPer,\n    ByMonth: todoByMPer,\n    amt: 2400,\n  },\n  {\n    name: \"In Progress\",\n    ByDay: inprogressByDayPer,\n    ByMonth: inprogressByMPer,\n    amt: 2210,\n  },\n  {\n    name: \"Done\",\n    ByDay: doneByDayPer,\n    ByMonth: doneByMPer,\n    amt: 2290,\n  },\n];\n\n\n\n  const renderCustomizedLabel = (props) => {\n    const { x, y, width, value } = props;\n    const radius = 15;\n\n    return currentTheme ? (\n      <g>\n        <text\n          x={x + 2 + width / 2}\n          y={y - radius}\n          fill=\"##111111\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    ) : (\n      <g>\n        <text\n          x={x + 2 + width / 2}\n          y={y - radius}\n          fill=\"#FFFFFF\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {`${value}%`}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <Container>\n      <ChartHead>\n        <DateButton />\n        <LegendList>\n          <li>\n            <TbPointFilled color=\"#FFD2DD\" size={20} />\n            <span>By Day</span>\n          </li>\n          <li>\n            <TbPointFilled color=\"#3E85F3\" size={20} />\n            <span>By Month</span>\n          </li>\n        </LegendList>\n      </ChartHead>\n      <Chart>\n        <ResponsiveContainer width={800} height=\"80%\">\n          <BarChart\n            width={780}\n            height={400}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n            barCategoryGap={75}\n            barGap={10}\n            barSize={27}\n          >\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"0%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={0}\n                />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={1}\n                />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"0%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={0}\n                />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={1}\n                />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} />\n            <XAxis dataKey=\"name\" tickLine={false} tickMargin={16} />\n\n            <YAxis\n              type=\"number\"\n              domain={[0, 100]}\n              position=\"left\"\n              axisLine={false}\n              tickLine={false}\n              tickMargin={50}\n            >\n              <Label value=\"Task\" position=\"top\" offset={-8} />\n            </YAxis>\n            {/* <Tooltip /> */}\n            {/* <Legend /> */}\n            <Bar\n              dataKey=\"ByDay\"\n              fill=\"url(#colorUv)\"\n              radius={[0, 0, 10, 10]}\n              // maxBarSize={27}\n            >\n              <LabelList\n                dataKey=\"ByDay\"\n                position=\"top\"\n                content={renderCustomizedLabel}\n              />\n            </Bar>\n            <Bar\n              dataKey=\"ByMonth\"\n              // ${({theme})=>theme.testcolor1}\n              fill=\"url(#colorUv1)\"\n              radius={[0, 0, 10, 10]}\n              // maxBarSize={27}\n            >\n              <LabelList\n                dataKey=\"ByMonth\"\n                position=\"top\"\n                content={renderCustomizedLabel}\n              />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </Chart>\n    </Container>\n  );\n};\n","import { StatisticsChart } from \"components/StatisticsPage/StatisticsChart/StatisticsChart\";\nfunction StatisticsPage() {\n  return(\n  <>\n      <StatisticsChart/>\n  </>)\n}\n\nexport default StatisticsPage;\n"],"names":["Container","styled","section","_templateObject","_taggedTemplateLiteral","_ref","theme","variableColors","secondaryBackground","ChartHead","div","_templateObject2","LegendList","ul","_templateObject3","_ref2","text","Chart","_templateObject4","_ref3","_ref4","borderColor","PrevDayButton","button","NextDayButton","DataContainer","DatePickerWrapper","StyledDatePicker","DatePicker","_templateObject5","hasError","success","_useState","useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","dispatch","useDispatch","params","useMemo","year","concat","getFullYear","month","getMonth","padStart","useEffect","getTasksByMonth","_jsxs","children","_jsx","selected","onChange","date","dateFormat","onClick","newDate","setDate","getDate","MdOutlineKeyboardArrowLeft","MdOutlineKeyboardArrowRight","StatisticsChart","currentTheme","useSelector","state","tasks","selectMonthTasks","todoByM","filter","task","category","length","inprogressByM","doneByM","todoByDayPer","Math","round","todoByDay","inprogressByDayPer","doneByDayPer","allTasksByM","todoByMPer","inprogressByMPer","doneByMPer","console","log","data","name","ByDay","ByMonth","amt","renderCustomizedLabel","props","x","y","width","value","fill","textAnchor","dominantBaseline","DateButton","TbPointFilled","color","size","ResponsiveContainer","height","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","barSize","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","XAxis","dataKey","tickLine","tickMargin","YAxis","type","domain","position","axisLine","Label","Bar","radius","LabelList","content","_Fragment"],"sourceRoot":""}